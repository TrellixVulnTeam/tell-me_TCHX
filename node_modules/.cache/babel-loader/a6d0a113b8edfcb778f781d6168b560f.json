{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/Input.jsx\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport './../scss//components/_input.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(props) {\n  const inputType = props.type || 'text';\n  const htmlFor = `${inputType}-${Math.random()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames('input'),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: htmlFor,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: inputType,\n      id: htmlFor,\n      value: props.value,\n      onChange: props.onChange,\n      name: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this), props.formErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"invalid\",\n      children: props.formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/Input.jsx"],"names":["classNames","React","Input","props","inputType","type","htmlFor","Math","random","label","value","onChange","name","formErrors","length"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mCAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAElB,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAN,IAAc,MAAhC;AACA,QAAMC,OAAO,GAAI,GAAEF,SAAU,IAAGG,IAAI,CAACC,MAAL,EAAc,EAA9C;AAEF,sBACE;AAAK,IAAA,SAAS,EAAER,UAAU,CAAC,OAAD,CAA1B;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEM,OAAhB;AAAA,gBAA0BH,KAAK,CAACM;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEM;AACI,MAAA,IAAI,EAAEL,SADV;AAEI,MAAA,EAAE,EAAEE,OAFR;AAGI,MAAA,KAAK,EAAEH,KAAK,CAACO,KAHjB;AAIF,MAAA,QAAQ,EAAEP,KAAK,CAACQ,QAJd;AAKF,MAAA,IAAI,EAAER,KAAK,CAACS;AALV;AAAA;AAAA;AAAA;AAAA,YAFN,EAUIT,KAAK,CAACU,UAAN,CAAiBC,MAAjB,GAA0B,CAA1B,iBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBAA2BX,KAAK,CAACU;AAAjC;AAAA;AAAA;AAAA;AAAA,YAXN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KAvBQX,K;AAyBT,eAAeA,KAAf","sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport './../scss//components/_input.scss'\n\nfunction Input(props) {\n\n    const inputType = props.type || 'text';\n    const htmlFor = `${inputType}-${Math.random()}`\n\n  return (\n    <div className={classNames('input')}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n          <input\n              type={inputType}\n              id={htmlFor}\n              value={props.value}\n        onChange={props.onChange}\n        name={props.name}\n      />\n      {\n        props.formErrors.length > 0 && (\n          <span className='invalid'>{props.formErrors}</span>\n        )\n      }\n\n    </div>\n  );\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}