{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\nimport { useSelector } from \"react-redux\";\nimport { Comment } from \"./index\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setDataCreateComment, setDataDeletePost, setDataOfPost } from \"../redux/action\";\nimport { obj } from \"pumpify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Post = () => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [updPost, setUpdPost] = React.useState({\n    body: \"\",\n    title: \"\",\n    openEdit: false,\n    response: {}\n  });\n  const dataPost = useSelector(state => state.posts.dataPost);\n  const comments = useSelector(state => state.commentsReducer.comments);\n  console.log(dataPost);\n  let dataAboutUser = JSON.parse(localStorage.user);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []); // const findId = (obj) => {\n  // if (obj.id === localStorage.getItem(\"idPost\")) {\n  // }\n  // };\n\n  const isEmptyObject = obj => {\n    for (let property in obj) {\n      if (obj.hasOwnProperty(property)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/664/posts`).then(response => response.json()).then(data => {\n      if (isEmptyObject(dataPost)) {\n        // console.log(data.find(obj=>obj === 10));\n        dispatch(setDataOfPost(data.find(obj => obj.id === 10)));\n      }\n    });\n  });\n\n  const updatePost = async (title, body) => {\n    const data = {\n      title,\n      body,\n      updateAt: datetime\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/posts/${dataPost.id}`, data, {\n      headers\n    }).then(response => dispatch(setDataOfPost(response.data)));\n    setUpdPost(prevState => ({ ...prevState,\n      openEdit: false\n    }));\n  };\n\n  const deletePost = id => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`, {\n      headers\n    });\n    dispatch(setDataDeletePost(id));\n  };\n\n  const openEditPost = (body, title) => {\n    setUpdPost({\n      body,\n      title,\n      openEdit: true\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdPost(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleChangeUserComment = e => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = postId => {\n    setNewComment(\"\");\n    const data = {\n      postId,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n      userId: dataAboutUser.id\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`, data, {\n      headers\n    }).then(response => dispatch(setDataCreateComment(response.data)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    id: `post-${dataPost.id}`,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Tell \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), updPost.openEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-title\",\n        value: updPost.title,\n        onChange: handleChange,\n        name: \"title\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-body\",\n        value: updPost.body,\n        onChange: handleChange,\n        name: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames(\"button-post\", \"button\"),\n        onClick: () => updatePost(updPost.title, updPost.body, dataPost.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: dataPost.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-body\",\n            children: dataPost.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-user\",\n            children: [usersData.firstname, \" \", usersData.lastname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), localStorage.getItem(\"token\") && usersData.id === dataAboutUser.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classNames(\"button-post\", \"button\"),\n              onClick: () => openEditPost(dataPost.body, dataPost.title),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                to: \"/\",\n                className: classNames(\"button-post\", \"button\"),\n                onClick: () => deletePost(dataPost.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-of-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, { ...comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: dataAboutUser.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: handleChangeUserComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              addComment(dataPost.id);\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"sJaxkBgilGEl7ZkbfkCObTmGi6k=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx"],"names":["axios","classNames","React","useSelector","Comment","Link","useDispatch","setDataCreateComment","setDataDeletePost","setDataOfPost","obj","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Post","usersData","setUsersData","useState","newComment","setNewComment","updPost","setUpdPost","body","title","openEdit","response","dataPost","state","posts","comments","commentsReducer","console","log","dataAboutUser","JSON","parse","localStorage","user","dispatch","useEffect","fetch","userId","then","json","data","isEmptyObject","property","hasOwnProperty","find","id","updatePost","updateAt","headers","Authorization","getItem","slice","patch","prevState","deletePost","delete","openEditPost","handleChange","e","name","value","target","handleChangeUserComment","preventDefault","addComment","postId","createdAt","updatedAt","post","firstname","lastname","map","comment","avatar"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\n\nimport { useSelector } from \"react-redux\";\nimport { Comment } from \"./index\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setDataCreateComment,\n  setDataDeletePost,\n  setDataOfPost,\n} from \"../redux/action\";\nimport { obj } from \"pumpify\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Post = () => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [updPost, setUpdPost] = React.useState({\n    body: \"\",\n    title: \"\",\n    openEdit: false,\n    response: {},\n  });\n\n  const dataPost = useSelector((state) => state.posts.dataPost);\n  const comments = useSelector((state) => state.commentsReducer.comments);\n  console.log(dataPost);\n\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n  // const findId = (obj) => {\n    // if (obj.id === localStorage.getItem(\"idPost\")) {\n    // }\n  // };\n\n  const isEmptyObject = (obj) => {\n    for (let property in obj) {\n      if (obj.hasOwnProperty(property)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/664/posts`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (isEmptyObject(dataPost)) {\n          // console.log(data.find(obj=>obj === 10));\n\n             dispatch(setDataOfPost(data.find(obj=>obj.id === 10)));\n        }\n      });\n  });\n\n  const updatePost = async (title, body) => {\n    const data = {\n      title,\n      body,\n      updateAt: datetime,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios\n      .patch(\n        `https://ekreative-json-server.herokuapp.com/664/posts/${dataPost.id}`,\n        data,\n        { headers }\n      )\n      .then((response) => dispatch(setDataOfPost(response.data)));\n\n    setUpdPost((prevState) => ({\n      ...prevState,\n      openEdit: false,\n    }));\n  };\n\n  const deletePost = (id) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/posts/${id}`,\n      { headers }\n    );\n    dispatch(setDataDeletePost(id));\n  };\n\n  const openEditPost = (body, title) => {\n    setUpdPost({\n      body,\n      title,\n      openEdit: true,\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUpdPost((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleChangeUserComment = (e) => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = (postId) => {\n    setNewComment(\"\");\n    const data = {\n      postId,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n      userId: dataAboutUser.id,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios\n      .post(`https://ekreative-json-server.herokuapp.com/664/comments`, data, {\n        headers,\n      })\n      .then((response) => dispatch(setDataCreateComment(response.data)));\n  };\n\n  return (\n    <div className=\"post\" id={`post-${dataPost.id}`}>\n      <Link to=\"/\" className=\"logo\">\n        <h2 className=\"logo\">\n          Tell <span>me</span>\n        </h2>\n      </Link>\n      {updPost.openEdit ? (\n        <div className=\"content-post-edit\">\n          <input\n            className=\"input-title\"\n            value={updPost.title}\n            onChange={handleChange}\n            name=\"title\"\n            type=\"text\"\n          />\n          <textarea\n            className=\"input-body\"\n            value={updPost.body}\n            onChange={handleChange}\n            name=\"body\"\n          />\n          <button\n            className={classNames(\"button-post\", \"button\")}\n            onClick={() => updatePost(updPost.title, updPost.body, dataPost.id)}\n          >\n            Edit\n          </button>\n        </div>\n      ) : (\n        <div className=\"content-post\">\n          <div className=\"\">\n            <div className=\"content\">\n              <h3>{dataPost.title}</h3>\n              <p className=\"post-body\">{dataPost.body}</p>\n            </div>\n            <div className=\"bottom-content\">\n              <p className=\"post-user\">\n                {usersData.firstname} {usersData.lastname}\n              </p>\n              {localStorage.getItem(\"token\") &&\n              usersData.id === dataAboutUser.id ? (\n                <div className=\"content-button\">\n                  <button\n                    className={classNames(\"button-post\", \"button\")}\n                    onClick={() => openEditPost(dataPost.body, dataPost.title)}\n                  >\n                    Edit\n                  </button>\n                  <Link to=\"/\">\n                    <button\n                      to={\"/\"}\n                      className={classNames(\"button-post\", \"button\")}\n                      onClick={() => deletePost(dataPost.id)}\n                    >\n                      Delete\n                    </button>\n                  </Link>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div className=\"comments-of-post\">\n            <h3>comments</h3>\n            {comments.map((comment) => (\n              <Comment key={comment.id} {...comment} />\n            ))}\n            {localStorage.getItem(\"token\") ? (\n              <div className=\"comment-input-block\">\n                <img src={dataAboutUser.avatar} alt=\"\" />\n                <input\n                  type=\"text\"\n                  value={newComment}\n                  onChange={handleChangeUserComment}\n                />\n                <button\n                  onClick={() => {\n                    addComment(dataPost.id);\n                  }}\n                >\n                  &#43;\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}