{"ast":null,"code":"export const ADD_DATA_TO_EDIT = \"ADD_DATA_TO_EDIT\";\nexport const DATA_USER = \"DATA_USER\";\nexport const GET_POSTS_PAGE = \"GET_POSTS_PAGE\";\nexport const ANNOUN_USER = \"ANNOUN_USER\";\nexport const DATA_EDIT_ANNOUN = \"DATA_EDIT_ANNOUN\";\nexport const DATA_OF_POST = \"DATA_OF_POST\";\nexport const POSTS = \"POSTS\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DATA_ANNOUN = 'DATA_ANNOUN';\nexport const setAddData = _ref => {\n  let {\n    id,\n    title,\n    body,\n    userId,\n    createdAt,\n    key\n  } = _ref;\n  return {\n    type: ADD_DATA_TO_EDIT,\n    id,\n    title,\n    body,\n    userId,\n    createdAt,\n    key\n  };\n};\nexport const setDataUser = _ref2 => {\n  let {\n    id,\n    email,\n    firstname,\n    lastname,\n    age,\n    avatar\n  } = _ref2;\n  return {\n    type: DATA_USER,\n    id,\n    email,\n    firstname,\n    lastname,\n    age,\n    avatar\n  };\n};\nexport const setGetPostsPage = (number, postsPerPage) => async dispatch => {\n  // const header = {\"Content-Type\": \"application/json\"}\n  const response = await fetch(`https://ekreative-json-server.herokuapp.com/posts?_page=${number}&_limit=${postsPerPage}`).then(response => response.json()).then(data => {\n    return data;\n  });\n  dispatch({\n    type: GET_POSTS_PAGE,\n    payload: response\n  });\n};\nexport const setAnnounUser = userId => async dispatch => {\n  // const header = {\"Content-Type\": \"application/json\"}\n  const response = await fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`).then(response => response.json()).then(data => {\n    return data;\n  });\n  dispatch({\n    type: ANNOUN_USER,\n    dataUser: response\n  });\n};\nexport const setDataEditAnnoun = data => ({\n  type: DATA_EDIT_ANNOUN,\n  data\n});\nexport const setDataOfPost = dataPost => ({\n  type: DATA_OF_POST,\n  payload: dataPost\n});\nexport const setPosts = posts => ({\n  type: POSTS,\n  payload: posts\n});\nexport const updatePostData = updatedPost => ({\n  type: UPDATE_POST,\n  payload: updatedPost\n});\nexport const setDataAnnouncements = data => ({\n  type: DATA_ANNOUN,\n  payload: data\n});","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/redux/action.js"],"names":["ADD_DATA_TO_EDIT","DATA_USER","GET_POSTS_PAGE","ANNOUN_USER","DATA_EDIT_ANNOUN","DATA_OF_POST","POSTS","UPDATE_POST","DATA_ANNOUN","setAddData","id","title","body","userId","createdAt","key","type","setDataUser","email","firstname","lastname","age","avatar","setGetPostsPage","number","postsPerPage","dispatch","response","fetch","then","json","data","payload","setAnnounUser","dataUser","setDataEditAnnoun","setDataOfPost","dataPost","setPosts","posts","updatePostData","updatedPost","setDataAnnouncements"],"mappings":"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","sourcesContent":["export const ADD_DATA_TO_EDIT = \"ADD_DATA_TO_EDIT\";\nexport const DATA_USER = \"DATA_USER\";\nexport const GET_POSTS_PAGE = \"GET_POSTS_PAGE\";\nexport const ANNOUN_USER = \"ANNOUN_USER\";\nexport const DATA_EDIT_ANNOUN = \"DATA_EDIT_ANNOUN\";\nexport const DATA_OF_POST = \"DATA_OF_POST\";\nexport const POSTS = \"POSTS\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DATA_ANNOUN = 'DATA_ANNOUN'\n\nexport const setAddData = ({ id, title, body, userId, createdAt, key }) => ({\n  type: ADD_DATA_TO_EDIT,\n  id,\n  title,\n  body,\n  userId,\n  createdAt,\n  key,\n});\n\nexport const setDataUser = ({\n  id,\n  email,\n  firstname,\n  lastname,\n  age,\n  avatar,\n}) => ({\n  type: DATA_USER,\n  id,\n  email,\n  firstname,\n  lastname,\n  age,\n  avatar,\n});\n\nexport const setGetPostsPage = (number, postsPerPage) => async (dispatch) => {\n  // const header = {\"Content-Type\": \"application/json\"}\n  const response = await fetch(\n    `https://ekreative-json-server.herokuapp.com/posts?_page=${number}&_limit=${postsPerPage}`\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    });\n\n  dispatch({\n    type: GET_POSTS_PAGE,\n    payload: response,\n  });\n};\n\nexport const setAnnounUser = (userId) => async (dispatch) => {\n  // const header = {\"Content-Type\": \"application/json\"}\n  const response = await fetch(\n    `https://ekreative-json-server.herokuapp.com/users/${userId}`\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    });\n\n  dispatch({\n    type: ANNOUN_USER,\n    dataUser: response,\n  });\n};\n\nexport const setDataEditAnnoun = (data) => ({\n  type: DATA_EDIT_ANNOUN,\n  data,\n});\n\nexport const setDataOfPost = (dataPost) => ({\n    type: DATA_OF_POST, payload: dataPost\n  })\n\nexport const setPosts = (posts) => ({\n  type: POSTS,\n  payload: posts,\n});\n\nexport const updatePostData = (updatedPost) => ({\n  type: UPDATE_POST,\n  payload: updatedPost,\n});\n\nexport const setDataAnnouncements = (data) => ({\n  type: DATA_ANNOUN,\n  payload: data\n})\n"]},"metadata":{},"sourceType":"module"}