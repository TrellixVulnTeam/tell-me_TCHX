{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Authorization.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Input } from \"../conponents/index\";\nimport \"./../scss/app.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Authorization() {\n  _s();\n\n  const [state, setState] = React.useState({\n    isFormValid: false,\n    formData: {\n      userName: {\n        // value: \"\",\n        type: \"text\",\n        label: \"first and last name\",\n        errorMessage: \"fill in the field\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          userName: true\n        }\n      },\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"email\",\n        errorMessage: \"enter correct email\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: \"\",\n        type: \"text\",\n        label: \"password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          password: 9\n        }\n      },\n      confirmationPassword: {\n        value: \"\",\n        type: \"text\",\n        label: \"confirmation password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          confirmationPassword: true\n        }\n      },\n      age: {\n        value: \"\",\n        type: \"number\",\n        label: \"age\",\n        errorMessage: \"fill in the field\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          age: true\n        }\n      },\n      avatar: {\n        value: \"\",\n        type: \"url\",\n        label: \"your avatar\",\n        errorMessage: \"enter correct url\",\n        valide: false,\n        touched: false\n      }\n    }\n  });\n\n  const changeInput = (event, controlData) => {\n    const formData = { ...state.formData\n    };\n    const data = { ...formData[controlData]\n    };\n    data.value = event.target.value;\n    data.touched = true;\n    data.valide = validateData(data.value, data.validation);\n    formData[controlData] = data;\n    let isFormValid = true;\n    Object.keys(formData).forEach(name => {\n      isFormValid = formData[name].valid && isFormValid;\n    });\n    setState(prevState => ({ ...prevState,\n      formData,\n      isFormValid\n    }));\n  };\n\n  const renderInputs = () => {\n    return Object.keys(state.formData).map((controlData, index) => {\n      const data = state.formData[controlData];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        value: data.value,\n        type: data.type,\n        label: data.label,\n        errorMessage: data.errorMessage,\n        valide: data.valide,\n        touched: data.touched,\n        onChange: event => changeInput(event, controlData)\n      }, controlData + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authurization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: renderInputs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authorization, \"4r+Fy8c+JUCwBGeDco2mOTG9gc4=\");\n\n_c = Authorization;\nexport default Authorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Authorization.jsx"],"names":["React","Input","Authorization","state","setState","useState","isFormValid","formData","userName","type","label","errorMessage","valide","touched","validation","required","email","value","password","confirmationPassword","age","avatar","changeInput","event","controlData","data","target","validateData","Object","keys","forEach","name","valid","prevState","renderInputs","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Input } from \"../conponents/index\";\nimport \"./../scss/app.scss\";\n\nfunction Authorization() {\n  const [state, setState] = React.useState({\n    isFormValid: false,\n    formData: {\n      userName: {\n        // value: \"\",\n        type: \"text\",\n        label: \"first and last name\",\n        errorMessage: \"fill in the field\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          userName: true,\n        },\n      },\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"email\",\n        errorMessage: \"enter correct email\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n        },\n      },\n      password: {\n        value: \"\",\n        type: \"text\",\n        label: \"password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n          touched: false,\n        validation: {\n          required: true,\n          password: 9,\n        },\n      },\n      confirmationPassword: {\n        value: \"\",\n        type: \"text\",\n        label: \"confirmation password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n          touched: false,\n        validation: {\n          required: true,\n          confirmationPassword: true,\n        },\n      },\n      age: {\n        value: \"\",\n        type: \"number\",\n        label: \"age\",\n        errorMessage: \"fill in the field\",\n        valide: false,\n          touched: false,\n        validation: {\n          required: true,\n          age: true,\n        },\n      },\n      avatar: {\n        value: \"\",\n        type: \"url\",\n        label: \"your avatar\",\n        errorMessage: \"enter correct url\",\n        valide: false,\n          touched: false,\n        \n      },\n    },\n  });\n\n  const changeInput = (event, controlData) => {\n    const formData = { ...state.formData };\n    const data = { ...formData[controlData] };\n\n    data.value = event.target.value;\n    data.touched = true;\n    data.valide = validateData(data.value, data.validation);\n\n    formData[controlData] = data;\n    let isFormValid = true;\n\n    Object.keys(formData).forEach((name) => {\n      isFormValid = formData[name].valid && isFormValid;\n    });\n\n    setState((prevState) => ({\n      ...prevState,\n      formData,\n      isFormValid,\n    }));\n  };\n\n  const renderInputs = () => {\n    return Object.keys(state.formData).map((controlData, index) => {\n      const data = state.formData[controlData];\n\n      return (\n        <Input\n          key={controlData + index}\n          value={data.value}\n          type={data.type}\n          label={data.label}\n          errorMessage={data.errorMessage}\n          valide={data.valide}\n          touched={data.touched}\n          onChange={(event) => changeInput(event, controlData)}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"authurization\">\n      <h1>Authorization</h1>\n      <div className=\"form\">\n        <form>{renderInputs()}</form>\n      </div>\n    </div>\n  );\n}\n\nexport default Authorization;\n"]},"metadata":{},"sourceType":"module"}