[{"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/index.js":"1","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/App.js":"2","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/redux/store.js":"3","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/redux/reducer.js":"4","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/redux/action.js":"5","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/index.js":"6","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/pages/index.js":"7","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/pages/Home.jsx":"8","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/pages/Login.jsx":"9","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/pages/Signup.jsx":"10","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Announcements.jsx":"11","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/PostBlock.jsx":"12","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Comments.jsx":"13","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/GetPosts.jsx":"14","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/CreatePost.jsx":"15","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/UpdatePost.jsx":"16","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/UserPage.jsx":"17","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Button.jsx":"18","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Input.jsx":"19","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Pagination.jsx":"20","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/CreateAnnuncement.jsx":"21"},{"size":420,"mtime":1642416363424,"results":"22","hashOfConfig":"23"},{"size":657,"mtime":1642500990303,"results":"24","hashOfConfig":"23"},{"size":354,"mtime":1642502603949,"results":"25","hashOfConfig":"23"},{"size":1512,"mtime":1642503290566,"results":"26","hashOfConfig":"23"},{"size":1330,"mtime":1642503290565,"results":"27","hashOfConfig":"23"},{"size":503,"mtime":1642414903467,"results":"28","hashOfConfig":"23"},{"size":129,"mtime":1642412081146,"results":"29","hashOfConfig":"23"},{"size":2777,"mtime":1642493073897,"results":"30","hashOfConfig":"23"},{"size":2387,"mtime":1641994982892,"results":"31","hashOfConfig":"23"},{"size":5282,"mtime":1642402459734,"results":"32","hashOfConfig":"23"},{"size":1526,"mtime":1642503290565,"results":"33","hashOfConfig":"23"},{"size":2284,"mtime":1642486846726,"results":"34","hashOfConfig":"23"},{"size":6665,"mtime":1642494205254,"results":"35","hashOfConfig":"23"},{"size":3835,"mtime":1642497476704,"results":"36","hashOfConfig":"23"},{"size":2150,"mtime":1642412637562,"results":"37","hashOfConfig":"23"},{"size":1745,"mtime":1642412562669,"results":"38","hashOfConfig":"23"},{"size":1433,"mtime":1642002877071,"results":"39","hashOfConfig":"23"},{"size":324,"mtime":1642417031729,"results":"40","hashOfConfig":"23"},{"size":466,"mtime":1642413750538,"results":"41","hashOfConfig":"23"},{"size":782,"mtime":1642496053538,"results":"42","hashOfConfig":"23"},{"size":2164,"mtime":1642501295057,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"tvomsq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/index.js",[],["95","96"],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/App.js",["97"],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/redux/store.js",[],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/redux/reducer.js",["98"],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/redux/action.js",[],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/index.js",[],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/pages/index.js",[],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/pages/Home.jsx",["99","100"],"// import axios from 'axios';\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\nimport { Button, GetPosts } from \"../components/index\";\nimport \"../scss/app.scss\";\nimport '../scss/components/button.scss'\n\nfunction Home() {\n  \n  // const dataUser = useSelector(state => state.userReducer)\n  // console.log(dataUser);\n\n  let data = JSON.parse(localStorage.user)\n\n    const openMenu = () => {\n        document.getElementById('menu').classList.toggle(\"show\")  \n    }\n  \n  const deletToken = () => {\n    localStorage.removeItem('token')\n    document.location.reload(true)\n  }\n\n  return (\n    <div className=\"home\">\n      {localStorage.getItem('token') ? (\n        <div className=\"for-autho-user\">\n         \n          <div className=\"menu-block\">\n            <div className=\"data-of-user\">\n            <img className=\"avatar\" src={data.avatar} alt=\"\" />\n            <Link to='user-page'><p>{data.firstname} {data.lastname}</p></Link>\n          </div>\n            <img  src=\"https://img.icons8.com/ios-glyphs/30/ffffff/menu--v1.png\" onClick={openMenu} className=\"menu-icon\"/>\n            <ul id=\"menu\">\n              <Link to=\"create\"><li>Cre<span>a</span>te</li></Link>\n              <Link to='/'><li onClick={deletToken}>Log<span>o</span>ut</li></Link>\n            </ul>\n          </div>\n           \n          <div className=\"content-header\">\n            <h1>\n              Tell <span>me</span>\n            </h1>\n            <p>\n              Welcome to home! <br />\n              May be you want write post about new dream or little history...{\" \"}\n              <br /> You may do it here:\n            </p>\n            <Link to=\"create\">\n              <Button className=\"button-home\">Create new post</Button>\n            </Link>\n          </div>\n        </div>\n      ) : (\n        <div className=\"home-header\">\n          <h1>\n            Tell <span>me</span>\n          </h1>\n          <p>\n            Hi! Here you may write posts about your life, your dreams and share\n            your purpose!!! <br /> Also you may read it about other people...\n            Have a nice tripe in our world!\n          </p>\n          <div>\n            <Link to=\"login\">\n              <Button className=\"button-home\">Login</Button>\n            </Link>\n            <span>or</span>\n            <Link to=\"/signup\">\n              <Button className=\"button-home\">Register</Button>\n            </Link>\n            {/* <Link to=''><span className='arrow'>&#709;</span></Link> */}\n          </div>\n        </div>\n      )}\n      <div className=\"home-content\">\n         <GetPosts />\n        {/* <NavLink to={'/login'}>Login</NavLink><br/>\n            <NavLink to={'/signup'}>signup</NavLink> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/pages/Login.jsx",["101","102","103","104"],"import axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setDataUser } from \"../redux/action\";\n\nfunction Login() {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  // const [user, setUser] = React.useState([])\n  const [error, setError] = React.useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const getLogin = () => {\n    if (email === \"\" || password === \"\") {\n      setError(\"Fields are required\");\n      return;\n    }\n\n    // setUser(response.data.user);\n    // dispatch(setDataUser(response.data.user))\n    // localStorage.setItem('data', response.data);\n    const data = {\n      email: email,\n      password: password,\n    };\n\n    axios\n      .post(\"https://ekreative-json-server.herokuapp.com/login\", data)\n      .then((response) => {\n        console.log(response);\n        localStorage.user = JSON.stringify(response.data.user);\n        window.localStorage.setItem(\n          \"token\",\n          JSON.stringify(response.data.accessToken)\n        );\n        if (setError) {\n          window.location.href = \"/\";\n        }\n      });\n  };\n\n  const user = localStorage.getItem(\"user\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"authorization\">\n      <h2>Log In</h2>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"input\">\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div className=\"input\">\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => getLogin(user)}\n          >\n            Login\n          </button>\n          <br />\n          <p>if you dont have an account you may register</p>\n\n          <Link to=\"/signup\">\n            <button type=\"button\" className=\"button\">\n              Signup\n            </button>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/pages/Signup.jsx",["105"],"import React from \"react\";\nimport { Input, Button } from \"../components/index\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.! #$%&'*+/=? ^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\n\nconst formValid = ({formErrors, ...rest}) => {\n  let valid = true\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false)\n  });\n\n  Object.values(rest).forEach(val => {\n    val !== null && (valid = false)\n  })\n\n  return valid\n}\n\nfunction Signup() {\n  const [user, setUser] = React.useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    confirPass: '',\n    age: '',\n    avatar: '',\n    formErrors: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      confirPass: '',\n      age: '',\n      avatar: ''\n    },\n  });\n\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    if (formValid(user)) {\n      console.log('evrething valid');\n    } else {\n      console.log('error');\n   }\n  }\n\n  const handleChange = e => {\n    e.preventDefault()\n    const { name,  value } = e.target;\n    let formErrors = user.formErrors;\n    setUser((prevState) => ({\n      ...prevState,\n      [e.target.name]: value,\n      formErrors\n    }))\n    \n\n    switch (name) {\n      case 'firstname':\n        formErrors.firstname =\n          value === ''\n          ? 'this field cant be empty'\n          : ''\n        break;\n      case 'lastname':\n        formErrors.lastname =\n          value === ''\n          ? 'this field cant be empty'\n          : ''\n        break;\n      case 'email':\n        formErrors.email =\n        emailRegex.test(value) && value.length !== ''\n          ? ''\n          : 'invalid email address'\n        break;\n      case 'password':\n        formErrors.password =\n          value.length < 12\n          ? 'this field must have least 12 signs'\n          : ''\n        break;\n      case 'confirPass':\n        formErrors.confirPass =\n          value === user.password\n          ? ''\n          : 'passwords not match'\n        break;\n      case 'age':\n        formErrors.age =\n          value === ''\n          ? 'this field cant be empty'\n          : ''\n        break;\n      default:\n        break;\n    }\n  }\n\n  function getSingup() {\n    const authData = {\n      email: user.email,\n      password: user.password,\n      firstname: user.firstname,\n      lastname: user.lastname,\n      age: user.age,\n      avatar: user.avatar\n    };\n    axios.post(\"https://ekreative-json-server.herokuapp.com/register\", authData)\n      .then((response) => {\n        console.log(response);\n        localStorage.user = JSON.stringify(response.data.user);\n        window.localStorage.setItem(\"token\", JSON.stringify(response.data.accessToken))\n        if (formValid) {\n          window.location.href = '/'\n        }\n      })\n    \n    // setUser((preventDefault) => ({\n    //   ...preventDefault,\n    //   firstname: '',\n    //   lastname: '',\n    //   email: '',\n    //   password: '',\n    //   firstname: '',\n    //   configPass: '',\n    //   age: '',\n    //   avatar: '',\n    // }))\n    \n  }\n  return (\n    <div className=\"authorization\">\n      <h2>Sign Up</h2>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit} noValidate>\n          <Input\n            type=\"text\"\n            value={user.firstname}\n            onChange={handleChange}\n            placeholder=\"first name\"\n            name=\"firstname\"\n            formErrors={user.formErrors.firstname}\n          />\n          <Input\n            type=\"text\"\n            value={user.lastname}\n            onChange={handleChange}\n            placeholder=\"last name\"\n            name=\"lastname\"\n            formErrors={user.formErrors.lastname}\n          />\n          <Input\n            type=\"email\"\n            value={user.email}\n            onChange={handleChange}\n            formErrors={user.formErrors.email}\n            placeholder=\"email\"\n            name=\"email\"\n          />\n          <Input\n            type=\"password\"\n            value={user.password}\n            onChange={handleChange}\n            formErrors={user.formErrors.password}\n            placeholder=\"password\"\n            name=\"password\"\n          />\n          <Input\n            type=\"password\"\n            value={user.confirPass}\n            onChange={handleChange}\n            formErrors={user.formErrors.confirPass}\n            placeholder=\"cofirmation password\"\n            name=\"confirPass\"\n          />\n          <Input\n            type=\"number\"\n            value={user.age}\n            onChange={handleChange}\n            formErrors={user.formErrors.age}\n            placeholder=\"age\"\n            name=\"age\"\n          />\n          <Input\n            type=\"text\"\n            value={user.avatar}\n            onChange={handleChange}\n            formErrors={user.formErrors.avatar}\n            placeholder=\"avatar\"\n            name=\"avatar\"\n          />\n          <button className='button' type=\"submit\" onClick={formValid ? getSingup : null}>\n            Signup\n          </button>\n          <br />\n          <p> maybe you already have an account</p>\n          <Link to='/login'><button className='button'>\n            Login\n          </button></Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Announcements.jsx",["106"],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/PostBlock.jsx",["107","108"],"import axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/postBlock.scss\";\n// import \"../scss/components/getPosts.scss\";\n\n// import { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\nimport Comments from \"./Comments\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\n\n\nconst PostBlock = ({ id, title, body, userId, createdAt }) => {\n  const [usersData, setUsersData] = React.useState([]);\n\n  let data = JSON.parse(localStorage.user);\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n        // console.log(data);\n      });\n  }, []);\n\n\n  \n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${id}`);\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n  };\n\n  return (\n    <div className=\"post-block\" id={`post-${id}`}>\n      <div className=\"content-post\">\n        <div className=\"content\">\n          <h3>{title}</h3>\n          <p className=\"post-body\">{body}</p>\n          <p className=\"post-user\">\n            {usersData.firstname} {usersData.lastname}\n          </p>\n        </div>\n        {localStorage.getItem(\"token\") && usersData.id === data.id ? (\n          <div className=\"content-button\">\n            <button\n              className={classNames(\"button-post\", \"button\")}\n              onClick={() => editPost(id, title, body, userId, createdAt)}\n            >\n              Edit\n            </button>\n            <button\n              className={classNames(\"button-post\", \"button\")}\n              onClick={deletePost}\n            >\n              Delete\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <Comments postId={id} />\n    </div>\n  );\n};\n\nexport default PostBlock;\n","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Comments.jsx",["109","110","111","112","113"],"import axios from \"axios\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport '../scss/components/comments.scss'\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Comments = ({ postId }) => {\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [dataComment, setDataComment] = React.useState({\n    commentId: '',\n    userId:''\n  });\n  const [dataUserComment, setDataUserComment] = React.useState([]);\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false,\n    id: ''\n  });\n\n    let dataAboutUser = JSON.parse(localStorage.user);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${postId}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n\n        // data.map((comment) =>\n        //   setDataComment( comment.userId )\n        // );\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments/${dataComment.commentId}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log(data);\n\n        setDataComment(prevState => ({\n          ...prevState,\n          userId: data.userId\n          }))\n      });\n  }, []);\n\n  const handleChangeUserComment = (e) => {\n    e.preventDefault()\n    setNewComment(e.target.value);\n  };\n\n  const handleChange = (e) => {\n    setUpdateCommentBody((prevState) => ({ ...prevState, value: e.target.value }));\n  };\n\n  const openUpdateBlock = (id, body) => {\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      value: body,\n      openUptComm: true,\n      id\n    }));\n  };\n\n  const updateComment = ({ id, postId }, updateBody) => {\n    const data = {\n      body: updateBody,\n      updatedAt: datetime,\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      data,\n     headers \n    );\n\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      openUptComm: false,\n    }));\n\n    // window.location.reload()\n    updateDiv(postId)\n  };\n\n  const addComment = (postId) => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.post(\n      `https://ekreative-json-server.herokuapp.com/664/comments`,\n      data,\n       headers \n    );\n    document.location.reload(true)\n    \n    window.location.reload()\n    updateDiv(postId)\n  };\n\n  const deleteComment = (id, postId) => {\n    const headers = {\n      'Authorization': `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      { headers }\n    );\n      console.log(`Bearer` + localStorage.getItem(\"token\"));\n    document.location.reload(true)\n    \n    // window.location.reload()\n    // updateDiv(postId)\n  };\n\n    //  console.log('dataComment',dataComment);\n  \n  React.useEffect(() => {\n    userData();\n    return () => {\n      setDataUserComment([]); // This worked for me\n    };\n  }, []);\n  \n  const userData = () => {\n    let headers = {\n      \"mode\": \"no-cors\",\n    }\n  \n    fetch(`https://ekreative-json-server.herokuapp.com/users${dataComment.userId}`, { headers })\n      .then((response) => response.json())\n      .then((data) => {\n        // setDataUserComment([data]);\n        // console.log('data',data);\n      });\n  }\n\nconst updateDiv = (postId) =>\n{ \n    // document.getElementById( 'posts' ).onload(window.location.href + `#post-${postId}` );\n}\n\n  \n  return (\n    <div className=\"comments-of-post\">\n      <h3>comments</h3>\n      {localStorage.getItem(\"token\") ? (\n        <div className=\"comment-input-block\">\n          <img\n            src={dataAboutUser.avatar}\n            alt=\"\"\n          />\n          <input type=\"text\" value={newComment} onChange={handleChangeUserComment} />\n         <Link to='#post'><button onClick={() => addComment(postId)}>&#43;</button></Link>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {comments.map((comment) => (\n            <div key={comment.id} className=\"comment-data\">\n              {updateCommentBody.openUptComm && comment.id === updateCommentBody.id ? (\n                <div className=\"comment-content-for-update\">\n                  <input\n                    type=\"text\"\n                    value={updateCommentBody.value}\n                    onChange={handleChange}\n                  />\n                  <button\n                    onClick={() =>\n                  updateComment(comment, updateCommentBody.value)\n                    }\n                  >\n                    Update\n                  </button>\n                </div>\n              ) : (\n                  <div key={comment.id} className=\"comment-content\">\n                    {dataUserComment.map((user) => (\n                    <div key={comment.id} className=\"user-of-comment\">\n                      {user.id === comment.userId\n                        ? (<p>{user.firstname} {user.lastname}</p>)\n                          : ('')}\n                    </div>\n                    ))}\n                    <div key={comment.id + 3 + \"li\"} className=\"comment-content\" >\n                      <p>{comment.body}</p>\n                    {localStorage.getItem('token') && dataAboutUser.id === comment.userId ? (\n                      <div key={comment.id + 1} className=\"button-block\">\n                        <button onClick={() => openUpdateBlock(comment.id, comment.body)}>\n                          Update\n                        </button>\n                        <button\n                          key={comment.id + 2}\n                          onClick={() => deleteComment(comment.id, comment.postId)}\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Comments;\n","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/GetPosts.jsx",["114","115","116","117"],"import axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, PostBlock, Pagination } from \"./index\";\nimport { setAddData, setGetPostsPage } from \"../redux/action\";\nimport \"../scss/components/getPosts.scss\";\nimport Announcements from \"./Announcements\";\n\nvar currentdate = new Date();\n\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst GetPosts = () => {\n  const [posts, setPosts] = React.useState([]);\n  // const [isLoaded, setIsLoaded] = React.useState(false);\n  // const [error, setError] = React.useState(null);\n  const [updateDataPost, setUpdateDataPost] = React.useState(null);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [postsPerPage] = React.useState(10);\n\n  //redux\n  const dispatch = useDispatch();\n  const postReducer = useSelector((state) => state.postReducer);\n  const postsPages = useSelector((state) => state.paginateReducer);\n  console.log(postsPages);\n\n  //pagination\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentPost = posts.slice(firstPostIndex, lastPostIndex)\n\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/664/posts`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPosts(data);\n      });\n  }, []);\n\n  const getUpdatePost = () => {\n    postsPages.map((dataPost) => {\n      setUpdateDataPost({\n        title: dataPost.title,\n        body: dataPost.body,\n        userId: dataPost.userId,\n        createAt: dataPost.createdAt,\n        updatedAt: datetime,\n      });\n    });\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/post`,\n      updateDataPost,\n      {headers}\n    );\n  };\n\n  const handleChange = (e) => {\n    dispatch(setAddData({ title: e.target.title, body: e.target.body }));\n  };\n\n  return (\n    <div className=\"get-posts\" id=\"posts\">\n      {postsPages.map((dataPost) => (\n        <PostBlock key={dataPost.id} {...dataPost} />\n      ))}\n      {postReducer.map((dataUpdatePost) => (\n        <div id=\"update-post\" key={dataUpdatePost.id}>\n          <div className=\"close\">\n            <span className=\"material-icons-outlined\">&times;</span>\n          </div>\n          <div className=\"modal-content\">\n            <h2>update your post</h2>\n            <form action=\"\">\n              <div className=\"title-block\">\n                <p className=\"header-for-post-form\">title</p>\n                <input\n                  type=\"text\"\n                  className=\"input-for-title\"\n                  value={dataUpdatePost.title}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"post-block\">\n                <p className=\"header-for-post-form\">post</p>\n                <textarea\n                  type=\"text\"\n                  className=\"input-for-post\"\n                  value={dataUpdatePost.body}\n                  onChange={handleChange}\n                >\n                  {dataUpdatePost.body}\n                </textarea>\n              </div>\n              <Button\n                type=\"button\"\n                className=\"button-update\"\n                onClik={getUpdatePost}\n              >\n                Edit\n              </Button>{\" \"}\n            </form>\n          </div>\n        </div>\n      ))}\n      <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} />\n      <Announcements />\n    </div>\n  );\n};\n\nexport default GetPosts;\n","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/CreatePost.jsx",["118"],"import axios from \"axios\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"./index\";\nimport \"../scss/components/createPost.scss\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nfunction CreatePost() {\n  const [post, setPost] = React.useState({\n    title: \"\",\n    body: \"\",\n  });\n\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  const getCreatePost = () => {\n    const data = {\n      title: post.title,\n      body: post.body,\n      userId: dataAboutUser.id,\n      createAt: datetime,\n      updatedAt: datetime,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.post(\"https://ekreative-json-server.herokuapp.com/664/posts\", data, {\n      headers,\n    });\n  };\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setPost((prevState) => ({ ...prevState, [e.target.name]: value }));\n  }\n\n  return (\n    <div className=\"create-post\">\n      <h2>create your post</h2>\n      <form action=\"\">\n        <div className=\"title-block\">\n          <input\n            type=\"text\"\n            className=\"input-for-title\"\n            value={post.title}\n            name=\"title\"\n            placeholder=\"title of your post\"\n            onChange={handleChange}\n          />\n          <textarea\n            type=\"text\"\n            className=\"input-for-post\"\n            value={post.body}\n            name=\"body\"\n            placeholder=\"write here your story or dream or somthing else...\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <Link to='/'>\n          <Button\n            type=\"button\"\n            className=\"button-create\"\n            onClick={getCreatePost}\n          >\n            Create\n          </Button>\n        </Link>\n      </form>\n     <Link to='/' className=\"logo\"><h2 className=\"logo\">Tell <span>me</span></h2></Link>\n    </div>\n  );\n}\n\nexport default CreatePost;\n","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/UpdatePost.jsx",[],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/UserPage.jsx",[],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Button.jsx",[],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Input.jsx",[],"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Pagination.jsx",["119"],"import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { setGetPostsPage } from '../redux/action'\nimport '../scss/components/pagination.scss'\n\nconst Pagination = ({ postsPerPage, totalPosts }) => {\n    const paginPageWithPosts = []\n\n    const dispatch = useDispatch()\n\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        paginPageWithPosts.push(i)\n    }\n\n    return (\n        <div className='pagination'>\n            {\n                paginPageWithPosts.map(number => (\n                  <a key={number} href=\"#posts\"><button   onClick={() => dispatch(setGetPostsPage(number, postsPerPage))}>{number}</button></a>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Pagination","/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/CreateAnnuncement.jsx",["120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":4,"column":22,"nodeType":"127","messageId":"128","endLine":4,"endColumn":30},{"ruleId":"125","severity":1,"message":"129","line":1,"column":41,"nodeType":"127","messageId":"128","endLine":1,"endColumn":53},{"ruleId":"125","severity":1,"message":"130","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":36,"column":13,"nodeType":"133","endLine":36,"endColumn":124},{"ruleId":"125","severity":1,"message":"130","line":3,"column":23,"nodeType":"127","messageId":"128","endLine":3,"endColumn":34},{"ruleId":"125","severity":1,"message":"134","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":21},{"ruleId":"125","severity":1,"message":"135","line":11,"column":10,"nodeType":"127","messageId":"128","endLine":11,"endColumn":15},{"ruleId":"125","severity":1,"message":"136","line":13,"column":9,"nodeType":"127","messageId":"128","endLine":13,"endColumn":17},{"ruleId":"125","severity":1,"message":"137","line":2,"column":17,"nodeType":"127","messageId":"128","endLine":2,"endColumn":23},{"ruleId":"125","severity":1,"message":"138","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"139","line":13,"column":5,"nodeType":"127","messageId":"128","endLine":13,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":42,"column":6,"nodeType":"142","endLine":42,"endColumn":8,"suggestions":"143"},{"ruleId":"125","severity":1,"message":"130","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":21},{"ruleId":"125","severity":1,"message":"144","line":3,"column":23,"nodeType":"127","messageId":"128","endLine":3,"endColumn":34},{"ruleId":"140","severity":1,"message":"145","line":49,"column":6,"nodeType":"142","endLine":49,"endColumn":8,"suggestions":"146"},{"ruleId":"140","severity":1,"message":"147","line":64,"column":6,"nodeType":"142","endLine":64,"endColumn":8,"suggestions":"148"},{"ruleId":"140","severity":1,"message":"149","line":153,"column":6,"nodeType":"142","endLine":153,"endColumn":8,"suggestions":"150"},{"ruleId":"125","severity":1,"message":"151","line":5,"column":22,"nodeType":"127","messageId":"128","endLine":5,"endColumn":37},{"ruleId":"125","severity":1,"message":"152","line":41,"column":9,"nodeType":"127","messageId":"128","endLine":41,"endColumn":20},{"ruleId":"125","severity":1,"message":"153","line":43,"column":9,"nodeType":"127","messageId":"128","endLine":43,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":54,"column":31,"nodeType":"156","messageId":"157","endLine":54,"endColumn":33},{"ruleId":"125","severity":1,"message":"158","line":48,"column":13,"nodeType":"127","messageId":"128","endLine":48,"endColumn":17},{"ruleId":"125","severity":1,"message":"159","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"125","severity":1,"message":"158","line":48,"column":13,"nodeType":"127","messageId":"128","endLine":48,"endColumn":17},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'GetPosts' is defined but never used.","Identifier","unusedVar","'DATA_COMMENT' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setDataUser' is defined but never used.","'error' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'datetime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["162"],"'useDispatch' is defined but never used.","React Hook React.useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["163"],"React Hook React.useEffect has a missing dependency: 'dataComment.commentId'. Either include it or remove the dependency array.",["164"],"React Hook React.useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.",["165"],"'setGetPostsPage' is defined but never used.","'currentPost' is assigned a value but never used.","'paginate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'name' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [userId]",{"range":"174","text":"175"},"Update the dependencies array to be: [postId]",{"range":"176","text":"177"},"Update the dependencies array to be: [dataComment.commentId]",{"range":"178","text":"179"},"Update the dependencies array to be: [userData]",{"range":"180","text":"181"},[1061,1063],"[userId]",[1290,1292],"[postId]",[1645,1647],"[dataComment.commentId]",[3685,3687],"[userData]"]