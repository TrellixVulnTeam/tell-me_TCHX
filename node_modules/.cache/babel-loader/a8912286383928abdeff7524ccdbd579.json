{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/postBlock.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Comments = postId => {\n  _s();\n\n  console.log(postId);\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [dataComment, setDataComment] = React.useState({}); // const [dataUserComment, setDataUserComment] = React.useState({});\n\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false\n  });\n  let dataAboutUser = JSON.parse(localStorage.user);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${postId}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n      console.log(data);\n      data.map(comment => setDataComment({\n        id: comment.id,\n        postId: comment.postId,\n        body: comment.body,\n        userId: comment.userId,\n        createdAt: comment.createdAt,\n        updatedAt: comment.updatedAt\n      }));\n    });\n  }, []);\n\n  const handleChange = e => {\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      value: e.target.value\n    }));\n    setNewComment(e.target.value);\n  };\n\n  const openUpdateBlock = id => {\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: true\n    }));\n  };\n\n  const updateComment = ({\n    id,\n    postId,\n    userId,\n    createdAt\n  }, updateBody) => {\n    const data = {\n      id,\n      postId,\n      body: updateBody,\n      userId,\n      createdAt,\n      updatedAt: datetime\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/comments/${id}`, data);\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: false\n    }));\n  };\n\n  const addComment = () => {\n    const data = {\n      userId: dataAboutUser.userId,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: ''\n    };\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`, data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-of-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://static01.nyt.com/images/2020/11/09/arts/06depp-item/06depp-item-mediumSquareAt3X-v2.jpg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addComment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : \"\", comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-data\",\n          children: updateCommentBody.openUptComm ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: comment.body,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateComment(comment, updateCommentBody.value),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"comment-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), true ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openUpdateBlock(comment.id),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"u8ZielARHjA7rqJAXAr59gvPdeM=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/Comments.jsx"],"names":["axios","React","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Comments","postId","console","log","comments","setComments","useState","newComment","setNewComment","dataComment","setDataComment","updateCommentBody","setUpdateCommentBody","value","openUptComm","dataAboutUser","JSON","parse","localStorage","user","useEffect","fetch","then","response","json","data","map","comment","id","body","userId","createdAt","updatedAt","handleChange","e","prevState","target","openUpdateBlock","updateComment","updateBody","patch","addComment","post","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/postBlock.scss\";\n\n\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() \n+ \"-\" + currentdate.getDay() + \"T\" \n+ currentdate.getHours() + \":\" \n+ currentdate.getMinutes() + \":\"\n+ currentdate.getSeconds();\n\nconst Comments = (postId) => {\n    console.log(postId);\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [dataComment, setDataComment] = React.useState({});\n  // const [dataUserComment, setDataUserComment] = React.useState({});\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false,\n  });\n\n    let dataAboutUser = JSON.parse(localStorage.user);\n    \n    React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${postId}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n          setComments(data);\n          console.log(data);\n        data.map((comment) =>\n          setDataComment({\n            id: comment.id,\n            postId: comment.postId,\n            body: comment.body,\n            userId: comment.userId,\n            createdAt: comment.createdAt,\n            updatedAt: comment.updatedAt,\n          })\n        );\n      });\n  }, []);\n    \n    const handleChange = (e) => {\n        setUpdateCommentBody((prevState) => ({ prevState, value: e.target.value }))\n        setNewComment(e.target.value)\n    }\n    \n    const openUpdateBlock = (id) => {\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: true\n    }))\n    }\n\n    const updateComment = ({id, postId, userId, createdAt}, updateBody) => {\n    const data = {\n      id, \n      postId,\n      body: updateBody,\n      userId,\n      createdAt,\n      updatedAt: datetime \n    }\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,data\n    );\n\n     setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: false\n    }))\n    };\n    \n    const addComment = () => {\n    const data = {\n      userId: dataAboutUser.userId,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: '',\n    }\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`, data);\n    };\n    \n\n  return (\n    <div className=\"comments-of-post\">\n      <h3>comments</h3>\n      {localStorage.getItem(\"token\") ? (\n        <div className=\"comment-input-block\">\n          <img\n            src=\"https://static01.nyt.com/images/2020/11/09/arts/06depp-item/06depp-item-mediumSquareAt3X-v2.jpg\"\n            alt=\"\"\n          />\n          <input type=\"text\" value={newComment} onChange={handleChange} />\n          <button onClick={addComment}>&#43;</button>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {comments.map((comment) => (\n        <div key={comment.id}>\n          <ul>\n            <div className=\"comment-data\">\n              {updateCommentBody.openUptComm ? (\n                <div className=\"comment-content\">\n                  <input\n                    type=\"text\"\n                    value={comment.body}\n                    onChange={handleChange}\n                  />\n                  <button\n                    onClick={() =>\n                      updateComment(comment, updateCommentBody.value )\n                    }\n                  >\n                    Update\n                  </button>\n                </div>\n              ) : (\n                <div key={comment.id} className=\"comment-content\">\n                  <li className=\"comment-content\">\n                    <p>{comment.body}</p>\n                    \n                    {true ? (\n                      <button onClick={() => openUpdateBlock(comment.id)}>\n                        Update\n                      </button>\n                    ) : (\n                      \"\"\n                    )}\n                  </li>\n                </div>\n              )}\n            </div>\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}