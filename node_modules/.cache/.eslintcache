[{"/Users/admin/Documents/mystudy/tell-me-react/src/index.js":"1","/Users/admin/Documents/mystudy/tell-me-react/src/App.js":"2","/Users/admin/Documents/mystudy/tell-me-react/src/redux/store.js":"3","/Users/admin/Documents/mystudy/tell-me-react/src/components/CreateAnnuncement.jsx":"4","/Users/admin/Documents/mystudy/tell-me-react/src/components/index.js":"5","/Users/admin/Documents/mystudy/tell-me-react/src/redux/reducer.js":"6","/Users/admin/Documents/mystudy/tell-me-react/src/pages/index.js":"7","/Users/admin/Documents/mystudy/tell-me-react/src/components/UserPage.jsx":"8","/Users/admin/Documents/mystudy/tell-me-react/src/components/Input.jsx":"9","/Users/admin/Documents/mystudy/tell-me-react/src/components/Pagination.jsx":"10","/Users/admin/Documents/mystudy/tell-me-react/src/components/CreatePost.jsx":"11","/Users/admin/Documents/mystudy/tell-me-react/src/components/GetPosts.jsx":"12","/Users/admin/Documents/mystudy/tell-me-react/src/components/PostBlock.jsx":"13","/Users/admin/Documents/mystudy/tell-me-react/src/components/Button.jsx":"14","/Users/admin/Documents/mystudy/tell-me-react/src/components/UpdatePost.jsx":"15","/Users/admin/Documents/mystudy/tell-me-react/src/redux/action.js":"16","/Users/admin/Documents/mystudy/tell-me-react/src/pages/Home.jsx":"17","/Users/admin/Documents/mystudy/tell-me-react/src/pages/Signup.jsx":"18","/Users/admin/Documents/mystudy/tell-me-react/src/pages/Login.jsx":"19","/Users/admin/Documents/mystudy/tell-me-react/src/components/AnnounEdit.jsx":"20","/Users/admin/Documents/mystudy/tell-me-react/src/components/Announcement.jsx":"21","/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx":"22","/Users/admin/Documents/mystudy/tell-me-react/src/components/Comment.jsx":"23"},{"size":420,"mtime":1642416363424,"results":"24","hashOfConfig":"25"},{"size":866,"mtime":1644478579737,"results":"26","hashOfConfig":"25"},{"size":417,"mtime":1644820045481,"results":"27","hashOfConfig":"25"},{"size":2124,"mtime":1644483927745,"results":"28","hashOfConfig":"25"},{"size":505,"mtime":1644480349284,"results":"29","hashOfConfig":"25"},{"size":2250,"mtime":1644821700690,"results":"30","hashOfConfig":"25"},{"size":129,"mtime":1642412081146,"results":"31","hashOfConfig":"25"},{"size":1433,"mtime":1642002877071,"results":"32","hashOfConfig":"25"},{"size":466,"mtime":1642413750538,"results":"33","hashOfConfig":"25"},{"size":939,"mtime":1644522731763,"results":"34","hashOfConfig":"25"},{"size":2110,"mtime":1644484269361,"results":"35","hashOfConfig":"25"},{"size":2637,"mtime":1644821668397,"results":"36","hashOfConfig":"25"},{"size":1482,"mtime":1644503516938,"results":"37","hashOfConfig":"25"},{"size":324,"mtime":1642417031729,"results":"38","hashOfConfig":"25"},{"size":1745,"mtime":1642412562669,"results":"39","hashOfConfig":"25"},{"size":1757,"mtime":1644821358155,"results":"40","hashOfConfig":"25"},{"size":2775,"mtime":1644477177377,"results":"41","hashOfConfig":"25"},{"size":5282,"mtime":1642402459734,"results":"42","hashOfConfig":"25"},{"size":2387,"mtime":1641994982892,"results":"43","hashOfConfig":"25"},{"size":2719,"mtime":1644822569735,"results":"44","hashOfConfig":"25"},{"size":3785,"mtime":1644535261389,"results":"45","hashOfConfig":"25"},{"size":6321,"mtime":1644822674502,"results":"46","hashOfConfig":"25"},{"size":3285,"mtime":1644497004170,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1u36ph4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"/Users/admin/Documents/mystudy/tell-me-react/src/index.js",[],["104","105"],"/Users/admin/Documents/mystudy/tell-me-react/src/App.js",["106"],"// import './App.css';\nimport { Route, Routes } from 'react-router';\nimport AnnounEdit from './components/AnnounEdit.jsx';\nimport CreateAnnouncement from './components/CreateAnnuncement.jsx';\nimport { CreatePost, GetPosts } from './components/index.js'\nimport Post from './components/Post.jsx';\nimport { Home, Login, Signup } from './pages'\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/login' element={<Login />} />\n        <Route path='/signup' element={<Signup />} />\n        <Route path='/create' element={<CreatePost />} />\n        <Route path='/create-announ' element={<CreateAnnouncement />} />\n        <Route path='/post' element={<Post />} />\n        <Route path='/edit-announ' element={<AnnounEdit />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/admin/Documents/mystudy/tell-me-react/src/redux/store.js",["107"],"/Users/admin/Documents/mystudy/tell-me-react/src/components/CreateAnnuncement.jsx",["108"],"import axios from \"axios\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"./index\";\nimport \"../scss/components/createPost.scss\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nfunction CreateAnnouncement() {\n  const [announ, setAnnoun] = React.useState({\n    title: \"\",\n    body: \"\",\n  });\n\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  const getCreateAnnoun = () => {\n    const data = {\n      title: announ.title,\n      body: announ.body,\n      userId: dataAboutUser.id,\n      createAt: datetime,\n      updatedAt: '',\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.post(\"https://ekreative-json-server.herokuapp.com/664/announcements\", data, {\n      headers,\n    });\n  };\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setAnnoun((prevState) => ({ ...prevState, [name]: value }));\n  }\n\n  return (\n    <div className=\"create-post\">\n      <h2>write new announcement</h2>\n      <form action=\"\">\n        <div className=\"title-block\">\n          <input\n            type=\"text\"\n            className=\"input-for-title\"\n            value={announ.title}\n            name=\"title\"\n            placeholder=\"title of your announcement\"\n            onChange={handleChange}\n          />\n          <textarea\n            type=\"text\"\n            className=\"input-for-post\"\n            value={announ.body}\n            name=\"body\"\n            placeholder=\"text of your news\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <Link to='/'\n            type=\"button\"\n            className=\"button-create\"\n            onClick={() => getCreateAnnoun()}\n        >\n            Create\n        </Link>\n      </form>\n     <Link to='/' className=\"logo\"><h2 className=\"logo\">Tell <span>me</span></h2></Link>\n    </div>\n  );\n}\n\nexport default CreateAnnouncement;","/Users/admin/Documents/mystudy/tell-me-react/src/components/index.js",[],"/Users/admin/Documents/mystudy/tell-me-react/src/redux/reducer.js",["109"],"/Users/admin/Documents/mystudy/tell-me-react/src/pages/index.js",[],"/Users/admin/Documents/mystudy/tell-me-react/src/components/UserPage.jsx",[],"/Users/admin/Documents/mystudy/tell-me-react/src/components/Input.jsx",[],"/Users/admin/Documents/mystudy/tell-me-react/src/components/Pagination.jsx",[],"/Users/admin/Documents/mystudy/tell-me-react/src/components/CreatePost.jsx",["110"],"import axios from \"axios\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"./index\";\nimport \"../scss/components/createPost.scss\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nfunction CreatePost() {\n  const [post, setPost] = React.useState({\n    title: \"\",\n    body: \"\",\n  });\n\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  const getCreatePost = () => {\n    const data = {\n      title: post.title,\n      body: post.body,\n      userId: dataAboutUser.id,\n      createAt: datetime,\n      updatedAt: datetime,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.post(\"https://ekreative-json-server.herokuapp.com/664/posts\", data, {\n      headers,\n    });\n  };\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setPost((prevState) => ({ ...prevState, [name]: value }));\n  }\n\n  return (\n    <div className=\"create-post\">\n      <h2>create your post</h2>\n      <form action=\"\">\n        <div className=\"title-block\">\n          <input\n            type=\"text\"\n            className=\"input-for-title\"\n            value={post.title}\n            name=\"title\"\n            placeholder=\"title of your post\"\n            onChange={handleChange}\n          />\n          <textarea\n            type=\"text\"\n            className=\"input-for-post\"\n            value={post.body}\n            name=\"body\"\n            placeholder=\"write here your story or dream or somthing else...\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <Link to='/'\n            type=\"button\"\n            className=\"button-create\"\n            onClick={() => getCreatePost()}\n          >\n            Create\n        </Link>\n      </form>\n     <Link to='/' className=\"logo\"><h2 className=\"logo\">Tell <span>me</span></h2></Link>\n    </div>\n  );\n}\n\nexport default CreatePost;\n","/Users/admin/Documents/mystudy/tell-me-react/src/components/GetPosts.jsx",["111","112","113"],"/Users/admin/Documents/mystudy/tell-me-react/src/components/PostBlock.jsx",["114","115","116","117","118"],"// import axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/postBlock.scss\";\n// import \"../scss/components/getPosts.scss\";\n\nimport { Route, Link, NavLink } from \"react-router-dom\";\n// import classNames from \"classnames\";\nimport { setAddData, setDataOfPost } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\n// import Comments from \"./Comment\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst PostBlock = ({ id, title, body, userId, postId }) => {\n  const [usersData, setUsersData] = React.useState([]);\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    getUserPost()\n  }, []);\n\n  const getUserPost = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n        // console.log(data);\n      });\n  }\n  return (\n    <div className=\"post-block\" id={`post-${id}`}>\n        <div className=\"content\">\n          <Link to='/post' className=\"post-title\" onClick={() => dispatch(setDataOfPost(id, title, body, userId))}>{title}</Link>\n          <p className=\"post-user\">\n            {usersData.firstname} {usersData.lastname}\n          </p>\n        </div>\n    </div>\n  );\n};\n\nexport default PostBlock;\n","/Users/admin/Documents/mystudy/tell-me-react/src/components/Button.jsx",[],"/Users/admin/Documents/mystudy/tell-me-react/src/components/UpdatePost.jsx",[],"/Users/admin/Documents/mystudy/tell-me-react/src/redux/action.js",[],"/Users/admin/Documents/mystudy/tell-me-react/src/pages/Home.jsx",["119","120","121"],"// import axios from 'axios';\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\nimport { Button, GetPosts } from \"../components/index\";\nimport \"../scss/app.scss\";\nimport '../scss/components/button.scss'\n\nfunction Home() {\n  \n  // const dataUser = useSelector(state => state.userReducer)\n  // console.log(dataUser);\n\n  let data = JSON.parse(localStorage.user)\n\n    const openMenu = () => {\n        document.getElementById('menu').classList.toggle(\"show\")  \n    }\n  \n  const deletToken = () => {\n    localStorage.removeItem('token')\n    document.location.reload(true)\n  }\n\n  return (\n    <div className=\"home\">\n      {localStorage.getItem('token') ? (\n        <div className=\"for-autho-user\">\n         \n          <div className=\"menu-block\">\n            <div className=\"data-of-user\">\n            <img className=\"avatar\" src={data.avatar} alt=\"\" />\n            <Link to='user-page'><p>{data.firstname} {data.lastname}</p></Link>\n          </div>\n            <img  src=\"https://img.icons8.com/ios-glyphs/30/ffffff/menu--v1.png\" onClick={openMenu} className=\"menu-icon\"/>\n            <ul id=\"menu\">\n              <Link to=\"create\"><li>Cre<span>a</span>te</li></Link>\n              <Link to='/'><li onClick={deletToken}>Log<span>o</span>ut</li></Link>\n            </ul>\n          </div>\n           \n          <div className=\"content-header\">\n            <h1>\n              Tell <span>me</span>\n            </h1>\n            <p>\n              Welcome to home! <br />\n              May be you want write post about new dream or little history...{\" \"}\n              <br /> You may do it here:\n            </p>\n            <Link to=\"create\">\n              <Button className=\"button-home\">Create new post</Button>\n            </Link>\n          </div>\n        </div>\n      ) : (\n        <div className=\"home-header\">\n          <h1>\n            Tell <span>me</span>\n          </h1>\n          <p>\n            Hi! Here you may write posts about your life, your dreams and share\n            your purpose!!! <br /> Also you may read it about other people...\n            Have a nice tripe in our world!\n          </p>\n          <div>\n            <Link to=\"login\">\n              <Button className=\"button-home\">Login</Button>\n            </Link>\n            <span>or</span>\n            <Link to=\"/signup\">\n              <Button className=\"button-home\">Register</Button>\n            </Link>\n            <Link to=''><span className='arrow'>&#709;</span></Link>\n          </div>\n        // </div>\n        )} \n      <div className=\"home-content\">\n         <GetPosts />\n        {/* <NavLink to={'/login'}>Login</NavLink><br/>\n            <NavLink to={'/signup'}>signup</NavLink> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/admin/Documents/mystudy/tell-me-react/src/pages/Signup.jsx",["122"],"import React from \"react\";\nimport { Input, Button } from \"../components/index\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.! #$%&'*+/=? ^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\n\nconst formValid = ({formErrors, ...rest}) => {\n  let valid = true\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false)\n  });\n\n  Object.values(rest).forEach(val => {\n    val !== null && (valid = false)\n  })\n\n  return valid\n}\n\nfunction Signup() {\n  const [user, setUser] = React.useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    confirPass: '',\n    age: '',\n    avatar: '',\n    formErrors: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      confirPass: '',\n      age: '',\n      avatar: ''\n    },\n  });\n\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    if (formValid(user)) {\n      console.log('evrething valid');\n    } else {\n      console.log('error');\n   }\n  }\n\n  const handleChange = e => {\n    e.preventDefault()\n    const { name,  value } = e.target;\n    let formErrors = user.formErrors;\n    setUser((prevState) => ({\n      ...prevState,\n      [e.target.name]: value,\n      formErrors\n    }))\n    \n\n    switch (name) {\n      case 'firstname':\n        formErrors.firstname =\n          value === ''\n          ? 'this field cant be empty'\n          : ''\n        break;\n      case 'lastname':\n        formErrors.lastname =\n          value === ''\n          ? 'this field cant be empty'\n          : ''\n        break;\n      case 'email':\n        formErrors.email =\n        emailRegex.test(value) && value.length !== ''\n          ? ''\n          : 'invalid email address'\n        break;\n      case 'password':\n        formErrors.password =\n          value.length < 12\n          ? 'this field must have least 12 signs'\n          : ''\n        break;\n      case 'confirPass':\n        formErrors.confirPass =\n          value === user.password\n          ? ''\n          : 'passwords not match'\n        break;\n      case 'age':\n        formErrors.age =\n          value === ''\n          ? 'this field cant be empty'\n          : ''\n        break;\n      default:\n        break;\n    }\n  }\n\n  function getSingup() {\n    const authData = {\n      email: user.email,\n      password: user.password,\n      firstname: user.firstname,\n      lastname: user.lastname,\n      age: user.age,\n      avatar: user.avatar\n    };\n    axios.post(\"https://ekreative-json-server.herokuapp.com/register\", authData)\n      .then((response) => {\n        console.log(response);\n        localStorage.user = JSON.stringify(response.data.user);\n        window.localStorage.setItem(\"token\", JSON.stringify(response.data.accessToken))\n        if (formValid) {\n          window.location.href = '/'\n        }\n      })\n    \n    // setUser((preventDefault) => ({\n    //   ...preventDefault,\n    //   firstname: '',\n    //   lastname: '',\n    //   email: '',\n    //   password: '',\n    //   firstname: '',\n    //   configPass: '',\n    //   age: '',\n    //   avatar: '',\n    // }))\n    \n  }\n  return (\n    <div className=\"authorization\">\n      <h2>Sign Up</h2>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit} noValidate>\n          <Input\n            type=\"text\"\n            value={user.firstname}\n            onChange={handleChange}\n            placeholder=\"first name\"\n            name=\"firstname\"\n            formErrors={user.formErrors.firstname}\n          />\n          <Input\n            type=\"text\"\n            value={user.lastname}\n            onChange={handleChange}\n            placeholder=\"last name\"\n            name=\"lastname\"\n            formErrors={user.formErrors.lastname}\n          />\n          <Input\n            type=\"email\"\n            value={user.email}\n            onChange={handleChange}\n            formErrors={user.formErrors.email}\n            placeholder=\"email\"\n            name=\"email\"\n          />\n          <Input\n            type=\"password\"\n            value={user.password}\n            onChange={handleChange}\n            formErrors={user.formErrors.password}\n            placeholder=\"password\"\n            name=\"password\"\n          />\n          <Input\n            type=\"password\"\n            value={user.confirPass}\n            onChange={handleChange}\n            formErrors={user.formErrors.confirPass}\n            placeholder=\"cofirmation password\"\n            name=\"confirPass\"\n          />\n          <Input\n            type=\"number\"\n            value={user.age}\n            onChange={handleChange}\n            formErrors={user.formErrors.age}\n            placeholder=\"age\"\n            name=\"age\"\n          />\n          <Input\n            type=\"text\"\n            value={user.avatar}\n            onChange={handleChange}\n            formErrors={user.formErrors.avatar}\n            placeholder=\"avatar\"\n            name=\"avatar\"\n          />\n          <button className='button' type=\"submit\" onClick={formValid ? getSingup : null}>\n            Signup\n          </button>\n          <br />\n          <p> maybe you already have an account</p>\n          <Link to='/login'><button className='button'>\n            Login\n          </button></Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/Users/admin/Documents/mystudy/tell-me-react/src/pages/Login.jsx",["123","124","125","126"],"import axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setDataUser } from \"../redux/action\";\n\nfunction Login() {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  // const [user, setUser] = React.useState([])\n  const [error, setError] = React.useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const getLogin = () => {\n    if (email === \"\" || password === \"\") {\n      setError(\"Fields are required\");\n      return;\n    }\n\n    // setUser(response.data.user);\n    // dispatch(setDataUser(response.data.user))\n    // localStorage.setItem('data', response.data);\n    const data = {\n      email: email,\n      password: password,\n    };\n\n    axios\n      .post(\"https://ekreative-json-server.herokuapp.com/login\", data)\n      .then((response) => {\n        console.log(response);\n        localStorage.user = JSON.stringify(response.data.user);\n        window.localStorage.setItem(\n          \"token\",\n          JSON.stringify(response.data.accessToken)\n        );\n        if (setError) {\n          window.location.href = \"/\";\n        }\n      });\n  };\n\n  const user = localStorage.getItem(\"user\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"authorization\">\n      <h2>Log In</h2>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"input\">\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div className=\"input\">\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => getLogin(user)}\n          >\n            Login\n          </button>\n          <br />\n          <p>if you dont have an account you may register</p>\n\n          <Link to=\"/signup\">\n            <button type=\"button\" className=\"button\">\n              Signup\n            </button>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/admin/Documents/mystudy/tell-me-react/src/components/AnnounEdit.jsx",["127"],"/Users/admin/Documents/mystudy/tell-me-react/src/components/Announcement.jsx",["128","129","130"],"import axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/announcement.scss\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Announcement = ({ id, title, body, userId }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [updateDataPost, setUpdeteDataPost] = React.useState({})\n  const [editAnnoun, setEditAnnoun] = React.useState({\n    valueTitle: \"\",\n    valueBody: \"\",\n    openUptAnnoun: false,\n    id: \"\",\n  });\n\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  React.useEffect(() => {\n    getDataUserAnnoun();\n  }, []);\n\n  const getDataUserAnnoun = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  };\n\n  const openEditBlock = (title, body, id) => {\n    setEditAnnoun({\n      valueTitle: title,\n      valueBody: body,\n      openUptAnnoun: true,\n      id,\n    });\n  };\n\n  const changeHandler = (e) => {\n    const { name, value } = e.target;\n    setEditAnnoun((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const editAnnounFunction = async (title, body, id) => {\n    const data = {\n      title,\n      body,\n      updateAt: datetime,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    await axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/announcements/${id}`,\n      data,\n      { headers }\n    )\n    .then(response => {\n        setEditAnnoun((prevState) => ({\n      ...prevState,\n      response: response.data\n    }))\n    })\n    \n    setEditAnnoun((prevState) => ({\n      ...prevState,\n      openUptAnnoun: false\n    }))\n  };\n\n  const deleteAnnoun = (id) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/announcements/${id}`,\n      { headers }\n    );\n\n    \n  };\n\n  return editAnnoun.openUptAnnoun ? (\n    <div className=\"announ\">\n      <input\n        value={editAnnoun.valueTitle}\n        className=\"input-title\"\n        name=\"valueTitle\"\n        onChange={changeHandler}\n        type=\"text\"\n      />\n      <textarea\n        value={editAnnoun.valueBody}\n        className=\"input-body\"\n        onChange={changeHandler}\n        name=\"valueBody\"\n      />\n      <div className=\"buttom-announ\">\n        <p className='name-user'>\n          {usersData.firstname} {usersData.lastname}\n        </p>\n      <button\n        className=\"button-edit-announ\"\n        onClick={() => editAnnounFunction(editAnnoun.valueTitle, editAnnoun.valueBody, editAnnoun.id)}\n      >\n        Edit\n        </button>\n        </div>\n    </div>\n  ) : (\n    <div key={id} className=\"announ\">\n      <div>\n        <h3>{title}</h3>\n        <p className=\"body-announ\">{body}</p>\n      </div>\n      <div className=\"buttom-announ\">\n        <p className='name-user'>\n          {usersData.firstname} {usersData.lastname}\n        </p>\n        {localStorage.getItem(\"token\") && dataAboutUser.id === userId ? (\n          <div>\n            <button\n              onClick={() => openEditBlock(title, body, id)}\n              className=\"button-edit-announ\"\n            >\n              Edit\n            </button>\n            <button\n              onClick={() => deleteAnnoun(id)}\n              className=\"button-edit-announ\"\n            >\n              Delete\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Announcement;\n","/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx",["131","132"],"/Users/admin/Documents/mystudy/tell-me-react/src/components/Comment.jsx",["133"],"import axios from \"axios\";\nimport React from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\nimport \"../scss/components/comments.scss\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Comment = ({ id, body, userId }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false,\n    id: \"\",\n  });\n\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  React.useEffect(() => {\n    getDataUser();\n  }, []);\n\n  const getDataUser = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  };\n\n  const handleChange = (e) => {\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      value: e.target.value,\n    }));\n  };\n\n  const openUpdateBlock = (id, body) => {\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      value: body,\n      openUptComm: true,\n      id,\n    }));\n  };\n\n  const updateComment = ({ id }, updateBody) => {\n    const data = {\n      body: updateBody,\n      updatedAt: datetime,\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      data,\n      headers\n    );\n\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      openUptComm: false,\n    }));\n  };\n\n  const deleteComment = (id, postId) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      { headers }\n    );\n    console.log(`Bearer` + localStorage.getItem(\"token\"));\n    document.location.reload(true);\n  };\n\n  return (\n    <div key={id} className=\"comment-data\">\n      {updateCommentBody.openUptComm && id === updateCommentBody.id ? (\n        <div className=\"comment-content-for-update\">\n          <input\n            type=\"text\"\n            value={updateCommentBody.value}\n            onChange={handleChange}\n          />\n          <button onClick={() => updateComment(id, updateCommentBody.value)}>\n            Update\n          </button>\n        </div>\n      ) : (\n            <div key={id + 3 + \"li\"} className=\"comment-content\">\n              <img className=\"user-avatar\" src={usersData.avatar} alt=\"\" />\n            <p>{body}</p>\n            {localStorage.getItem(\"token\") && dataAboutUser.id === userId ? (\n              <div key={id + 1} className=\"button-block\">\n                <button onClick={() => openUpdateBlock(id, body)}>\n                  Update\n                </button>\n                <button key={id + 2} onClick={() => deleteComment(id)}>\n                  Delete\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":5,"column":22,"nodeType":"140","messageId":"141","endLine":5,"endColumn":30},{"ruleId":"142","severity":1,"message":"143","line":5,"column":96,"nodeType":"144","messageId":"145","endLine":5,"endColumn":109},{"ruleId":"138","severity":1,"message":"146","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":16},{"ruleId":"138","severity":1,"message":"147","line":1,"column":41,"nodeType":"140","messageId":"141","endLine":1,"endColumn":53},{"ruleId":"138","severity":1,"message":"146","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":16},{"ruleId":"138","severity":1,"message":"148","line":13,"column":5,"nodeType":"140","messageId":"141","endLine":13,"endColumn":13},{"ruleId":"138","severity":1,"message":"149","line":29,"column":10,"nodeType":"140","messageId":"141","endLine":29,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":45,"column":6,"nodeType":"152","endLine":45,"endColumn":8,"suggestions":"153"},{"ruleId":"138","severity":1,"message":"154","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"155","line":6,"column":23,"nodeType":"140","messageId":"141","endLine":6,"endColumn":30},{"ruleId":"138","severity":1,"message":"156","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":20},{"ruleId":"138","severity":1,"message":"148","line":13,"column":5,"nodeType":"140","messageId":"141","endLine":13,"endColumn":13},{"ruleId":"150","severity":1,"message":"157","line":33,"column":6,"nodeType":"152","endLine":33,"endColumn":8,"suggestions":"158"},{"ruleId":"138","severity":1,"message":"159","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":36,"column":13,"nodeType":"162","endLine":36,"endColumn":124},{"ruleId":"163","severity":1,"message":"164","line":76,"column":17,"nodeType":"165","endLine":77,"endColumn":12},{"ruleId":"138","severity":1,"message":"146","line":2,"column":17,"nodeType":"140","messageId":"141","endLine":2,"endColumn":23},{"ruleId":"138","severity":1,"message":"159","line":3,"column":23,"nodeType":"140","messageId":"141","endLine":3,"endColumn":34},{"ruleId":"138","severity":1,"message":"166","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":21},{"ruleId":"138","severity":1,"message":"167","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":15},{"ruleId":"138","severity":1,"message":"168","line":13,"column":9,"nodeType":"140","messageId":"141","endLine":13,"endColumn":17},{"ruleId":"138","severity":1,"message":"169","line":51,"column":13,"nodeType":"140","messageId":"141","endLine":51,"endColumn":17},{"ruleId":"138","severity":1,"message":"170","line":21,"column":10,"nodeType":"140","messageId":"141","endLine":21,"endColumn":24},{"ruleId":"138","severity":1,"message":"171","line":21,"column":26,"nodeType":"140","messageId":"141","endLine":21,"endColumn":43},{"ruleId":"150","severity":1,"message":"172","line":33,"column":6,"nodeType":"152","endLine":33,"endColumn":8,"suggestions":"173"},{"ruleId":"150","severity":1,"message":"174","line":43,"column":6,"nodeType":"152","endLine":43,"endColumn":8,"suggestions":"175"},{"ruleId":"150","severity":1,"message":"176","line":68,"column":6,"nodeType":"152","endLine":68,"endColumn":8,"suggestions":"177"},{"ruleId":"150","severity":1,"message":"174","line":33,"column":6,"nodeType":"152","endLine":33,"endColumn":8,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'GetPosts' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'announReducer'.","ObjectExpression","unexpected","'Button' is defined but never used.","'DATA_COMMENT' is defined but never used.","'datetime' is assigned a value but never used.","'currentPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'Route' is defined but never used.","'NavLink' is defined but never used.","'setAddData' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getUserPost'. Either include it or remove the dependency array.",["182"],"'useSelector' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'setDataUser' is defined but never used.","'error' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'name' is assigned a value but never used.","'updateDataPost' is assigned a value but never used.","'setUpdeteDataPost' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getDataUserAnnoun'. Either include it or remove the dependency array.",["183"],"React Hook React.useEffect has a missing dependency: 'getDataUser'. Either include it or remove the dependency array.",["184"],"React Hook React.useEffect has a missing dependency: 'getDataComment'. Either include it or remove the dependency array.",["185"],["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"193","fix":"197"},"Update the dependencies array to be: [dispatch]",{"range":"198","text":"199"},"Update the dependencies array to be: [getUserPost]",{"range":"200","text":"201"},"Update the dependencies array to be: [getDataUserAnnoun]",{"range":"202","text":"203"},"Update the dependencies array to be: [getDataUser]",{"range":"204","text":"205"},"Update the dependencies array to be: [getDataComment]",{"range":"206","text":"207"},{"range":"208","text":"205"},[1294,1296],"[dispatch]",[841,843],"[getUserPost]",[780,782],"[getDataUserAnnoun]",[1150,1152],"[getDataUser]",[1699,1701],"[getDataComment]",[784,786]]