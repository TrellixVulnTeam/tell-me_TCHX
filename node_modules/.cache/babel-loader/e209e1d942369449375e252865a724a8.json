{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\nimport \"../scss/components/getPosts.scss\";\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostBlock = ({\n  id,\n  title,\n  body,\n  userId,\n  createdAt\n}) => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComments, setDataComments] = React.useState([]);\n  const [userDataComments, setUserDataComments] = React.useState([]);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n    });\n  }, []); //  comments.map((comment) => {\n  //   setDataComments({\n  //     // id: comment.id,\n  //     // postId: comment.postId,\n  //     userId: comment.userId,\n  //     // createdAt: comment.createdAt,\n  //     // updateAt: comment.updateAt,\n  //   });\n  //           console.log(comment.userId);\n  // });\n  // console.log(dataComments.userId);\n\n  console.log('comments', comments);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${comments.userId}`).then(response => // setDataComments(data);\n    console.log('response', response));\n  }, []);\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${userId}`);\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n  };\n\n  let data = JSON.parse(localStorage.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [usersData.firstname, \" \", usersData.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), localStorage.getItem(\"token\") && usersData.id === data.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: () => editPost(id, title, body, userId, createdAt),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-of-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment\",\n            children: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostBlock, \"n0GifJE/ZeCefyk9CR+QN70nT1c=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostBlock;\nexport default PostBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBlock\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx"],"names":["axios","React","Button","UpdatePost","Route","Link","NavLink","classNames","setAddData","useDispatch","PostBlock","id","title","body","userId","createdAt","usersData","setUsersData","useState","comments","setComments","dataComments","setDataComments","userDataComments","setUserDataComments","dispatch","useEffect","fetch","then","response","json","data","console","log","deletePost","delete","editPost","JSON","parse","localStorage","user","firstname","lastname","getItem","map","comment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\nimport \"../scss/components/getPosts.scss\";\n\n\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\n\nconst PostBlock = ({ id, title, body, userId, createdAt }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComments, setDataComments] = React.useState([]);\n  const [userDataComments, setUserDataComments] = React.useState([]);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n      });\n  }, []);\n\n  //  comments.map((comment) => {\n  //   setDataComments({\n  //     // id: comment.id,\n  //     // postId: comment.postId,\n  //     userId: comment.userId,\n  //     // createdAt: comment.createdAt,\n  //     // updateAt: comment.updateAt,\n  //   });\n  //           console.log(comment.userId);\n  // });\n  // console.log(dataComments.userId);\n\n\nconsole.log('comments', comments);\n  React.useEffect(() => {\n  fetch(`https://ekreative-json-server.herokuapp.com/users/${comments.userId}`)\n    .then((response) => \n    \n        // setDataComments(data);\n  console.log('response', response)\n\n    );\n  }, []);\n\n  function deletePost() {\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/post/${userId}`\n    );\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt))\n  };\n\n  let data = JSON.parse(localStorage.user)\n\n  return (\n    <div className=\"post-block\">\n      <div className=\"content-post\">\n        <div className=\"content\">\n          <h3>{title}</h3>\n          <p>{body}</p>\n          <p>\n            {usersData.firstname} {usersData.lastname}\n          </p>\n        </div>{ localStorage.getItem(\"token\") && usersData.id === data.id  ?\n        (<div className=\"content-button\">\n          <button\n            className={classNames(\"button-post\", \"button\")}\n            onClick={() => editPost(id, title, body, userId, createdAt) }\n          >\n            Edit\n          </button>\n          <button\n            className={classNames(\"button-post\", \"button\")}\n            onClick={deletePost}\n          >\n            Delete\n          </button>\n        </div>) : ('')}\n      </div>\n\n      <div className=\"comments-of-post\">\n        <h3>comments</h3>\n        {comments.map((comment) => (\n          <div key={comment.id}>\n            {/* <p className=\"comment\">{comment.body}</p> */}\n            <ul>\n              <div>\n                <img src=\"\" alt=\"\" />\n                <p>{ }</p>\n              </div>\n              <li className=\"comment\">{comment.body}</li>\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostBlock;\n"]},"metadata":{},"sourceType":"module"}