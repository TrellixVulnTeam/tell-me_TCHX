{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostBlock = ({\n  id,\n  title,\n  body,\n  userId,\n  createdAt\n}) => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComments, setDataComments] = React.useState({});\n  const [userDataComments, setUserDataComments] = React.useState([]);\n  const dispatch = useDispatch(); // React.useEffect(() => {\n  //   fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setUsersData(data);\n  //     });\n  // }, []);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n    });\n  }, []); //  comments.map((comment) => {\n  //   setDataComments({\n  //     // id: comment.id,\n  //     // postId: comment.postId,\n  //     userId: comment.userId,\n  //     // createdAt: comment.createdAt,\n  //     // updateAt: comment.updateAt,\n  //   });\n  //           console.log(comment.userId);\n  // });\n  // console.log(dataComments.userId);\n  // React.useEffect(() => {\n  // fetch(`https://ekreative-json-server.herokuapp.com/users/${dataComments.userId}`)\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //       setUserDataComments(data);\n  // console.log('user data of comments', data);\n  //   });\n  // }, []);\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${userId}`);\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n    const modal = document.getElementById('update-post');\n    modal.className = 'modal-content';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [usersData.firstname, \" \", usersData.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: () => editPost(id, title, body, userId, createdAt),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-of-post\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment\",\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostBlock, \"cEy3k70uSti78rHE+0icQFf+3SA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostBlock;\nexport default PostBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBlock\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx"],"names":["axios","React","Button","UpdatePost","Route","Link","NavLink","classNames","setAddData","useDispatch","PostBlock","id","title","body","userId","createdAt","usersData","setUsersData","useState","comments","setComments","dataComments","setDataComments","userDataComments","setUserDataComments","dispatch","useEffect","fetch","then","response","json","data","deletePost","delete","editPost","modal","document","getElementById","className","firstname","lastname","map","comment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\n\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\n\nconst PostBlock = ({ id, title, body, userId, createdAt }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComments, setDataComments] = React.useState({});\n  const [userDataComments, setUserDataComments] = React.useState([]);\n  const dispatch = useDispatch();\n\n  // React.useEffect(() => {\n  //   fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setUsersData(data);\n  //     });\n  // }, []);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n      });\n  }, []);\n\n  //  comments.map((comment) => {\n  //   setDataComments({\n  //     // id: comment.id,\n  //     // postId: comment.postId,\n  //     userId: comment.userId,\n  //     // createdAt: comment.createdAt,\n  //     // updateAt: comment.updateAt,\n  //   });\n  //           console.log(comment.userId);\n  // });\n  // console.log(dataComments.userId);\n\n  // React.useEffect(() => {\n  // fetch(`https://ekreative-json-server.herokuapp.com/users/${dataComments.userId}`)\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //       setUserDataComments(data);\n  // console.log('user data of comments', data);\n\n  //   });\n  // }, []);\n\n  function deletePost() {\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/post/${userId}`\n    );\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt))\n    const modal = document.getElementById('update-post')\n    modal.className = 'modal-content'\n  };\n\n  return (\n    <div className=\"post-block\">\n      <div className=\"content-post\">\n        <div className=\"content\">\n          <h3>{title}</h3>\n          <p>{body}</p>\n          <p>\n            {usersData.firstname} {usersData.lastname}\n          </p>\n        </div>\n        <div className=\"content-button\">\n          <button\n            className={classNames(\"button-post\", \"button\")}\n            onClick={() => editPost(id, title, body, userId, createdAt) }\n          >\n            Edit\n          </button>\n          <button\n            className={classNames(\"button-post\", \"button\")}\n            onClick={deletePost}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n\n      <div className=\"comments-of-post\">\n        {/* <h3>Comments</h3> */}\n        {comments.map((comment) => (\n          <div key={comment.id}>\n            <p>{}</p>\n            <p className=\"comment\">{comment.body}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostBlock;\n"]},"metadata":{},"sourceType":"module"}