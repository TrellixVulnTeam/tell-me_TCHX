{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/GetPosts.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, PostBlock, Pagination } from \"./index\";\nimport { setAddData, setGetPostsPage } from \"../redux/action\";\nimport \"../scss/components/getPosts.scss\";\nimport Announcement from \"./Announcement\";\nimport { Link } from \"react-router-dom\";\nimport \"../scss/components/announcement.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst GetPosts = () => {\n  _s();\n\n  const [posts, setPosts] = React.useState([]);\n  const [announcements, setAnnouncements] = React.useState([]); // const [isLoaded, setIsLoaded] = React.useState(false);\n  // const [error, setError] = React.useState(null);\n\n  const [updateDataPost, setUpdateDataPost] = React.useState(null);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [postsPerPage] = React.useState(10); //redux\n\n  const dispatch = useDispatch();\n  const postReducer = useSelector(state => state.postReducer);\n  const postsPages = useSelector(state => state.paginateReducer);\n  console.log(postsPages); //pagination\n\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentPost = posts.slice(firstPostIndex, lastPostIndex);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/664/posts`).then(response => response.json()).then(data => {\n      setPosts(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    getDataAnnoun();\n  }, []);\n\n  const getDataAnnoun = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/664/announcements?_sort=createdAt&_order=desc&_limit=10`).then(response => response.json()).then(data => setAnnouncements(data));\n  };\n\n  const getUpdatePost = () => {\n    postsPages.map(dataPost => {\n      setUpdateDataPost({\n        title: dataPost.title,\n        body: dataPost.body,\n        userId: dataPost.userId,\n        createAt: dataPost.createdAt,\n        updatedAt: datetime\n      });\n    });\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/post`, updateDataPost, {\n      headers\n    });\n  };\n\n  const handleChange = e => {\n    dispatch(setAddData({\n      title: e.target.title,\n      body: e.target.body\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"get-posts\",\n    id: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-block\",\n      children: postsPages.map(dataPost => /*#__PURE__*/_jsxDEV(PostBlock, { ...dataPost\n      }, dataPost.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"announcements-home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"header-announs\",\n        children: \"announcements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"announcements\",\n        children: announcements.map(announ => /*#__PURE__*/_jsxDEV(Announcement, { ...announ\n        }, announ.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-button-announ\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create-announ\",\n          className: \"button-add-announ\",\n          children: \"Add new announcement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetPosts, \"6P47+/EiCs+lhHk1KH8duNOKsys=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = GetPosts;\nexport default GetPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetPosts\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/GetPosts.jsx"],"names":["axios","React","useDispatch","useSelector","Button","PostBlock","Pagination","setAddData","setGetPostsPage","Announcement","Link","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","GetPosts","posts","setPosts","useState","announcements","setAnnouncements","updateDataPost","setUpdateDataPost","currentPage","setCurrentPage","postsPerPage","dispatch","postReducer","state","postsPages","paginateReducer","console","log","lastPostIndex","firstPostIndex","currentPost","slice","paginate","pageNumber","useEffect","fetch","then","response","json","data","getDataAnnoun","getUpdatePost","map","dataPost","title","body","userId","createAt","createdAt","updatedAt","headers","Authorization","localStorage","getItem","patch","handleChange","e","target","id","length","announ"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, PostBlock, Pagination } from \"./index\";\nimport { setAddData, setGetPostsPage } from \"../redux/action\";\nimport \"../scss/components/getPosts.scss\";\nimport Announcement from \"./Announcement\";\nimport { Link } from \"react-router-dom\";\nimport \"../scss/components/announcement.scss\";\n\nvar currentdate = new Date();\n\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst GetPosts = () => {\n  const [posts, setPosts] = React.useState([]);\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  // const [isLoaded, setIsLoaded] = React.useState(false);\n  // const [error, setError] = React.useState(null);\n  const [updateDataPost, setUpdateDataPost] = React.useState(null);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [postsPerPage] = React.useState(10);\n\n  //redux\n  const dispatch = useDispatch();\n  const postReducer = useSelector((state) => state.postReducer);\n  const postsPages = useSelector((state) => state.paginateReducer);\n  console.log(postsPages);\n\n  //pagination\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentPost = posts.slice(firstPostIndex, lastPostIndex);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/664/posts`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPosts(data);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    getDataAnnoun();\n  }, []);\n\n  const getDataAnnoun = () => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/664/announcements?_sort=createdAt&_order=desc&_limit=10`\n    )\n      .then((response) => response.json())\n      .then((data) => setAnnouncements(data));\n  };\n\n  const getUpdatePost = () => {\n    postsPages.map((dataPost) => {\n      setUpdateDataPost({\n        title: dataPost.title,\n        body: dataPost.body,\n        userId: dataPost.userId,\n        createAt: dataPost.createdAt,\n        updatedAt: datetime,\n      });\n    });\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/post`,\n      updateDataPost,\n      { headers }\n    );\n  };\n\n  const handleChange = (e) => {\n    dispatch(setAddData({ title: e.target.title, body: e.target.body }));\n  };\n\n  return (\n    <div className=\"get-posts\" id=\"posts\">\n      <div className=\"posts-block\">\n        {postsPages.map((dataPost) => (\n          <PostBlock key={dataPost.id} {...dataPost} />\n        ))}\n      </div>\n      <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} />\n      <div className=\"announcements-home\">\n        <h3 className=\"header-announs\">announcements</h3>\n        <div className=\"announcements\">\n        {announcements.map((announ) => (\n          <Announcement key={announ.id} {...announ} />\n        ))}\n        </div>\n        {localStorage.getItem(\"token\") ? (\n          <div className=\"block-button-announ\">\n            <Link to=\"/create-announ\" className=\"button-add-announ\">\n              Add new announcement\n            </Link>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GetPosts;\n"]},"metadata":{},"sourceType":"module"}