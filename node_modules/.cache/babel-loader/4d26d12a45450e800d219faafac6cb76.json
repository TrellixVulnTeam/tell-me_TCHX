{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\nimport { useSelector } from \"react-redux\";\nimport { Comment } from \"./index\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setDataCreateComment, setDataDeletePost, setDataOfPost } from \"../redux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Post = () => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [updPost, setUpdPost] = React.useState({\n    body: \"\",\n    title: \"\",\n    openEdit: false,\n    response: {}\n  });\n  const dataPost = useSelector(state => state.posts.dataPost);\n  const comments = useSelector(state => state.commentsReducer.comments);\n  let dataAboutUser = JSON.parse(localStorage.user);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, [dataPost.userId]);\n\n  const updatePost = async (title, body, id) => {\n    const data = {\n      title,\n      body,\n      updateAt: datetime\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/posts/${dataPost.id}`, data, {\n      headers\n    }).then(response => dispatch(setDataOfPost(response.data)));\n    setUpdPost(prevState => ({ ...prevState,\n      openEdit: false\n    }));\n  };\n\n  const deletePost = id => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`, {\n      headers\n    });\n    dispatch(setDataDeletePost(id));\n  };\n\n  const openEditPost = (body, title) => {\n    setUpdPost({\n      body,\n      title,\n      openEdit: true\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdPost(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleChangeUserComment = e => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = postId => {\n    setNewComment(\"\");\n    const data = {\n      postId,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n      userId: dataAboutUser.id\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`, data, {\n      headers\n    }).then(response => dispatch(setDataCreateComment(response.data)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    id: `post-${dataPost.id}`,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Tell \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), updPost.openEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-title\",\n        value: updPost.title,\n        onChange: handleChange,\n        name: \"title\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-body\",\n        value: updPost.body,\n        onChange: handleChange,\n        name: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames(\"button-post\", \"button\"),\n        onClick: () => updatePost(updPost.title, updPost.body, dataPost.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: dataPost.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-body\",\n            children: dataPost.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-user\",\n            children: [usersData.firstname, \" \", usersData.lastname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), localStorage.getItem(\"token\") && usersData.id === dataAboutUser.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classNames(\"button-post\", \"button\"),\n              onClick: () => openEditPost(dataPost.body, dataPost.title),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                to: \"/\",\n                className: classNames(\"button-post\", \"button\"),\n                onClick: () => deletePost(dataPost.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-of-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, { ...comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: dataAboutUser.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: handleChangeUserComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              addComment(dataPost.id);\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"LawLQGsja4vzn5p095vPR3SYVmM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx"],"names":["axios","classNames","React","useSelector","Comment","Link","useDispatch","setDataCreateComment","setDataDeletePost","setDataOfPost","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Post","usersData","setUsersData","useState","newComment","setNewComment","updPost","setUpdPost","body","title","openEdit","response","dataPost","state","posts","comments","commentsReducer","dataAboutUser","JSON","parse","localStorage","user","dispatch","useEffect","fetch","userId","then","json","data","updatePost","id","updateAt","headers","Authorization","getItem","slice","patch","prevState","deletePost","delete","openEditPost","handleChange","e","name","value","target","handleChangeUserComment","preventDefault","addComment","postId","createdAt","updatedAt","post","firstname","lastname","map","comment","avatar"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\n\nimport { useSelector } from \"react-redux\";\nimport { Comment } from \"./index\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setDataCreateComment,\n  setDataDeletePost,\n  setDataOfPost,\n} from \"../redux/action\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Post = () => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [updPost, setUpdPost] = React.useState({\n    body: \"\",\n    title: \"\",\n    openEdit: false,\n    response: {},\n  });\n\n  const dataPost = useSelector((state) => state.posts.dataPost);\n  const comments = useSelector((state) => state.commentsReducer.comments);\n\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, [dataPost.userId]);\n\n  const updatePost = async (title, body, id) => {\n    const data = {\n      title,\n      body,\n      updateAt: datetime,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios\n      .patch(\n        `https://ekreative-json-server.herokuapp.com/664/posts/${dataPost.id}`,\n        data,\n        { headers }\n      )\n      .then((response) => dispatch(setDataOfPost(response.data)));\n\n    setUpdPost((prevState) => ({\n      ...prevState,\n      openEdit: false,\n    }));\n  };\n\n  const deletePost = (id) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/posts/${id}`,\n      { headers }\n    );\n    dispatch(setDataDeletePost(id));\n  };\n\n  const openEditPost = (body, title) => {\n    setUpdPost({\n      body,\n      title,\n      openEdit: true,\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUpdPost((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleChangeUserComment = (e) => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = (postId) => {\n    setNewComment(\"\");\n    const data = {\n      postId,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n      userId: dataAboutUser.id,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios\n      .post(`https://ekreative-json-server.herokuapp.com/664/comments`, data, {\n        headers,\n      })\n      .then((response) => dispatch(setDataCreateComment(response.data)));\n  };\n\n  return (\n    <div className=\"post\" id={`post-${dataPost.id}`}>\n      <Link to=\"/\" className=\"logo\">\n        <h2 className=\"logo\">\n          Tell <span>me</span>\n        </h2>\n      </Link>\n      {updPost.openEdit ? (\n        <div className=\"content-post-edit\">\n          <input\n            className=\"input-title\"\n            value={updPost.title}\n            onChange={handleChange}\n            name=\"title\"\n            type=\"text\"\n          />\n          <textarea\n            className=\"input-body\"\n            value={updPost.body}\n            onChange={handleChange}\n            name=\"body\"\n          />\n          <button\n            className={classNames(\"button-post\", \"button\")}\n            onClick={() => updatePost(updPost.title, updPost.body, dataPost.id)}\n          >\n            Edit\n          </button>\n        </div>\n      ) : (\n        <div className=\"content-post\">\n          <div className=\"\">\n            <div className=\"content\">\n              <h3>{dataPost.title}</h3>\n              <p className=\"post-body\">{dataPost.body}</p>\n            </div>\n            <div className=\"bottom-content\">\n              <p className=\"post-user\">\n                {usersData.firstname} {usersData.lastname}\n              </p>\n              {localStorage.getItem(\"token\") &&\n              usersData.id === dataAboutUser.id ? (\n                <div className=\"content-button\">\n                  <button\n                    className={classNames(\"button-post\", \"button\")}\n                    onClick={() => openEditPost(dataPost.body, dataPost.title)}\n                  >\n                    Edit\n                      </button>\n                      <Link to='/'>\n                  <button\n                    to={\"/\"}\n                    className={classNames(\"button-post\", \"button\")}\n                    onClick={() => deletePost(dataPost.id)}\n                  >\n                    Delete\n                        </button>\n                        </Link>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div className=\"comments-of-post\">\n            <h3>comments</h3>\n            {comments.map((comment) => (\n              <Comment key={comment.id} {...comment} />\n            ))}\n            {localStorage.getItem(\"token\") ? (\n              <div className=\"comment-input-block\">\n                <img src={dataAboutUser.avatar} alt=\"\" />\n                <input\n                  type=\"text\"\n                  value={newComment}\n                  onChange={handleChangeUserComment}\n                  />\n                <button\n                  onClick={() => {\n                    addComment(dataPost.id);\n                  }}\n                >\n                  &#43;\n                    </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}