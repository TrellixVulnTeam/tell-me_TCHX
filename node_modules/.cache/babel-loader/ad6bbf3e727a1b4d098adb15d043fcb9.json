{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst PostBlock = ({\n  id,\n  title,\n  body,\n  userId,\n  createdAt\n}) => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComments, setDataComments] = React.useState({});\n  const [userDataComments, setUserDataComments] = React.useState([]);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n    });\n  }, []); //  comments.map((comment) => {\n  //   setDataComments({\n  //     // id: comment.id,\n  //     // postId: comment.postId,\n  //     commentUserId: comment.userId,\n  //     // createdAt: comment.createdAt,\n  //     // updateAt: comment.updateAt,\n  //   });\n  //         //   console.log(comment.userId);\n  // });\n  // console.log( 'id', dataComments);\n  // console.log('data of comment', comments);\n  // React.useEffect(() => {\n  // fetch(`https://ekreative-json-server.herokuapp.com/users/${dataComments.commentUserId}`)\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //       setUserDataComments(data);\n  // console.log('user data of comments', data);\n  //   });\n  // }, []);\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${userId}`);\n  }\n\n  const getUpdatePost = () => {\n    const data = {\n      title: title,\n      body: body,\n      userId: userId,\n      createAt: createdAt,\n      updatedAt: datetime\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/post/`, data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [usersData.firstname, \" \", usersData.lastname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/update\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-post\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button-post\",\n        onClick: deletePost,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-of-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update your post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"header-for-post-form\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-for-title\",\n            value: title //   onChange={handleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"header-for-post-form\",\n            children: \"post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"input-for-post\",\n            value: body //   onChange={handleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"button-update\",\n            onClik: getUpdatePost,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, dataPost.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostBlock, \"uWTKIFSEK20zv8NblikLWCdjB00=\");\n\n_c = PostBlock;\nexport default PostBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBlock\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx"],"names":["axios","React","Button","UpdatePost","Route","Link","NavLink","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","PostBlock","id","title","body","userId","createdAt","usersData","setUsersData","useState","comments","setComments","dataComments","setDataComments","userDataComments","setUserDataComments","useEffect","fetch","then","response","json","data","deletePost","delete","getUpdatePost","createAt","updatedAt","patch","firstname","lastname","map","comment","dataPost"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,GAAnC;AACA,OAAO,mCAAP;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,OAAtB,QAAqC,kBAArC;;AAEA,IAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,IAAIC,QAAQ,GAAGF,WAAW,CAACG,WAAZ,KAA4B,GAA5B,GAAkCH,WAAW,CAACI,QAAZ,EAAlC,GACb,GADa,GACPJ,WAAW,CAACK,MAAZ,EADO,GACgB,GADhB,GAEbL,WAAW,CAACM,QAAZ,EAFa,GAEY,GAFZ,GAGbN,WAAW,CAACO,UAAZ,EAHa,GAGc,GAHd,GAIbP,WAAW,CAACQ,UAAZ,EAJF;;AAMA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAAD,KAA4C;AAAA;;AAC5D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,KAAK,CAACuB,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BzB,KAAK,CAACuB,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkC3B,KAAK,CAACuB,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0C7B,KAAK,CAACuB,QAAN,CAAe,EAAf,CAAhD;AAEAvB,EAAAA,KAAK,CAAC8B,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAE,qDAAoDZ,MAAO,EAA7D,CAAL,CACGa,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdb,MAAAA,YAAY,CAACa,IAAD,CAAZ;AACD,KAJH;AAKD,GAND,EAMG,EANH;AAQAnC,EAAAA,KAAK,CAAC8B,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CACF,+DAA8Df,EAAG,6BAD/D,CAAL,CAGGgB,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdV,MAAAA,WAAW,CAACU,IAAD,CAAX;AACD,KANH;AAOD,GARD,EAQG,EARH,EAd4D,CAwB5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,WAASC,UAAT,GAAsB;AACpBrC,IAAAA,KAAK,CAACsC,MAAN,CACG,wDAAuDlB,MAAO,EADjE;AAGD;;AAEC,QAAMmB,aAAa,GAAG,MAAM;AACvB,UAAMH,IAAI,GAAG;AACZlB,MAAAA,KAAK,EAAEA,KADK;AAEZC,MAAAA,IAAI,EAAEA,IAFM;AAGZC,MAAAA,MAAM,EAAEA,MAHI;AAIZoB,MAAAA,QAAQ,EAAEnB,SAJE;AAKZoB,MAAAA,SAAS,EAAEhC;AALC,KAAb;AAQHT,IAAAA,KAAK,CAAC0C,KAAN,CAAa,uDAAb,EAAqEN,IAArE;AACH,GAVC;;AAYF,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA,kBAAKlB;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,mBACGG,SAAS,CAACqB,SADb,OACyBrB,SAAS,CAACsB,QADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAUE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEP,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGZ,QAAQ,CAACoB,GAAT,CAAcC,OAAD,iBACZ;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIA,OAAO,CAAC3B;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAU2B,OAAO,CAAC7B,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,eASE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,MAAM,EAAC,EAAb;AAAA,kCAEE;AAAG,YAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,iBAFZ;AAGE,YAAA,KAAK,EAAEC,KAHT,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,kBAHF,eAYE;AAAG,YAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,gBAFZ;AAGE,YAAA,KAAK,EAAEC,IAHT,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,kBAbF,eAqBE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,eAFZ;AAGE,YAAA,MAAM,EAAEoB,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAkCQ,QAAQ,CAAC9B,EAA3C;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CA/HD;;GAAMD,S;;KAAAA,S;AAiIN,eAAeA,SAAf","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\n\nimport { Route, Link, NavLink } from \"react-router-dom\";\n\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() \n+ \"-\" + currentdate.getDay() + \"T\" \n+ currentdate.getHours() + \":\" \n+ currentdate.getMinutes() + \":\"\n+ currentdate.getSeconds();\n\nconst PostBlock = ({ id, title, body, userId, createdAt }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComments, setDataComments] = React.useState({});\n  const [userDataComments, setUserDataComments] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n      });\n  }, []);\n\n  //  comments.map((comment) => {\n  //   setDataComments({\n  //     // id: comment.id,\n  //     // postId: comment.postId,\n  //     commentUserId: comment.userId,\n  //     // createdAt: comment.createdAt,\n  //     // updateAt: comment.updateAt,\n  //   });\n  //         //   console.log(comment.userId);\n  // });\n\n  // console.log( 'id', dataComments);\n\n  // console.log('data of comment', comments);\n  // React.useEffect(() => {\n  // fetch(`https://ekreative-json-server.herokuapp.com/users/${dataComments.commentUserId}`)\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //       setUserDataComments(data);\n  // console.log('user data of comments', data);\n\n  //   });\n  // }, []);\n\n  function deletePost() {\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/post/${userId}`\n    );\n  }\n    \n    const getUpdatePost = () => {\n         const data = {\n          title: title,\n          body: body,\n          userId: userId,\n          createAt: createdAt,\n          updatedAt: datetime\n      }\n\n      axios.patch(`https://ekreative-json-server.herokuapp.com/664/post/`, data)\n  };\n\n  return (\n    <div className=\"post-block\">\n      <div className=\"content-post\">\n        <h3>{title}</h3>\n        <p>{body}</p>\n        <p>\n          {usersData.firstname} {usersData.lastname}\n        </p>\n        <Link to=\"/update\">\n          <Button className=\"button-post\">Edit</Button>\n        </Link>\n        {/* {false && <UpdatePost userId={userId} title={title} body={body} createdAt={createdAt}/>} */}\n        <Button className=\"button-post\" onClick={deletePost}>\n          Delete\n        </Button>\n      </div>\n\n      <div className=\"comments-of-post\">\n        <h3>Comments</h3>\n        {comments.map((comment) => (\n          <div key={comment.id}>\n            <p>{}</p>\n            <p>{comment.body}</p>\n          </div>\n        ))}\n\n        <div className=\"create-post\" key={dataPost.id}>\n          <h2>update your post</h2>\n          <form action=\"\">\n            {/* <div className=\"title-block\"> */}\n            <p className=\"header-for-post-form\">title</p>\n            <input\n              type=\"text\"\n              className=\"input-for-title\"\n              value={title}\n              //   onChange={handleChange}\n            />\n            {/* </div> */}\n\n            {/* <div className=\"post-block\"> */}\n            <p className=\"header-for-post-form\">post</p>\n            <textarea\n              type=\"text\"\n              className=\"input-for-post\"\n              value={body}\n              //   onChange={handleChange}\n            ></textarea>\n            {/* </div> */}\n\n            <Button\n              type=\"button\"\n              className=\"button-update\"\n              onClik={getUpdatePost}\n            >\n              Edit\n            </Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostBlock;\n"]},"metadata":{},"sourceType":"module"}