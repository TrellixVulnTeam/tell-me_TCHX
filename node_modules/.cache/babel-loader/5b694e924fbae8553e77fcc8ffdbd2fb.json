{"ast":null,"code":"import { DATA_ANNOUN, DATA_COMMENTS, DATA_CREATE_ANNOUN, DATA_CREATE_COMMENT, DATA_CREATE_POST, DATA_DELETE_ANNOUN, DATA_DELETE_COMMENT, DATA_DELETE_POST, DATA_EDIT_ANNOUN, DATA_OF_POST, GET_POSTS_PAGE, POSTS, UPDATE_COMMENT, UPDATE_POST } from \"./action\";\nconst initialState = {\n  posts: [],\n  announcements: [],\n  comments: [],\n  dataPost: {}\n}; // export const postReducer = (state = [], action) => {\n//   switch (action.type) {\n//     case ADD_DATA_TO_EDIT:\n//       const { id, title, body, userId, createdAt, key } = action;\n//       return [\n//         {\n//           id,\n//           title,\n//           body,\n//           userId,\n//           createdAt,\n//           key,\n//         },\n//       ];\n//     default:\n//       return state;\n//   }\n// };\n// export const userReducer = (state = [], action) => {\n//   switch (action.type) {\n//     case DATA_USER:\n//       const { id, email, firstname, lastname, age, avatar } = action;\n//       console.log(email);\n//       return [\n//         {\n//           id,\n//           email,\n//           firstname,\n//           lastname,\n//           age,\n//           avatar,\n//         },\n//       ];\n//     default:\n//       return state;\n//   }\n// };\n\nexport const paginateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSTS_PAGE:\n      return { ...state,\n        posts: [...state, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\nexport const announcementsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DATA_ANNOUN:\n      return { ...state,\n        announcements: action.payload\n      };\n\n    case DATA_EDIT_ANNOUN:\n      return { ...state,\n        announcements: state.announcements.map(announ => {\n          if (announ.id === action.payload.id) {\n            return action.payload;\n          }\n\n          return announ;\n        })\n      };\n\n    case DATA_DELETE_ANNOUN:\n      return { ...state,\n        announcements: state.announcements.filter(announ => announ.id !== action.payload)\n      };\n\n    case DATA_CREATE_ANNOUN:\n      return { ...state,\n        announcements: [...state.announcements, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\nexport const posts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POSTS:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case DATA_OF_POST:\n      return { ...state,\n        dataPost: action.payload\n      };\n\n    case UPDATE_POST:\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post.id === action.payload.id) {\n            return action.payload;\n          }\n\n          return post;\n        })\n      };\n\n    case DATA_DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post.id !== action.payload)\n      };\n\n    case DATA_CREATE_POST:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\nexport const commentsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DATA_COMMENTS:\n      return { ...state,\n        comments: action.payload\n      };\n\n    case UPDATE_COMMENT:\n      return { ...state,\n        comments: state.comments.map(comment => {\n          if (comment.id === action.payload.id) {\n            return action.payload;\n          }\n\n          return comment;\n        })\n      };\n\n    case DATA_DELETE_COMMENT:\n      return { ...state,\n        comments: state.comments.filter(comment => comment.id !== action.payload)\n      };\n\n    case DATA_CREATE_COMMENT:\n      return { ...state,\n        comments: [...state.comments, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/redux/reducer.js"],"names":["DATA_ANNOUN","DATA_COMMENTS","DATA_CREATE_ANNOUN","DATA_CREATE_COMMENT","DATA_CREATE_POST","DATA_DELETE_ANNOUN","DATA_DELETE_COMMENT","DATA_DELETE_POST","DATA_EDIT_ANNOUN","DATA_OF_POST","GET_POSTS_PAGE","POSTS","UPDATE_COMMENT","UPDATE_POST","initialState","posts","announcements","comments","dataPost","paginateReducer","state","action","type","payload","announcementsReducer","map","announ","id","filter","post","commentsReducer","comment"],"mappings":"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","sourcesContent":["import {\n  DATA_ANNOUN,\n  DATA_COMMENTS,\n  DATA_CREATE_ANNOUN,\n  DATA_CREATE_COMMENT,\n  DATA_CREATE_POST,\n  DATA_DELETE_ANNOUN,\n  DATA_DELETE_COMMENT,\n  DATA_DELETE_POST,\n  DATA_EDIT_ANNOUN,\n  DATA_OF_POST,\n  GET_POSTS_PAGE,\n  POSTS,\n  UPDATE_COMMENT,\n  UPDATE_POST,\n} from \"./action\";\n\nconst initialState = {\n  posts: [],\n  announcements: [],\n  comments: [],\n  dataPost: {},\n};\n\n\n// export const postReducer = (state = [], action) => {\n//   switch (action.type) {\n//     case ADD_DATA_TO_EDIT:\n//       const { id, title, body, userId, createdAt, key } = action;\n//       return [\n//         {\n//           id,\n//           title,\n//           body,\n//           userId,\n//           createdAt,\n//           key,\n//         },\n//       ];\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export const userReducer = (state = [], action) => {\n//   switch (action.type) {\n//     case DATA_USER:\n//       const { id, email, firstname, lastname, age, avatar } = action;\n//       console.log(email);\n//       return [\n//         {\n//           id,\n//           email,\n//           firstname,\n//           lastname,\n//           age,\n//           avatar,\n//         },\n//       ];\n//     default:\n//       return state;\n//   }\n// };\n\nexport const paginateReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POSTS_PAGE:\n      return {\n        ...state,\n        posts:[...state, action.payload]\n      };\n    default:\n      return state;\n  }\n};\n\n\n\nexport const announcementsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DATA_ANNOUN:\n      return {\n        ...state,\n        announcements: action.payload,\n      };\n    case DATA_EDIT_ANNOUN:\n      return {\n        ...state,\n        announcements: state.announcements.map((announ) => {\n          if (announ.id === action.payload.id) {\n            return action.payload;\n          }\n          return announ;\n        }),\n      };\n    case DATA_DELETE_ANNOUN:\n      return {\n        ...state,\n        announcements: state.announcements.filter(\n          (announ) => announ.id !== action.payload\n        ),\n      };\n    case DATA_CREATE_ANNOUN:\n      return {\n        ...state,\n        announcements: [...state.announcements, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n\nexport const posts = (state = initialState, action) => {\n  switch (action.type) {\n    case POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case DATA_OF_POST:\n      return {\n        ...state,\n        dataPost: action.payload,\n      };\n    case UPDATE_POST:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post.id === action.payload.id) {\n            return action.payload;\n          }\n          return post;\n        }),\n      };\n    case DATA_DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post.id !== action.payload),\n      };\n    case DATA_CREATE_POST:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\n\n\nexport const commentsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DATA_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload,\n      };\n    case UPDATE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.map((comment) => {\n          if (comment.id === action.payload.id) {\n            return action.payload;\n          }\n          return comment;\n        }),\n      };\n    case DATA_DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter(\n          (comment) => comment.id !== action.payload\n        ),\n      };\n    case DATA_CREATE_COMMENT:\n      return {\n        ...state,\n        comments: [...state.comments, action.payload]\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}