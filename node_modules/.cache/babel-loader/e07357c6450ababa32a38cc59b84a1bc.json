{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Authorization.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Input } from \"../conponents/index\";\nimport \"./../scss/app.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Authorization() {\n  _s();\n\n  const [state, setState] = React.useState({\n    isFormValid: false,\n    formData: {\n      userName: {\n        // value: \"\",\n        type: \"text\",\n        label: \"first and last name\",\n        errorMessage: \"fill in the field\",\n        valide: false,\n        touched: false\n      },\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"email\",\n        errorMessage: \"enter correct email\",\n        valide: false,\n        touched: false\n      },\n      password: {\n        value: \"\",\n        type: \"text\",\n        label: \"password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n        touched: false\n      },\n      confirmationPassword: {\n        value: \"\",\n        type: \"text\",\n        label: \"confirmation password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n        touched: false\n      },\n      age: {\n        value: \"\",\n        type: \"number\",\n        label: \"age\",\n        errorMessage: \"fill in the field\",\n        valide: false,\n        touched: false\n      },\n      avatar: {\n        value: \"\",\n        type: \"url\",\n        label: \"your avatar\",\n        errorMessage: \"enter correct url\",\n        valide: false,\n        touched: false\n      }\n    }\n  });\n\n  const changeInput = (event, controlData) => {\n    const formData = { ...state.formData\n    };\n    const data = { ...formData[controlData]\n    };\n    data.value = event.target.value;\n    data.touched = true;\n    data.valide = \"\";\n    formData[controlName] = control;\n    let isFormValid = true;\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid;\n    });\n    setState(prevState => ({ ...prevState,\n      formData,\n      isFormValid\n    }));\n  };\n\n  const renderInputs = () => {\n    return Object.keys(state.formData).map((controlData, index) => {\n      const data = state.formData[controlData];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        value: data.value,\n        type: data.type,\n        label: data.label,\n        errorMessage: data.errorMessage,\n        valide: data.valide,\n        touched: data.touched,\n        onChange: event => changeInput(event, controlData)\n      }, controlData + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authurization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: renderInputs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authorization, \"gXfaTNFtBvgiNd/n8tKAYJd1MQc=\");\n\n_c = Authorization;\nexport default Authorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Authorization.jsx"],"names":["React","Input","Authorization","state","setState","useState","isFormValid","formData","userName","type","label","errorMessage","valide","touched","email","value","password","confirmationPassword","age","avatar","changeInput","event","controlData","data","target","controlName","control","Object","keys","formControls","forEach","name","valid","prevState","renderInputs","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Input } from \"../conponents/index\";\nimport \"./../scss/app.scss\";\n\nfunction Authorization() {\n  const [state, setState] = React.useState({\n    isFormValid: false,\n    formData: {\n      userName: {\n        // value: \"\",\n        type: \"text\",\n        label: \"first and last name\",\n        errorMessage: \"fill in the field\",\n        valide: false,\n        touched: false,\n      },\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"email\",\n        errorMessage: \"enter correct email\",\n        valide: false,\n        touched: false,\n      },\n      password: {\n        value: \"\",\n        type: \"text\",\n        label: \"password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n        touched: false,\n      },\n      confirmationPassword: {\n        value: \"\",\n        type: \"text\",\n        label: \"confirmation password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n        touched: false,\n      },\n      age: {\n        value: \"\",\n        type: \"number\",\n        label: \"age\",\n        errorMessage: \"fill in the field\",\n        valide: false,\n        touched: false,\n      },\n      avatar: {\n        value: \"\",\n        type: \"url\",\n        label: \"your avatar\",\n        errorMessage: \"enter correct url\",\n        valide: false,\n        touched: false,\n      },\n    },\n  });\n\n  const changeInput = (event, controlData) => {\n    const formData = { ...state.formData };\n    const data = { ...formData[controlData] };\n\n    data.value = event.target.value;\n    data.touched = true;\n    data.valide = \"\";\n\n    formData[controlName] = control;\n    let isFormValid = true;\n\n    Object.keys(formControls).forEach((name) => {\n      isFormValid = formControls[name].valid && isFormValid;\n    });\n\n    setState((prevState) => ({\n      ...prevState,\n      formData,\n      isFormValid,\n    }));\n  };\n\n  const renderInputs = () => {\n    return Object.keys(state.formData).map((controlData, index) => {\n      const data = state.formData[controlData];\n\n      return (\n        <Input\n          key={controlData + index}\n          value={data.value}\n          type={data.type}\n          label={data.label}\n          errorMessage={data.errorMessage}\n          valide={data.valide}\n          touched={data.touched}\n          onChange={(event) => changeInput(event, controlData)}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"authurization\">\n      <h1>Authorization</h1>\n      <div className=\"form\">\n        <form>{renderInputs()}</form>\n      </div>\n    </div>\n  );\n}\n\nexport default Authorization;\n"]},"metadata":{},"sourceType":"module"}