{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setGetPostsPage } from \"../redux/action\";\nimport \"../scss/components/pagination.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    currentPage,\n    postsPerPage,\n    totalPosts,\n    setCurrentPage\n  } = _ref;\n  const [response, setResponse] = React.useState([]);\n  const paginPageWithPosts = [];\n  const dispatch = useDispatch();\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    paginPageWithPosts.push(i);\n  }\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/posts?_page=${currentPage}&_limit=${postsPerPage}`).then(response => response.json()).then(data => {\n      dispatch(setGetPostsPage(data));\n      setResponse(data);\n    });\n  }, [dispatch]);\n\n  const pagFunc = response => {\n    dispatch(setGetPostsPage(response));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: paginPageWithPosts.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      id: `${index + 1}`,\n      onClick: () => {\n        pagFunc(response);\n        setCurrentPage(number);\n      },\n      className: index + 1 === currentPage ? \"active\" : \"button-pag\",\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"zdHkafpzx0yqC3K62I/FlTZJ+Zs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/Pagination.jsx"],"names":["React","useDispatch","setGetPostsPage","Pagination","currentPage","postsPerPage","totalPosts","setCurrentPage","response","setResponse","useState","paginPageWithPosts","dispatch","i","Math","ceil","push","useEffect","fetch","then","json","data","pagFunc","map","number","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAO,oCAAP;;;AAEA,MAAMC,UAAU,GAAG,QAKb;AAAA;;AAAA,MALc;AAClBC,IAAAA,WADkB;AAElBC,IAAAA,YAFkB;AAGlBC,IAAAA,UAHkB;AAIlBC,IAAAA;AAJkB,GAKd;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACU,QAAN,CAAe,EAAf,CAAhC;AACA,QAAMC,kBAAkB,GAAG,EAA3B;AAEA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,OAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUT,UAAU,GAAGD,YAAvB,CAArB,EAA2DQ,CAAC,EAA5D,EAAgE;AAC9DF,IAAAA,kBAAkB,CAACK,IAAnB,CAAwBH,CAAxB;AACD;;AAEDb,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CACF,2DAA0Dd,WAAY,WAAUC,YAAa,EAD3F,CAAL,CAGGc,IAHH,CAGSX,QAAD,IAAcA,QAAQ,CAACY,IAAT,EAHtB,EAIGD,IAJH,CAISE,IAAD,IAAU;AACdT,MAAAA,QAAQ,CAACV,eAAe,CAACmB,IAAD,CAAhB,CAAR;AACAZ,MAAAA,WAAW,CAACY,IAAD,CAAX;AACD,KAPH;AAQD,GATD,EASG,CAACT,QAAD,CATH;;AAWA,QAAMU,OAAO,GAAId,QAAD,IAAc;AAC5BI,IAAAA,QAAQ,CAACV,eAAe,CAACM,QAAD,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cACGG,kBAAkB,CAACY,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,kBACtB;AACE,MAAA,EAAE,EAAG,GAAEA,KAAK,GAAG,CAAE,EADnB;AAGE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,OAAO,CAACd,QAAD,CAAP;AACAD,QAAAA,cAAc,CAACiB,MAAD,CAAd;AACD,OANH;AAOE,MAAA,SAAS,EAAEC,KAAK,GAAG,CAAR,KAAcrB,WAAd,GAA4B,QAA5B,GAAuC,YAPpD;AAAA,gBASGoB;AATH,OAEOA,MAFP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/CD;;GAAMrB,U;UASaF,W;;;KATbE,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setGetPostsPage } from \"../redux/action\";\nimport \"../scss/components/pagination.scss\";\n\nconst Pagination = ({\n  currentPage,\n  postsPerPage,\n  totalPosts,\n  setCurrentPage,\n}) => {\n  const [response, setResponse] = React.useState([]);\n  const paginPageWithPosts = [];\n\n  const dispatch = useDispatch();\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    paginPageWithPosts.push(i);\n  }\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/posts?_page=${currentPage}&_limit=${postsPerPage}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setGetPostsPage(data));\n        setResponse(data);\n      });\n  }, [dispatch]);\n\n  const pagFunc = (response) => {\n    dispatch(setGetPostsPage(response));\n  };\n\n  return (\n    <div className=\"pagination\">\n      {paginPageWithPosts.map((number, index) => (\n        <button\n          id={`${index + 1}`}\n          key={number}\n          onClick={() => {\n            pagFunc(response);\n            setCurrentPage(number);\n          }}\n          className={index + 1 === currentPage ? \"active\" : \"button-pag\"}\n        >\n          {number}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}