{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx\",\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostBlock = ({\n  id,\n  title,\n  body,\n  userId,\n  createdAt\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]); // const [dataComments, setDataComments] = React.useState({});\n\n  const [userDataComments, setUserDataComments] = React.useState([]);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n    });\n  }, []);\n  comments.map(_s(comment => {\n    _s();\n\n    React.useEffect(() => {\n      fetch(`https://ekreative-json-server.herokuapp.com/users/${comment.userId}`).then(response => response.json()).then(data => {\n        setUserDataComments(data);\n        console.log('user data of comments', data);\n      });\n    }, []);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${userId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [usersData.firstname, \" \", usersData.lastname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-of-post\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment\",\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PostBlock, \"6d25VBd6y/49rkdYp2bLpaYJwcA=\");\n\n_c = PostBlock;\nexport default PostBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBlock\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx"],"names":["axios","React","Button","UpdatePost","Route","Link","NavLink","classNames","PostBlock","id","title","body","userId","createdAt","usersData","setUsersData","useState","comments","setComments","userDataComments","setUserDataComments","useEffect","fetch","then","response","json","data","map","comment","console","log","deletePost","delete","firstname","lastname"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\n\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nconst PostBlock = ({ id, title, body, userId, createdAt }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  // const [dataComments, setDataComments] = React.useState({});\n  const [userDataComments, setUserDataComments] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n      });\n  }, []);\n\n   comments.map((comment) => {\n     React.useEffect(() => {\n  fetch(`https://ekreative-json-server.herokuapp.com/users/${comment.userId}`)\n    .then((response) => response.json())\n    .then((data) => {\n        setUserDataComments(data);\n  console.log('user data of comments', data);\n\n    });\n  }, []);\n\n  });\n\n\n  \n  function deletePost() {\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/post/${userId}`\n    );\n  }\n\n  return (\n    <div className=\"post-block\">\n      <div className=\"content-post\">\n        <div></div>\n        <h3>{title}</h3>\n        <p>{body}</p>\n        <p>\n          {usersData.firstname} {usersData.lastname}\n        </p>\n        {/* <button className={classNames('button-post', 'button')} >\n          Edit\n        </button>\n        <button className={classNames('button-post', 'button')} onClick={deletePost}>\n          Delete\n        </button> */}\n      </div>\n\n      <div className=\"comments-of-post\">\n        {/* <h3>Comments</h3> */}\n        {comments.map((comment) => (\n          <div key={comment.id}>\n            <p>{}</p>\n            <p className=\"comment\">{comment.body}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostBlock;\n"]},"metadata":{},"sourceType":"module"}