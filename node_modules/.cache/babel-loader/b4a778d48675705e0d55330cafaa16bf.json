{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Input } from '../conponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(params) {\n  _s();\n\n  const [user, setUser] = React.useState({\n    formData: {\n      email: {\n        type: \"email\",\n        value: \"\",\n        label: \"email\",\n        errorMessage: \"put correct email\",\n        valid: false,\n        touched: false\n      },\n      password: {\n        type: \"password\",\n        value: \"\",\n        label: \"password\",\n        errorMessage: \"password must have least 9 signs\",\n        valid: false,\n        touched: false\n      }\n    }\n  });\n\n  const onChangeHandler = (event, dataName) => {\n    const formData = { ...user.formData\n    };\n    const data = { ...formData[dataName]\n    };\n    data.value = event.target.value;\n    data.touched = true; // data.valid = validateControl(control.value, control.validation);\n\n    formData[dataName] = data;\n    let isFormValid = true;\n    Object.keys(formData).forEach(name => {\n      isFormValid = formData[name].valid && isFormValid;\n    });\n    setUser(prevState => ({ ...prevState,\n      formData,\n      isFormValid\n    }));\n  };\n\n  const renderInputs = () => {\n    return Object.keys(user.formData).map((dataName, index) => {\n      const data = user.formData[dataName];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: data.type,\n        value: data.value,\n        valid: data.valid,\n        touched: data.touched,\n        label: data.label,\n        shouldValidate: !!data.validation,\n        errorMessage: data.errorMessage,\n        onChange: event => onChangeHandler(event, dataName)\n      }, dataName + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authorization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: renderInputs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"i6J6I0AE2eeUlPdExzVfMfuPUsA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Login.jsx"],"names":["React","Input","Login","params","user","setUser","useState","formData","email","type","value","label","errorMessage","valid","touched","password","onChangeHandler","event","dataName","data","target","isFormValid","Object","keys","forEach","name","prevState","renderInputs","map","index","validation"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,eAAtB;;;AAGA,SAASC,KAAT,CAAeC,MAAf,EAAuB;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe;AACnCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,OADH;AAEHC,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,KAAK,EAAE,OAHJ;AAIHC,QAAAA,YAAY,EAAE,mBAJX;AAKHC,QAAAA,KAAK,EAAE,KALJ;AAMHC,QAAAA,OAAO,EAAE;AANN,OADD;AASNC,MAAAA,QAAQ,EAAE;AACNN,QAAAA,IAAI,EAAE,UADA;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,KAAK,EAAE,UAHD;AAINC,QAAAA,YAAY,EAAE,kCAJR;AAKNC,QAAAA,KAAK,EAAE,KALD;AAMNC,QAAAA,OAAO,EAAE;AANH;AATJ;AADyB,GAAf,CAAxB;;AAqBA,QAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,UAAMX,QAAQ,GAAG,EAAE,GAAGH,IAAI,CAACG;AAAV,KAAjB;AACA,UAAMY,IAAI,GAAG,EAAE,GAAGZ,QAAQ,CAACW,QAAD;AAAb,KAAb;AAEAC,IAAAA,IAAI,CAACT,KAAL,GAAaO,KAAK,CAACG,MAAN,CAAaV,KAA1B;AACAS,IAAAA,IAAI,CAACL,OAAL,GAAe,IAAf,CALyC,CAMzC;;AAEAP,IAAAA,QAAQ,CAACW,QAAD,CAAR,GAAqBC,IAArB;AAEA,QAAIE,WAAW,GAAG,IAAlB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYhB,QAAZ,EAAsBiB,OAAtB,CAA+BC,IAAD,IAAU;AACpCJ,MAAAA,WAAW,GAAGd,QAAQ,CAACkB,IAAD,CAAR,CAAeZ,KAAf,IAAwBQ,WAAtC;AACH,KAFD;AAIAhB,IAAAA,OAAO,CAAEqB,SAAD,KAAgB,EACpB,GAAGA,SADiB;AAEpBnB,MAAAA,QAFoB;AAGpBc,MAAAA;AAHoB,KAAhB,CAAD,CAAP;AAKH,GArBD;;AAuBA,QAAMM,YAAY,GAAG,MAAM;AAC3B,WAAOL,MAAM,CAACC,IAAP,CAAYnB,IAAI,CAACG,QAAjB,EAA2BqB,GAA3B,CAA+B,CAACV,QAAD,EAAWW,KAAX,KAAqB;AACzD,YAAMV,IAAI,GAAGf,IAAI,CAACG,QAAL,CAAcW,QAAd,CAAb;AACA,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAEC,IAAI,CAACV,IAFb;AAGE,QAAA,KAAK,EAAEU,IAAI,CAACT,KAHd;AAIE,QAAA,KAAK,EAAES,IAAI,CAACN,KAJd;AAKE,QAAA,OAAO,EAAEM,IAAI,CAACL,OALhB;AAME,QAAA,KAAK,EAAEK,IAAI,CAACR,KANd;AAOE,QAAA,cAAc,EAAE,CAAC,CAACQ,IAAI,CAACW,UAPzB;AAQE,QAAA,YAAY,EAAEX,IAAI,CAACP,YARrB;AASE,QAAA,QAAQ,EAAGK,KAAD,IAAWD,eAAe,CAACC,KAAD,EAAQC,QAAR;AATtC,SACOA,QAAQ,GAAGW,KADlB;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAfM,CAAP;AAgBD,GAjBC;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEF;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,kBAAOF,YAAY;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA1EQzB,K;;KAAAA,K;AA4ET,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Input } from '../conponents';\n\n\nfunction Login(params) {\n\n    const [user, setUser] = React.useState({\n        formData: {\n            email: {\n                type: \"email\",\n                value: \"\",\n                label: \"email\",\n                errorMessage: \"put correct email\",\n                valid: false,\n                touched: false,\n            },\n            password: {\n                type: \"password\",\n                value: \"\",\n                label: \"password\",\n                errorMessage: \"password must have least 9 signs\",\n                valid: false,\n                touched: false,\n            },\n        }\n    })\n\n    const onChangeHandler = (event, dataName) => {\n        const formData = { ...user.formData };\n        const data = { ...formData[dataName] };\n\n        data.value = event.target.value;\n        data.touched = true;\n        // data.valid = validateControl(control.value, control.validation);\n\n        formData[dataName] = data;\n\n        let isFormValid = true;\n\n        Object.keys(formData).forEach((name) => {\n            isFormValid = formData[name].valid && isFormValid;\n        });\n\n        setUser((prevState) => ({\n            ...prevState,\n            formData,\n            isFormValid,\n        }));\n    }\n\n    const renderInputs = () => {\n    return Object.keys(user.formData).map((dataName, index) => {\n      const data = user.formData[dataName];\n      return (\n        <Input\n          key={dataName + index}\n          type={data.type}\n          value={data.value}\n          valid={data.valid}\n          touched={data.touched}\n          label={data.label}\n          shouldValidate={!!data.validation}\n          errorMessage={data.errorMessage}\n          onChange={(event) => onChangeHandler(event, dataName)}\n        />\n      );\n    });\n  };\n\n\n    return (\n        <div className=\"authorization\">\n        <h2>Log In</h2>\n      <div className=\"form\">\n        <form>{renderInputs()}</form>\n      </div>\n    </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}