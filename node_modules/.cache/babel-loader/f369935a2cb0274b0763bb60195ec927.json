{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/Input.jsx\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport \"./../scss//components/_input.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(props) {\n  const inputType = props.type || \"text\";\n  const htmlFor = `${inputType}-${Math.random()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(\"input\", isInvalid(props) ? \"invalid\" : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: htmlFor,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: inputType,\n      id: htmlFor,\n      name: props.name,\n      value: props.value,\n      onChange: props.onChange,\n      name: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), props.formErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"invalid\",\n      children: props.formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/Input.jsx"],"names":["classNames","React","Input","props","inputType","type","htmlFor","Math","random","isInvalid","label","name","value","onChange","formErrors","length"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mCAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAN,IAAc,MAAhC;AACA,QAAMC,OAAO,GAAI,GAAEF,SAAU,IAAGG,IAAI,CAACC,MAAL,EAAc,EAA9C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAER,UAAU,CAAC,OAAD,EAAUS,SAAS,CAACN,KAAD,CAAT,GAAmB,SAAnB,GAA+B,EAAzC,CAA1B;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEG,OAAhB;AAAA,gBAA0BH,KAAK,CAACO;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAEN,SADR;AAEE,MAAA,EAAE,EAAEE,OAFN;AAGE,MAAA,IAAI,EAAEH,KAAK,CAACQ,IAHd;AAIE,MAAA,KAAK,EAAER,KAAK,CAACS,KAJf;AAKE,MAAA,QAAQ,EAAET,KAAK,CAACU,QALlB;AAME,MAAA,IAAI,EAAEV,KAAK,CAACQ;AANd;AAAA;AAAA;AAAA;AAAA,YAFF,EAUGR,KAAK,CAACW,UAAN,CAAiBC,MAAjB,GAA0B,CAA1B,iBACC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBAA2BZ,KAAK,CAACW;AAAjC;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KApBQZ,K;AAsBT,eAAeA,KAAf","sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport \"./../scss//components/_input.scss\";\n\nfunction Input(props) {\n  const inputType = props.type || \"text\";\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  return (\n    <div className={classNames(\"input\", isInvalid(props) ? \"invalid\" : \"\")}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <input\n        type={inputType}\n        id={htmlFor}\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        name={props.name}\n      />\n      {props.formErrors.length > 0 && (\n        <span className=\"invalid\">{props.formErrors}</span>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}