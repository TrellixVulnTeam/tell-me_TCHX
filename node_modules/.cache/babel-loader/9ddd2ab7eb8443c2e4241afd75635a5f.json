{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Singup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./../scss/app.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Authorization() {\n  _s();\n\n  const [user, setUser] = React.useState({\n    formData: {\n      fistname: {\n        type: \"name\",\n        value: \"\",\n        label: \"first name\",\n        errorMessage: \"firstname cannot be empty\",\n        touched: false\n      },\n      lastname: {\n        type: \"name\",\n        value: \"\",\n        label: \"last name\",\n        errorMessage: \"lastname cannot be empty\",\n        touched: false\n      },\n      email: {\n        type: \"email\",\n        value: \"\",\n        label: \"email\",\n        errorMessage: \"put correct email\",\n        touched: false\n      },\n      password: {\n        type: \"password\",\n        value: \"\",\n        label: \"password\",\n        errorMessage: \"password must have least 9 signs\",\n        touched: false\n      },\n      confirmPassword: {\n        type: \"password\",\n        value: \"\",\n        label: \"confirmation password\",\n        errorMessage: \"put correct password\",\n        touched: false\n      },\n      age: {\n        type: \"age\",\n        value: \"\",\n        label: \"age\",\n        errorMessage: \"age cannot be empty\",\n        touched: false\n      },\n      avatar: {\n        type: \"url\",\n        value: \"\",\n        label: \"avatar\",\n        errorMessage: \"avatar cannot be empty\",\n        touched: false\n      }\n    }\n  });\n\n  const renderInputs = () => {\n    return Object.keys(state.formData).map((dataName, index) => {\n      const data = state.formData[dataName];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: data.type,\n        value: data.value,\n        valid: data.valid,\n        touched: data.touched,\n        label: data.label,\n        shouldValidate: !!data.validation,\n        errorMessage: data.errorMessage,\n        onChange: event => onChangeHandler(event, dataName)\n      }, dataName + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authorization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sing Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), renderInputs()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authorization, \"q3QCdS8eHigrcOGg3pWnpdhgij0=\");\n\n_c = Authorization;\nexport default Singup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Singup.jsx"],"names":["React","Authorization","user","setUser","useState","formData","fistname","type","value","label","errorMessage","touched","lastname","email","password","confirmPassword","age","avatar","renderInputs","Object","keys","state","map","dataName","index","data","valid","validation","event","onChangeHandler","Singup"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./../scss/app.scss\";\n\nfunction Authorization() {\n  const [user, setUser] = React.useState({\n    formData: {\n      fistname: {\n        type: \"name\",\n        value: \"\",\n        label: \"first name\",\n        errorMessage: \"firstname cannot be empty\",\n        touched: false,\n      },\n      lastname: {\n        type: \"name\",\n        value: \"\",\n        label: \"last name\",\n        errorMessage: \"lastname cannot be empty\",\n        touched: false,\n      },\n      email: {\n        type: \"email\",\n        value: \"\",\n        label: \"email\",\n        errorMessage: \"put correct email\",\n        touched: false,\n      },\n      password: {\n        type: \"password\",\n        value: \"\",\n        label: \"password\",\n        errorMessage: \"password must have least 9 signs\",\n        touched: false,\n      },\n      confirmPassword: {\n        type: \"password\",\n        value: \"\",\n        label: \"confirmation password\",\n        errorMessage: \"put correct password\",\n        touched: false,\n      },\n      age: {\n        type: \"age\",\n        value: \"\",\n        label: \"age\",\n        errorMessage: \"age cannot be empty\",\n        touched: false,\n      },\n      avatar: {\n        type: \"url\",\n        value: \"\",\n        label: \"avatar\",\n        errorMessage: \"avatar cannot be empty\",\n        touched: false,\n      },\n    }\n  });\n\n  const renderInputs = () => {\n    return Object.keys(state.formData).map((dataName, index) => {\n      const data = state.formData[dataName];\n      return (\n        <Input\n          key={dataName + index}\n          type={data.type}\n          value={data.value}\n          valid={data.valid}\n          touched={data.touched}\n          label={data.label}\n          shouldValidate={!!data.validation}\n          errorMessage={data.errorMessage}\n          onChange={(event) => onChangeHandler(event, dataName)}\n        />\n      );\n    });\n  }\n\n  return (\n    <div className=\"authorization\">\n      <h1>Sing Up</h1>\n        {renderInputs()}\n    </div>\n  );\n}\n\nexport default Singup;\n"]},"metadata":{},"sourceType":"module"}