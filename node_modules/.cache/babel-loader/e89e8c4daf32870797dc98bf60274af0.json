{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Comment from \"./Comment\";\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Post = () => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  let data = JSON.parse(localStorage.user);\n  const dataPost = useSelector(state => state.dataPostReducer);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n\n  const deletePost = id => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`, {\n      headers\n    });\n  };\n\n  React.useEffect(() => {\n    getDataComment();\n  }, []);\n\n  const getDataComment = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${dataPost.id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n    });\n  };\n\n  const handleChangeUserComment = e => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = postId => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\"\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`, data, headers); // updateDiv(postId)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    id: `post-${dataPost.id}`,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Tell \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: dataPost.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-body\",\n          children: dataPost.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-user\",\n          children: [usersData.firstname, \" \", usersData.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), localStorage.getItem(\"token\") && usersData.id === data.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classNames(\"button-post\", \"button\"),\n            onClick: () => {},\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classNames(\"button-post\", \"button\"),\n            onClick: () => deletePost(dataPost.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-of-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, { ...comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-input-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComment,\n          onChange: handleChangeUserComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addComment(dataPost.id),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"7hNKeeTUYH14so7J35BmAriB2nA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx"],"names":["axios","classNames","React","useSelector","Comment","Link","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Post","usersData","setUsersData","useState","comments","setComments","newComment","setNewComment","data","JSON","parse","localStorage","user","dataPost","state","dataPostReducer","useEffect","fetch","userId","then","response","json","deletePost","id","headers","Authorization","getItem","slice","delete","getDataComment","handleChangeUserComment","e","preventDefault","target","value","addComment","postId","body","createdAt","updatedAt","post","title","firstname","lastname","map","comment","avatar"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,8BAAP;AACA,OAAO,kCAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,IAAIC,QAAQ,GACVF,WAAW,CAACG,WAAZ,KACA,GADA,GAEAH,WAAW,CAACI,QAAZ,EAFA,GAGA,GAHA,GAIAJ,WAAW,CAACK,MAAZ,EAJA,GAKA,GALA,GAMAL,WAAW,CAACM,QAAZ,EANA,GAOA,GAPA,GAQAN,WAAW,CAACO,UAAZ,EARA,GASA,GATA,GAUAP,WAAW,CAACQ,UAAZ,EAXF;;AAaA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BpB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAApC;AAEA,MAAIK,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,IAAxB,CAAX;AACA,QAAMC,QAAQ,GAAGzB,WAAW,CAAE0B,KAAD,IAAWA,KAAK,CAACC,eAAlB,CAA5B;AAEA5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CACF,qDAAoDJ,QAAQ,CAACK,MAAO,EADlE,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISX,IAAD,IAAU;AACdN,MAAAA,YAAY,CAACM,IAAD,CAAZ;AACD,KANH;AAOD,GARD,EAQG,EARH;;AAUA,QAAMc,UAAU,GAAIC,EAAD,IAAQ;AACzB,UAAMC,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAG,UAASd,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BC,KAA9B,CAAoC,CAApC,EAAuC,CAAC,CAAxC,CAA2C;AADtD,KAAhB;AAGA1C,IAAAA,KAAK,CAAC2C,MAAN,CACG,yDAAwDL,EAAG,EAD9D,EAEE;AAAEC,MAAAA;AAAF,KAFF;AAID,GARD;;AAUArC,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AACpBa,IAAAA,cAAc;AACf,GAFD,EAEG,EAFH;;AAIA,QAAMA,cAAc,GAAG,MAAM;AAC3BZ,IAAAA,KAAK,CACF,+DAA8DJ,QAAQ,CAACU,EAAG,6BADxE,CAAL,CAGGJ,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISX,IAAD,IAAU;AACdH,MAAAA,WAAW,CAACG,IAAD,CAAX;AACD,KANH;AAOD,GARD;;AAUA,QAAMsB,uBAAuB,GAAIC,CAAD,IAAO;AACrCA,IAAAA,CAAC,CAACC,cAAF;AACAzB,IAAAA,aAAa,CAACwB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAIC,MAAD,IAAY;AAC7B,UAAM5B,IAAI,GAAG;AACX4B,MAAAA,MADW;AAEX;AACAC,MAAAA,IAAI,EAAE/B,UAHK;AAIXgC,MAAAA,SAAS,EAAE7C,QAJA;AAKX8C,MAAAA,SAAS,EAAE;AALA,KAAb;AAQA,UAAMf,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAG,UAASd,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BC,KAA9B,CAAoC,CAApC,EAAuC,CAAC,CAAxC,CAA2C;AADtD,KAAhB;AAIA1C,IAAAA,KAAK,CAACuD,IAAN,CACG,0DADH,EAEEhC,IAFF,EAGEgB,OAHF,EAb6B,CAmB7B;AACD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAG,QAAOX,QAAQ,CAACU,EAAG,EAA9C;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,MAAvB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAA,oBAAKV,QAAQ,CAAC4B;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0B5B,QAAQ,CAACwB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,qBACGpC,SAAS,CAACyC,SADb,OACyBzC,SAAS,CAAC0C,QADnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGhC,YAAY,CAACe,OAAb,CAAqB,OAArB,KAAiCzB,SAAS,CAACsB,EAAV,KAAiBf,IAAI,CAACe,EAAvD,gBACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAErC,UAAU,CAAC,aAAD,EAAgB,QAAhB,CADvB;AAEE,YAAA,OAAO,EAAE,MAAM,CAAE,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,SAAS,EAAEA,UAAU,CAAC,aAAD,EAAgB,QAAhB,CADvB;AAEE,YAAA,OAAO,EAAE,MAAMoC,UAAU,CAACT,QAAQ,CAACU,EAAV,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAgBC,EApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAmCE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGnB,QAAQ,CAACwC,GAAT,CAAcC,OAAD,iBACZ,QAAC,OAAD,OAA8BA;AAA9B,SAAcA,OAAO,CAACtB,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,EAKGZ,YAAY,CAACe,OAAb,CAAqB,OAArB,iBACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAElB,IAAI,CAACsC,MAAf;AAAuB,UAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAExC,UAFT;AAGE,UAAA,QAAQ,EAAEwB;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAQ,UAAA,OAAO,EAAE,MAAMK,UAAU,CAACtB,QAAQ,CAACU,EAAV,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAWC,EAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CA9HD;;GAAMvB,I;UAMaZ,W;;;KANbY,I;AAgIN,eAAeA,IAAf","sourcesContent":["import axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Comment from \"./Comment\";\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\nimport { Link } from \"react-router-dom\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Post = () => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n\n  let data = JSON.parse(localStorage.user);\n  const dataPost = useSelector((state) => state.dataPostReducer);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n  const deletePost = (id) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/posts/${id}`,\n      { headers }\n    );\n  }\n\n  React.useEffect(() => {\n    getDataComment();\n  }, []);\n\n  const getDataComment = () => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${dataPost.id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n      });\n  };\n\n  const handleChangeUserComment = (e) => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = (postId) => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.post(\n      `https://ekreative-json-server.herokuapp.com/664/comments`,\n      data,\n      headers\n    );\n\n    // updateDiv(postId)\n  };\n\n  return (\n    <div className=\"post\" id={`post-${dataPost.id}`}>\n      <Link to=\"/\" className=\"logo\">\n        <h2 className=\"logo\">\n          Tell <span>me</span>\n        </h2>\n      </Link>\n      <div className=\"content-post\">\n        <div className=\"content\">\n          <h3>{dataPost.title}</h3>\n          <p className=\"post-body\">{dataPost.body}</p>\n        </div>\n        <div className=\"bottom-content\">\n          <p className=\"post-user\">\n            {usersData.firstname} {usersData.lastname}\n          </p>\n          {localStorage.getItem(\"token\") && usersData.id === data.id ? (\n            <div className=\"content-button\">\n              <button\n                className={classNames(\"button-post\", \"button\")}\n                onClick={() => {}}\n              >\n                Edit\n              </button>\n              <button\n                className={classNames(\"button-post\", \"button\")}\n                onClick={() => deletePost(dataPost.id)}\n              >\n                Delete\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <div className=\"comments-of-post\">\n        <h3>comments</h3>\n        {comments.map((comment) => (\n          <Comment key={comment.id} {...comment} />\n        ))}\n        {localStorage.getItem(\"token\") ? (\n          <div className=\"comment-input-block\">\n            <img src={data.avatar} alt=\"\" />\n            <input\n              type=\"text\"\n              value={newComment}\n              onChange={handleChangeUserComment}\n            />\n            <button onClick={() => addComment(dataPost.id)}>&#43;</button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}