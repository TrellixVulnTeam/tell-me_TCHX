{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Announcements.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/announcements.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Announcements = () => {\n  _s();\n\n  const [announcements, setAnnouncements] = React.useState([]);\n  const [userAnnouncements, setUserAnnouncements] = React.useState([]);\n  console.log(announcements);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/664/announcements?_sort=createdAt&_order=desc&_limit=10`).then(response => response.json()).then(data => [setAnnouncements(data)]);\n  }, []); //     React.useEffect(() => {\n  //     fetch()\n  //       .then((response) => response.json())\n  //         .then((data) => {\n  //             setUserAnnouncements(data);\n  //       });\n  //   }, []);\n\n  const addNewAnnoun = () => {\n    const data = {\n      createAt: datetime,\n      updateAt: \"\"\n    };\n    const header = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.post(\"https://ekreative-json-server.herokuapp.com/664/announcements\", data, header);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"announcements-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"header-announs\",\n      children: \"announcements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"announcements\",\n      children: announcements.map(announ => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"announ\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: announ.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"body-announ\",\n          children: announ.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, announ.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-button-announ\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNewAnnoun(),\n        className: \"button-add-announ\",\n        children: \"Add new announcement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Announcements, \"ju1Rhzm4Ozp+oMpUmjJ1PGXwIEU=\");\n\n_c = Announcements;\nexport default Announcements;\n\nvar _c;\n\n$RefreshReg$(_c, \"Announcements\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/tell-me-react/src/components/Announcements.jsx"],"names":["axios","React","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Announcements","announcements","setAnnouncements","useState","userAnnouncements","setUserAnnouncements","console","log","useEffect","fetch","then","response","json","data","addNewAnnoun","createAt","updateAt","header","Authorization","localStorage","getItem","slice","post","map","announ","title","body","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uCAAP;;AAEA,IAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,IAAIC,QAAQ,GACVF,WAAW,CAACG,WAAZ,KACA,GADA,GAEAH,WAAW,CAACI,QAAZ,EAFA,GAGA,GAHA,GAIAJ,WAAW,CAACK,MAAZ,EAJA,GAKA,GALA,GAMAL,WAAW,CAACM,QAAZ,EANA,GAOA,GAPA,GAQAN,WAAW,CAACO,UAAZ,EARA,GASA,GATA,GAUAP,WAAW,CAACQ,UAAZ,EAXF;;AAaA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAA1C;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cf,KAAK,CAACa,QAAN,CAAe,EAAf,CAAlD;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AAEAX,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CACF,qGADE,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU,CAACX,gBAAgB,CAACW,IAAD,CAAjB,CAJlB;AAKD,GAND,EAMG,EANH,EAL0B,CAa1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMD,IAAI,GAAG;AACXE,MAAAA,QAAQ,EAAEtB,QADC;AAEXuB,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKA,UAAMC,MAAM,GAAG;AACbC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,KAA9B,CAAoC,CAApC,EAAuC,CAAC,CAAxC,CAA2C;AADvD,KAAf;AAIAhC,IAAAA,KAAK,CAACiC,IAAN,CACE,+DADF,EAEET,IAFF,EAGEI,MAHF;AAKD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGhB,aAAa,CAACsB,GAAd,CAAmBC,MAAD,iBACjB;AAAqB,QAAA,SAAS,EAAC,QAA/B;AAAA,gCACE;AAAA,oBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BD,MAAM,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUF,MAAM,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,EAWGR,YAAY,CAACC,OAAb,CAAqB,OAArB,iBACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMN,YAAY,EAAnC;AAAuC,QAAA,SAAS,EAAC,mBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAOC,EAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7DD;;GAAMd,a;;KAAAA,a;AA+DN,eAAeA,aAAf","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/announcements.scss\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Announcements = () => {\n  const [announcements, setAnnouncements] = React.useState([]);\n  const [userAnnouncements, setUserAnnouncements] = React.useState([]);\n  console.log(announcements);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/664/announcements?_sort=createdAt&_order=desc&_limit=10`\n    )\n      .then((response) => response.json())\n      .then((data) => [setAnnouncements(data)]);\n  }, []);\n\n  //     React.useEffect(() => {\n  //     fetch()\n  //       .then((response) => response.json())\n  //         .then((data) => {\n  //             setUserAnnouncements(data);\n  //       });\n  //   }, []);\n\n  const addNewAnnoun = () => {\n    const data = {\n      createAt: datetime,\n      updateAt: \"\",\n    };\n\n    const header = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.post(\n      \"https://ekreative-json-server.herokuapp.com/664/announcements\",\n      data,\n      header\n    );\n  };\n\n  return (\n    <div className=\"announcements-home\">\n      <h3 className=\"header-announs\">announcements</h3>\n      <div className=\"announcements\">\n        {announcements.map((announ) => (\n          <div key={announ.id} className=\"announ\">\n            <h3>{announ.title}</h3>\n            <p className=\"body-announ\">{announ.body}</p>\n            {}\n          </div>\n        ))}\n      </div>\n      {localStorage.getItem(\"token\") ? (\n        <div className=\"block-button-announ\">\n          <button onClick={() => addNewAnnoun()} className=\"button-add-announ\">\n            Add new announcement\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Announcements;\n"]},"metadata":{},"sourceType":"module"}