{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\nimport \"../scss/components/getPosts.scss\";\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData, setDataComment } from \"../redux/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostBlock = ({\n  id,\n  title,\n  body,\n  userId,\n  createdAt\n}) => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComment, setDataComment] = React.useState({});\n  const [userDataComments, setUserDataComments] = React.useState([]);\n  const dispatch = useDispatch(); // const dataComment = useSelector((state) => state.commentReducer);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n      data.map(comment => setDataComment({\n        id: comment.id,\n        postId: comment.postId,\n        body: comment.body,\n        userId: comment.userId,\n        createAt: comment.createAt,\n        updateAt: comment.updateAt\n      }));\n    });\n  }, []);\n  console.log(dataComment.userId); //  comments.map((comment) => {\n  //    dispatch(setDataComment({\n  //      id: comment.id,\n  //      postId: comment.postId,\n  //      body: comment.body,\n  //      userId: comment.userId,\n  //      createAt: comment.createAt,\n  //      updateAt: comment.updateAt\n  //   }))\n  // });\n  //   React.useEffect(() => {\n  // fetch(`https://ekreative-json-server.herokuapp.com/users/${comment.userId}`)\n  //   .then((response) =>response.json())\n  //   .then((data) => { \n  //     console.log(data);\n  //   }\n  //   );\n  // }, [])\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${userId}`);\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n  };\n\n  let data = JSON.parse(localStorage.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [usersData.firstname, \" \", usersData.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), localStorage.getItem(\"token\") && usersData.id === data.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: () => editPost(id, title, body, userId, createdAt),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-of-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\" \", comment.id === dataComment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment\",\n            children: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostBlock, \"GewvCmPikLAI2PQfAJjXnoPaneg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostBlock;\nexport default PostBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBlock\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx"],"names":["axios","React","Button","UpdatePost","Route","Link","NavLink","classNames","setAddData","setDataComment","useDispatch","useSelector","PostBlock","id","title","body","userId","createdAt","usersData","setUsersData","useState","comments","setComments","dataComment","userDataComments","setUserDataComments","dispatch","useEffect","fetch","then","response","json","data","map","comment","postId","createAt","updateAt","console","log","deletePost","delete","editPost","JSON","parse","localStorage","user","firstname","lastname","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Button, UpdatePost } from \".\";\nimport \"../scss/components/postBlock.scss\";\nimport \"../scss/components/getPosts.scss\";\n\nimport { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData, setDataComment } from \"../redux/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst PostBlock = ({ id, title, body, userId, createdAt }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComment, setDataComment] = React.useState({});\n  const [userDataComments, setUserDataComments] = React.useState([]);\n\n  const dispatch = useDispatch();\n\n  // const dataComment = useSelector((state) => state.commentReducer);\n\n\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n        data.map((comment) =>\n            setDataComment({\n              id: comment.id,\n              postId: comment.postId,\n              body: comment.body,\n              userId: comment.userId,\n              createAt: comment.createAt,\n              updateAt: comment.updateAt,\n            })\n        );\n      });\n  }, []);\n\n  console.log(dataComment.userId);\n\n  //  comments.map((comment) => {\n  //    dispatch(setDataComment({\n  //      id: comment.id,\n  //      postId: comment.postId,\n  //      body: comment.body,\n  //      userId: comment.userId,\n  //      createAt: comment.createAt,\n  //      updateAt: comment.updateAt\n  //   }))\n  // });\n\n  //   React.useEffect(() => {\n  // fetch(`https://ekreative-json-server.herokuapp.com/users/${comment.userId}`)\n  //   .then((response) =>response.json())\n  //   .then((data) => { \n  //     console.log(data);\n  //   }\n  //   );\n  // }, [])\n\n  function deletePost() {\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/post/${userId}`\n    );\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n  };\n\n  let data = JSON.parse(localStorage.user);\n\n  return (\n    <div className=\"post-block\">\n      <div className=\"content-post\">\n        <div className=\"content\">\n          <h3>{title}</h3>\n          <p>{body}</p>\n          <p>\n            {usersData.firstname} {usersData.lastname}\n          </p>\n        </div>\n        {localStorage.getItem(\"token\") && usersData.id === data.id ? (\n          <div className=\"content-button\">\n            <button\n              className={classNames(\"button-post\", \"button\")}\n              onClick={() => editPost(id, title, body, userId, createdAt)}\n            >\n              Edit\n            </button>\n            <button\n              className={classNames(\"button-post\", \"button\")}\n              onClick={deletePost}\n            >\n              Delete\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div className=\"comments-of-post\">\n        <h3>comments</h3>\n        {comments.map((comment) => (\n          <div key={comment.id}>\n            {/* <p className=\"comment\">{comment.body}</p> */}\n            <ul>\n              {\" \"}\n              {comment.id === dataComment.id ? (\n                <div>\n                  <img src=\"\" alt=\"\" />\n                  <p>{}</p>\n                </div>\n              ) : (\n                \"\"\n              )}\n              <li className=\"comment\">{comment.body}</li>\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostBlock;\n"]},"metadata":{},"sourceType":"module"}