{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/postBlock.scss\";\nimport \"../scss/components/getPosts.scss\"; // import { Route, Link, NavLink } from \"react-router-dom\";\n\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst PostBlock = ({\n  id,\n  title,\n  body,\n  userId,\n  createdAt\n}) => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComment, setDataComment] = React.useState({}); // const [dataUserComment, setDataUserComment] = React.useState({});\n\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: '',\n    openUptComm: false\n  });\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      value: e.target.value\n    }));\n  }; // console.log('user data', dataUserComment);\n\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n      data.map(comment => setDataComment({\n        id: comment.id,\n        postId: comment.postId,\n        body: comment.body,\n        userId: comment.userId,\n        createdAt: comment.createdAt,\n        updatedAt: comment.updatedAt\n      }));\n    });\n  }, []); // console.log('id', dataComment.userId);\n  // React.useEffect(() => {\n  //   fetch(\n  //     `https://ekreative-json-server.herokuapp.com/users/${dataComment.userId}`\n  //   )\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setDataUserComment(data);\n  //       // console.log(data);\n  //     });\n  // }, []);\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${id}`);\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n  };\n\n  const addComment = () => {\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`);\n  };\n\n  const updateComment = ({\n    id,\n    postId,\n    body,\n    userId,\n    createdAt\n  }, updateBody) => {\n    const data = {\n      id,\n      postId,\n      body: updateBody,\n      userId,\n      createdAt,\n      updatedAt: datetime\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/comments/${id}`, data);\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: false\n    }));\n  };\n\n  const openUpdateBlock = id => {\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: true\n    }));\n  };\n\n  let data = JSON.parse(localStorage.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [usersData.firstname, \" \", usersData.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), localStorage.getItem(\"token\") && usersData.id === data.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: () => editPost(id, title, body, userId, createdAt),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-of-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-input-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://static01.nyt.com/images/2020/11/09/arts/06depp-item/06depp-item-mediumSquareAt3X-v2.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : \"\", comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-data\",\n            children: updateCommentBody.openUptComm ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-content\"\n            }, comment.id + comment.postId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-content\"\n            }, comment.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)\n          }, comment.id + comment.userId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostBlock, \"BR9h4suGGWeqYqtJD2Hst/p9T7w=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostBlock;\nexport default PostBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBlock\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx"],"names":["axios","React","classNames","setAddData","useDispatch","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","PostBlock","id","title","body","userId","createdAt","usersData","setUsersData","useState","comments","setComments","dataComment","setDataComment","updateCommentBody","setUpdateCommentBody","value","openUptComm","dispatch","handleChange","e","prevState","target","useEffect","fetch","then","response","json","data","map","comment","postId","updatedAt","deletePost","delete","editPost","addComment","post","updateComment","updateBody","patch","openUpdateBlock","JSON","parse","localStorage","user","firstname","lastname","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/postBlock.scss\";\nimport \"../scss/components/getPosts.scss\";\n\n// import { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\n\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() \n+ \"-\" + currentdate.getDay() + \"T\" \n+ currentdate.getHours() + \":\" \n+ currentdate.getMinutes() + \":\"\n+ currentdate.getSeconds();\n\nconst PostBlock = ({ id, title, body, userId, createdAt }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComment, setDataComment] = React.useState({});\n  // const [dataUserComment, setDataUserComment] = React.useState({});\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: '',\n    openUptComm: false\n  })\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setUpdateCommentBody((prevState) => ({prevState, value: e.target.value}))\n  }\n\n  // console.log('user data', dataUserComment);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n        data.map((comment) =>\n          setDataComment({\n            id: comment.id,\n            postId: comment.postId,\n            body: comment.body,\n            userId: comment.userId,\n            createdAt: comment.createdAt,\n            updatedAt: comment.updatedAt,\n          })\n        );\n      });\n  }, []);\n\n  // console.log('id', dataComment.userId);\n\n  // React.useEffect(() => {\n  //   fetch(\n  //     `https://ekreative-json-server.herokuapp.com/users/${dataComment.userId}`\n  //   )\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setDataUserComment(data);\n  //       // console.log(data);\n  //     });\n  // }, []);\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${id}`);\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n  };\n\n  const addComment = () => {\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`);\n  };\n  const updateComment = ({id, postId, body, userId, createdAt}, updateBody) => {\n    const data = {\n      id, \n      postId,\n      body: updateBody,\n      userId,\n      createdAt,\n      updatedAt: datetime \n    }\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,data\n    );\n\n     setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: false\n    }))\n  };\n\n  const openUpdateBlock = (id) => {\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: true\n    }))\n  }\n\n  let data = JSON.parse(localStorage.user);\n\n  return (\n    <div className=\"post-block\">\n      <div className=\"content-post\">\n        <div className=\"content\">\n          <h3>{title}</h3>\n          <p>{body}</p>\n          <p>\n            {usersData.firstname} {usersData.lastname}\n          </p>\n        </div>\n        {localStorage.getItem(\"token\") && usersData.id === data.id ? (\n          <div className=\"content-button\">\n            <button\n              className={classNames(\"button-post\", \"button\")}\n              onClick={() => editPost(id, title, body, userId, createdAt)}\n            >\n              Edit\n            </button>\n            <button\n              className={classNames(\"button-post\", \"button\")}\n              onClick={deletePost}\n            >\n              Delete\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div className=\"comments-of-post\">\n        <h3>comments</h3>\n        {localStorage.getItem(\"token\") ? (\n          <div className=\"comment-input-block\">\n            <img\n              src=\"https://static01.nyt.com/images/2020/11/09/arts/06depp-item/06depp-item-mediumSquareAt3X-v2.jpg\"\n              alt=\"\"\n            />\n            <input type=\"text\" />\n            <button onClick={addComment}>&#43;</button>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {comments.map((comment) => (\n          <div>\n            <ul>\n              <div className=\"comment-data\" key={comment.id + comment.userId}>\n                {updateCommentBody.openUptComm? (\n                  <div className=\"comment-content\" key={comment.id + comment.postId}>\n                    {/* <input type=\"text\" value={comment.body} onChange={handleChange} />\n                    <button onClick={() => updateComment(comment, updateCommentBody.value)}>\n                      Update\n                    </button> */}\n                  </div>\n                ) : (\n                  <div  key={comment.id} className=\"comment-content\">\n                      {/* <li className=\"comment-content\">\n                        <p>{comment.body}</p>\n                        {true\n                        ?(<button onClick={() => openUpdateBlock(comment.id)}>\n                      Update\n                        </button>)\n                    :('')}\n                      </li> */}\n                      \n                  </div>\n                )}\n              </div>\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostBlock;\n"]},"metadata":{},"sourceType":"module"}