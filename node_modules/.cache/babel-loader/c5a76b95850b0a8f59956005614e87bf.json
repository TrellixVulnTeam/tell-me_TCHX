{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Authorization.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./../scss/app.scss\";\nimport { SingupForm, LoginForm } from \"../conponents/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Authorization() {\n  _s();\n\n  const adminUser = {\n    email: \"admin@admin.com\",\n    password: \"admin\"\n  };\n  const [user, setUser] = React.useState({\n    fistname: {\n      type: \"firs name\",\n      value: \"\",\n      label: \"first and last name\",\n      errorMessage: \"fistname cannot be empty\",\n      touched: false\n    },\n    lastname: {\n      type: \"last name\",\n      value: \"\",\n      label: \"first and last name\",\n      errorMessage: \"lastname cannot be empty\",\n      touched: false\n    },\n    email: {\n      type: \"email\",\n      value: \"\",\n      label: \"email\",\n      errorMessage: \"put correct email\",\n      touched: false\n    },\n    password: {\n      type: \"password\",\n      value: \"\",\n      label: \"password\",\n      errorMessage: \"password must have least 9 signs\",\n      touched: false\n    },\n    confirmPassword: {\n      type: \"password\",\n      value: \"\",\n      label: \"confirmation password\",\n      errorMessage: \"put correct password\",\n      touched: false\n    },\n    age: {\n      type: \"age\",\n      value: \"\",\n      label: \"age\",\n      errorMessage: \"age cannot be empty\",\n      touched: false\n    },\n    avatar: {\n      type: \"url\",\n      value: \"\",\n      label: \"avatar\",\n      errorMessage: \"avatar cannot be empty\",\n      touched: false\n    }\n  });\n  const [error, setError] = React.useState(\"\");\n\n  const onChangeHendler = event => {\n    return Object.keys(user).map(dataInput => {\n      const data = user[dataInput];\n      data.value = event.target.value;\n      data.touched = true; // user[dataInput] = data;\n\n      let isFormValid = true; // Object.keys(user).forEach((name) => {\n      //   isFormValid = user[name].valid && isFormValid;\n      // });\n\n      setUser(prevState => ({ ...prevState,\n        data\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authorization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), false ? /*#__PURE__*/_jsxDEV(LoginForm, { ...user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SingupForm, {\n      user: user,\n      onChange: onChangeHendler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authorization, \"qn330wi4mHku/wXG8iJUWG9ONUo=\");\n\n_c = Authorization;\nexport default Authorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Authorization.jsx"],"names":["React","SingupForm","LoginForm","Authorization","adminUser","email","password","user","setUser","useState","fistname","type","value","label","errorMessage","touched","lastname","confirmPassword","age","avatar","error","setError","onChangeHendler","event","Object","keys","map","dataInput","data","target","isFormValid","prevState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./../scss/app.scss\";\nimport { SingupForm, LoginForm } from \"../conponents/index\";\n\nfunction Authorization() {\n  const adminUser = {\n    email: \"admin@admin.com\",\n    password: \"admin\",\n  };\n\n  const [user, setUser] = React.useState({\n    fistname: {\n      type: \"firs name\",\n      value: \"\",\n      label: \"first and last name\",\n      errorMessage: \"fistname cannot be empty\",\n      touched: false,\n    },\n    lastname: {\n      type: \"last name\",\n      value: \"\",\n      label: \"first and last name\",\n      errorMessage: \"lastname cannot be empty\",\n      touched: false,\n    },\n    email: {\n      type: \"email\",\n      value: \"\",\n      label: \"email\",\n      errorMessage: \"put correct email\",\n      touched: false,\n    },\n    password: {\n      type: \"password\",\n      value: \"\",\n      label: \"password\",\n      errorMessage: \"password must have least 9 signs\",\n      touched: false,\n    },\n    confirmPassword: {\n      type: \"password\",\n      value: \"\",\n      label: \"confirmation password\",\n      errorMessage: \"put correct password\",\n      touched: false,\n    },\n    age: {\n      type: \"age\",\n      value: \"\",\n      label: \"age\",\n      errorMessage: \"age cannot be empty\",\n      touched: false,\n    },\n    avatar: {\n      type: \"url\",\n      value: \"\",\n      label: \"avatar\",\n      errorMessage: \"avatar cannot be empty\",\n      touched: false,\n    },\n  });\n  const [error, setError] = React.useState(\"\");\n\n  const onChangeHendler = (event) => {\n    return Object.keys(user).map((dataInput) => {\n      const data = user[dataInput];\n\n      data.value = event.target.value;\n      data.touched = true;\n\n      // user[dataInput] = data;\n\n      let isFormValid = true;\n\n      // Object.keys(user).forEach((name) => {\n      //   isFormValid = user[name].valid && isFormValid;\n      // });\n\n      setUser((prevState) => ({\n        ...prevState,\n        data\n      }));\n    });\n  };\n\n  return (\n    <div className=\"authorization\">\n      <h1>Authorization</h1>\n      {false ? (\n        <LoginForm {...user} />\n      ) : (\n        <SingupForm user={user} onChange={onChangeHendler} />\n      )}\n    </div>\n  );\n}\n\nexport default Authorization;\n"]},"metadata":{},"sourceType":"module"}