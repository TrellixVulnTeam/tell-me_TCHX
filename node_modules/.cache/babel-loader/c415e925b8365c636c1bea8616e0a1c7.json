{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/comments.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { setDataDeleteComment, setDataUpdateComment } from \"../redux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Comment = comment => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false,\n    id: \"\"\n  });\n  let dataAboutUser = JSON.parse(localStorage.user);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${comment.userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n\n  const handleChange = e => {\n    setUpdateCommentBody(prevState => ({ ...prevState,\n      value: e.target.value\n    }));\n  };\n\n  const openUpdateBlock = (id, body) => {\n    setUpdateCommentBody(prevState => ({ ...prevState,\n      value: body,\n      openUptComm: true,\n      id\n    }));\n  };\n\n  const updateComment = (id, updateBody) => {\n    const data = {\n      body: updateBody,\n      updatedAt: datetime\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/comments/${id}`, data, {\n      headers\n    }).then(response => dispatch(setDataUpdateComment(response.data)));\n    setUpdateCommentBody(prevState => ({ ...prevState,\n      openUptComm: false\n    }));\n  };\n\n  const deleteComment = id => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/comments/${id}`, {\n      headers\n    });\n    dispatch(setDataDeleteComment(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-data\",\n    children: updateCommentBody.openUptComm && comment.id === updateCommentBody.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content-for-update\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updateCommentBody.value,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateComment(comment.id, updateCommentBody.value),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"user-avatar\",\n        src: usersData.avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), localStorage.getItem(\"token\") && dataAboutUser.id === comment.userId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openUpdateBlock(comment.id, comment.body),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteComment(comment.id),\n          children: \"Delete\"\n        }, comment.id + 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, comment.id + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this) : \"\"]\n    }, comment.id + 3 + \"li\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, comment.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"OfoaaJbhQwOg1tzLv33fvW/3eNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/Comment.jsx"],"names":["axios","React","useDispatch","setDataDeleteComment","setDataUpdateComment","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Comment","comment","usersData","setUsersData","useState","updateCommentBody","setUpdateCommentBody","value","openUptComm","id","dataAboutUser","JSON","parse","localStorage","user","dispatch","useEffect","fetch","userId","then","response","json","data","handleChange","e","prevState","target","openUpdateBlock","body","updateComment","updateBody","updatedAt","headers","Authorization","getItem","slice","patch","deleteComment","delete","avatar"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\n\nimport \"../scss/components/comments.scss\";\n\nimport { useDispatch } from \"react-redux\";\nimport { setDataDeleteComment, setDataUpdateComment } from \"../redux/action\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Comment = (comment) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false,\n    id: \"\",\n  });\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${comment.userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n \n\n  const handleChange = (e) => {\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      value: e.target.value,\n    }));\n  };\n\n  const openUpdateBlock = (id, body) => {\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      value: body,\n      openUptComm: true,\n      id,\n    }));\n  };\n\n  const updateComment = ( id, updateBody) => {\n    const data = {\n      body: updateBody,\n      updatedAt: datetime,\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      data,\n      {headers}\n    )\n      .then(response => dispatch(setDataUpdateComment(response.data)))\n\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      openUptComm: false,\n    }));\n  };\n\n  const deleteComment = (id) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      { headers }\n    )\n    \n    dispatch(setDataDeleteComment(id))\n  };\n\n  return (\n    <div key={comment.id} className=\"comment-data\">\n      {updateCommentBody.openUptComm && comment.id === updateCommentBody.id ? (\n        <div className=\"comment-content-for-update\">\n          <input\n            type=\"text\"\n            value={updateCommentBody.value}\n            onChange={handleChange}\n          />\n          <button onClick={() => updateComment(comment.id, updateCommentBody.value)}>\n            Update\n          </button>\n        </div>\n      ) : (\n            <div key={comment.id + 3 + \"li\"} className=\"comment-content\">\n              <img className=\"user-avatar\" src={usersData.avatar} alt=\"\" />\n            <p>{comment.body}</p>\n            {localStorage.getItem(\"token\") && dataAboutUser.id === comment.userId ? (\n              <div key={comment.id + 1} className=\"button-block\">\n                <button onClick={() => openUpdateBlock(comment.id, comment.body)}>\n                  Update\n                </button>\n                <button key={comment.id + 2} onClick={() => deleteComment(comment.id)}>\n                  Delete\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}