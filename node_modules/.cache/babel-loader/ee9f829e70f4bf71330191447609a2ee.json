{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Comment from \"./Comment\";\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Post = () => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [updPost, setUpdPost] = React.useState({\n    body: \"\",\n    title: \"\",\n    openEdit: false\n  });\n  let data = JSON.parse(localStorage.user);\n  const dataPost = useSelector(state => state.dataPostReducer);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n\n  const deletePost = id => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`, {\n      headers\n    });\n  };\n\n  React.useEffect(() => {\n    getDataComment();\n  }, []);\n\n  const getDataComment = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${dataPost.id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n    });\n  };\n\n  const openEditPost = (body, title) => {\n    setUpdPost({\n      body,\n      title,\n      openEdit: true\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdPost(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const updatePost = (title, body, id) => {\n    const data = {\n      title,\n      body,\n      updateAt: datetime\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`, data, {\n      headers\n    });\n    setUpdPost(prevState => ({ ...prevState,\n      openEdit: false\n    }));\n  };\n\n  const handleChangeUserComment = e => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = postId => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\"\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`, data, headers); // updateDiv(postId)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    id: `post-${dataPost.id}`,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Tell \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), updPost.openEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-title\",\n        value: updPost.title,\n        onChange: handleChange,\n        name: \"title\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-body\",\n        value: updPost.body,\n        onChange: handleChange,\n        name: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames(\"button-post\", \"button\"),\n        onClick: () => updatePost(updPost.title, updPost.body, dataPost.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: dataPost.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-body\",\n            children: dataPost.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-user\",\n            children: [usersData.firstname, \" \", usersData.lastname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), localStorage.getItem(\"token\") && usersData.id === data.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classNames(\"button-post\", \"button\"),\n              onClick: () => openEditPost(dataPost.body, dataPost.title),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classNames(\"button-post\", \"button\"),\n              onClick: () => deletePost(dataPost.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-of-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, { ...comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: handleChangeUserComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addComment(dataPost.id),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"EmoNSWlu0eyjvMVbtP/IjNLj1vA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx"],"names":["axios","classNames","React","useSelector","Comment","Link","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Post","usersData","setUsersData","useState","comments","setComments","newComment","setNewComment","updPost","setUpdPost","body","title","openEdit","data","JSON","parse","localStorage","user","dataPost","state","dataPostReducer","useEffect","fetch","userId","then","response","json","deletePost","id","headers","Authorization","getItem","slice","delete","getDataComment","openEditPost","handleChange","e","name","value","target","prevState","updatePost","updateAt","patch","handleChangeUserComment","preventDefault","addComment","postId","createdAt","updatedAt","post","firstname","lastname","map","comment","avatar"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Comment from \"./Comment\";\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\nimport { Link } from \"react-router-dom\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Post = () => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [updPost, setUpdPost] = React.useState({\n    body: \"\",\n    title: \"\",\n    openEdit: false,\n  });\n\n  let data = JSON.parse(localStorage.user);\n  const dataPost = useSelector((state) => state.dataPostReducer);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n  const deletePost = (id) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/posts/${id}`,\n      { headers }\n    );\n  };\n\n  React.useEffect(() => {\n    getDataComment();\n  }, []);\n\n  const getDataComment = () => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${dataPost.id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n      });\n  };\n\n  const openEditPost = (body, title) => {\n    setUpdPost({\n      body,\n      title,\n      openEdit: true,\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUpdPost((prevState) => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  const updatePost = (title, body, id) => {\n    const data = {\n      title,\n      body,\n      updateAt: datetime,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/posts/${id}`,\n      data,\n      { headers }\n    );\n\n    setUpdPost((prevState) => ({\n      ...prevState,\n      openEdit: false\n    }))\n  }\n\n  const handleChangeUserComment = (e) => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = (postId) => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.post(\n      `https://ekreative-json-server.herokuapp.com/664/comments`,\n      data,\n      headers\n    );\n\n    // updateDiv(postId)\n  };\n\n  return (\n    <div className=\"post\" id={`post-${dataPost.id}`}>\n      <Link to=\"/\" className=\"logo\">\n        <h2 className=\"logo\">\n          Tell <span>me</span>\n        </h2>\n      </Link>\n      {updPost.openEdit ? (\n        <div className=\"content-post-edit\">\n          <input className=\"input-title\" value={updPost.title} onChange={handleChange} name='title' type=\"text\" />\n          <textarea className=\"input-body\" value={updPost.body} onChange={handleChange} name='body' />\n          <button\n            className={classNames(\"button-post\", \"button\")}\n            onClick={() => updatePost(updPost.title, updPost.body, dataPost.id)}\n          >\n            Edit\n          </button>\n        </div>\n      ) : (\n          <div className=\"content-post\">\n            <div className=\"\">\n          <div className=\"content\">\n            <h3>{dataPost.title}</h3>\n            <p className=\"post-body\">{dataPost.body}</p>\n          </div>\n          <div className=\"bottom-content\">\n            <p className=\"post-user\">\n              {usersData.firstname} {usersData.lastname}\n            </p>\n            {localStorage.getItem(\"token\") && usersData.id === data.id ? (\n              <div className=\"content-button\">\n                <button\n                  className={classNames(\"button-post\", \"button\")}\n                  onClick={() => openEditPost(dataPost.body, dataPost.title)}\n                >\n                  Edit\n                </button>\n                <button\n                  className={classNames(\"button-post\", \"button\")}\n                  onClick={() => deletePost(dataPost.id)}\n                >\n                  Delete\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n              </div>\n              </div>\n            <div className=\"comments-of-post\">\n        <h3>comments</h3>\n        {comments.map((comment) => (\n          <Comment key={comment.id} {...comment} />\n        ))}\n        {localStorage.getItem(\"token\") ? (\n          <div className=\"comment-input-block\">\n            <img src={data.avatar} alt=\"\" />\n            <input\n              type=\"text\"\n              value={newComment}\n              onChange={handleChangeUserComment}\n            />\n            <button onClick={() => addComment(dataPost.id)}>&#43;</button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n          </div>\n          \n      )}\n      \n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}