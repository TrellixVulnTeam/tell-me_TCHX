{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Input } from \"../conponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [state, setState] = React.useState({\n    formData: {\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"email\",\n        errorMessage: \"enter correct email\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: \"\",\n        type: \"text\",\n        label: \"password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          password: 9\n        }\n      }\n    }\n  });\n\n  const loginHendler = async () => {\n    const authData = {\n      email: state.formData.email.value,\n      password: state.formData.password.value,\n      returnSecureToken: true\n    }; //  axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signIn?key=AIzaSyABuCCU2ip1w5leYsAv2F8YTEt0G8B66Sw', authData)\n    //   .catch((e) => {\n    //     console.log(e);\n    //   })\n  };\n\n  const validateData = (value, validation) => {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid;\n    }\n\n    if (validation.password) {\n      isValid = value.length >= validation.password && isValid;\n    }\n\n    return isValid;\n  };\n\n  const renderInputsLogin = () => {\n    return Object.keys(state.formData).map((controlData, index) => {\n      const data = state.formData[controlData];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        value: data.value,\n        type: data.type,\n        label: data.label,\n        errorMessage: data.errorMessage,\n        valide: data.valide,\n        shouldValidate: !!data.validation,\n        touched: data.touched // onChange={(event) => changeInput(event, controlData)}\n\n      }, controlData + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authurization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: renderInputsLogin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-of-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          value: \"Log In\",\n          className: \"singUp\",\n          onChange: loginHendler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          value: \"Sing Up\",\n          className: \"logIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"W8Z8FZFGeV2h4Cpv5SlYLB0Sdeg=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Login.jsx"],"names":["React","Link","Button","Input","Login","props","state","setState","useState","formData","email","value","type","label","errorMessage","valide","touched","validation","required","password","loginHendler","authData","returnSecureToken","validateData","isValid","trim","validateEmail","length","renderInputsLogin","Object","keys","map","controlData","index","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Input } from \"../conponents\";\n\nfunction Login(props) {\n  const [state, setState] = React.useState({\n    formData: {\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"email\",\n        errorMessage: \"enter correct email\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n        },\n      },\n      password: {\n        value: \"\",\n        type: \"text\",\n        label: \"password\",\n        errorMessage: \"enter correct password\",\n        valide: false,\n        touched: false,\n        validation: {\n          required: true,\n          password: 9,\n        },\n      }\n    }\n  });\n\n  const loginHendler = async () => {\n    const authData = {\n      email: state.formData.email.value,\n      password: state.formData.password.value,\n      returnSecureToken: true\n    }\n\n    //  axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signIn?key=AIzaSyABuCCU2ip1w5leYsAv2F8YTEt0G8B66Sw', authData)\n    //   .catch((e) => {\n    //     console.log(e);\n    //   })\n  };\n\n  const validateData = (value, validation) => {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid;\n    }\n    if (validation.password) {\n      isValid = value.length >= validation.password && isValid;\n    }\n\n    return isValid;\n  };\n\n  const renderInputsLogin = () => {\n    return Object.keys(state.formData).map((controlData, index) => {\n      const data = state.formData[controlData];\n\n      return (\n        <Input\n          key={controlData + index}\n          value={data.value}\n          type={data.type}\n          label={data.label}\n          errorMessage={data.errorMessage}\n          valide={data.valide}\n          shouldValidate={!!data.validation}\n          touched={data.touched}\n          // onChange={(event) => changeInput(event, controlData)}\n        />\n      );\n    })\n  }\n\n  return (\n    <div className=\"authurization\">\n      <h1>Log In</h1>\n      <div className=\"form\">\n        <form>{renderInputsLogin()}</form>\n      </div>\n      <div className=\"block-of-buttons\">\n        <Link to=\"\">\n          <Button value=\"Log In\" className=\"singUp\" onChange={loginHendler}/>\n        </Link>\n        <Link to=\"/\">\n          <Button value=\"Sing Up\" className=\"logIn\" />\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}