{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/GetPosts.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, PostBlock } from \".\";\nimport { setAddData } from \"../redux/action\";\nimport \"../scss/components/getPosts.scss\";\nimport Pagination from \"./Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst GetPosts = () => {\n  _s();\n\n  // const [posts, setPosts] = React.useState([]);\n  // const [isLoaded, setIsLoaded] = React.useState(false);\n  // const [error, setError] = React.useState(null);\n  const [updateDataPost, setUpdateDataPost] = React.useState(null);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [postsPerPage] = React.useState(10); //redux\n\n  const dispatch = useDispatch();\n  const postReducer = useSelector(state => state.postReducer);\n  const postsPages = useSelector(state => state.paginateReducer); //pagination\n  // const lastPostIndex = currentPage * postsPerPage;\n  // const firstPostIndex = lastPostIndex - postsPerPage;\n  // const currentPost = posts.slice(firstPostIndex, lastPostIndex)\n  // const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  const pages = [1, 2, 3, 4, 5]; // React.useEffect(() => {\n  //   fetch(`https://ekreative-json-server.herokuapp.com/664/posts`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setPosts(data);\n  //     });\n  // }, []);\n\n  const getUpdatePost = () => {\n    posts.map(dataPost => {\n      setUpdateDataPost({\n        title: dataPost.title,\n        body: dataPost.body,\n        userId: dataPost.userId,\n        createAt: dataPost.createdAt,\n        updatedAt: datetime\n      });\n    });\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/post/`, updateDataPost);\n  };\n\n  const handleChange = e => {\n    dispatch(setAddData({\n      title: e.target.title,\n      body: e.target.body\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"get-posts\",\n    children: [postsPages.map(dataPost => /*#__PURE__*/_jsxDEV(PostBlock, { ...dataPost\n    }, dataPost.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)), postReducer.map(dataPost => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"update-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons-outlined\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update your post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"header-for-post-form\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-for-title\",\n            value: dataPost.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"header-for-post-form\",\n            children: \"post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"input-for-post\",\n            value: dataPost.body,\n            onChange: handleChange,\n            children: dataPost.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"button-update\",\n            onClik: getUpdatePost,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, dataPost.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: pages.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetPosts, \"u2XG9vSciTUHCISEDwWR9q0OgS8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = GetPosts;\nexport default GetPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetPosts\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/GetPosts.jsx"],"names":["axios","React","useDispatch","useSelector","Button","PostBlock","setAddData","Pagination","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","GetPosts","updateDataPost","setUpdateDataPost","useState","currentPage","setCurrentPage","postsPerPage","dispatch","postReducer","state","postsPages","paginateReducer","pages","getUpdatePost","posts","map","dataPost","title","body","userId","createAt","createdAt","updatedAt","patch","handleChange","e","target","id","length","paginate"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, PostBlock } from \".\";\nimport { setAddData } from \"../redux/action\";\nimport \"../scss/components/getPosts.scss\";\nimport Pagination from \"./Pagination\";\n\nvar currentdate = new Date();\n\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst GetPosts = () => {\n  // const [posts, setPosts] = React.useState([]);\n  // const [isLoaded, setIsLoaded] = React.useState(false);\n  // const [error, setError] = React.useState(null);\n  const [updateDataPost, setUpdateDataPost] = React.useState(null);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [postsPerPage] = React.useState(10);\n\n  //redux\n  const dispatch = useDispatch()\n  const postReducer = useSelector(state => state.postReducer)\n  const postsPages = useSelector(state => state.paginateReducer)\n\n  //pagination\n  // const lastPostIndex = currentPage * postsPerPage;\n  // const firstPostIndex = lastPostIndex - postsPerPage;\n  // const currentPost = posts.slice(firstPostIndex, lastPostIndex)\n\n  // const paginate = pageNumber => setCurrentPage(pageNumber)\n  const pages = [1, 2, 3, 4, 5]\n\n  // React.useEffect(() => {\n  //   fetch(`https://ekreative-json-server.herokuapp.com/664/posts`)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setPosts(data);\n  //     });\n  // }, []);\n\n  const getUpdatePost = () => {\n    posts.map((dataPost) => {\n      setUpdateDataPost({\n        title: dataPost.title,\n        body: dataPost.body,\n        userId: dataPost.userId,\n        createAt: dataPost.createdAt,\n        updatedAt: datetime\n      });\n    });\n\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/post/`,\n      updateDataPost\n    );\n  };\n\n  const handleChange = (e) => {\n    dispatch(setAddData({ title: e.target.title, body: e.target.body}))\n  }\n\n\n  return (\n    <div className=\"get-posts\">\n      {postsPages.map((dataPost) => (\n        <PostBlock key={dataPost.id} {...dataPost}  />\n      ))}\n      {postReducer.map((dataPost) => (\n        <div id=\"update-post\" key={dataPost.id}>\n          <div className=\"close\">\n            <span className=\"material-icons-outlined\">&times;</span>\n          </div>\n          <div className='modal-content'>\n            <h2>update your post</h2>\n            <form action=\"\">\n              {/* <div className=\"title-block\"> */}\n              <p className=\"header-for-post-form\">title</p>\n              <input\n                type=\"text\"\n                className=\"input-for-title\"\n                value={dataPost.title}\n                onChange={handleChange}\n              />\n              {/* </div> */}\n\n              {/* <div className=\"post-block\"> */}\n              <p className=\"header-for-post-form\">post</p>\n              <textarea\n                type=\"text\"\n                className=\"input-for-post\"\n                value={dataPost.body}\n                onChange={handleChange}\n              >\n                {dataPost.body}\n              </textarea>\n              {/* </div> */}\n\n              <Button\n                type=\"button\"\n                className=\"button-update\"\n                onClik={getUpdatePost}\n              >\n                Edit\n              </Button>\n              </form>\n            </div>\n        </div>\n      ))}\n      <Pagination postsPerPage={postsPerPage} totalPosts={pages.length} paginate={paginate}/>\n    </div>\n  );\n};\n\nexport default GetPosts;\n"]},"metadata":{},"sourceType":"module"}