{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/components/Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"../scss/components/postBlock.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Comments = ({\n  postId\n}) => {\n  _s();\n\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [dataComment, setDataComment] = React.useState({});\n  const [dataUserComment, setDataUserComment] = React.useState({});\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false\n  }); // const commentRedecer = useSelector(state => state.commentReducer)\n  // const dispatch = useDispatch()\n  // let dataAboutUser = JSON.parse(localStorage.user);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${postId}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n      data.map(comment => setDataComment({\n        id: comment.id,\n        postId: comment.postId,\n        body: comment.body,\n        userId: comment.userId,\n        createdAt: comment.createdAt,\n        updatedAt: comment.updatedAt\n      }));\n    });\n  }, []);\n\n  const handleChange = e => {\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      value: e.target.value\n    }));\n    setNewComment(e.target.value);\n  };\n\n  const openUpdateBlock = id => {\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: true\n    }));\n  };\n\n  const updateComment = ({\n    id\n  }, updateBody) => {\n    const data = {\n      body: updateBody,\n      updatedAt: datetime\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/comments/${id}`, data, {\n      headers\n    });\n    setUpdateCommentBody(prevState => ({\n      prevState,\n      openUptComm: false\n    }));\n  };\n\n  const addComment = postId => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\"\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`, data, {\n      headers\n    });\n    document.location.reload(true);\n  };\n\n  const deleteComment = id => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/comments/${id}`, {\n      headers\n    });\n    console.log(`Bearer` + localStorage.getItem(\"token\"));\n    document.location.reload(true);\n  }; // console.log('id', commentRedecer);\n  //  React.useEffect(() => {\n  //   fetch(\n  //     `https://ekreative-json-server.herokuapp.com/users/${commentRedecer}`\n  //   )\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setDataUserComment(data);\n  //       console.log(data);\n  //     });\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-of-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://static01.nyt.com/images/2020/11/09/arts/06depp-item/06depp-item-mediumSquareAt3X-v2.jpg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#post\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addComment(postId),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this) : \"\", comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-data\",\n          children: updateCommentBody.openUptComm ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: comment.body,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateComment(comment, updateCommentBody.value),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [dataUserComment.firstname, \" \", dataUserComment.lastname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"comment-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this)\n            }, comment.id + 3 + \"li\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"7breeSTwp2NF4VLDxVuwDftUQgI=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/components/Comments.jsx"],"names":["axios","React","useSelector","useDispatch","Link","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Comments","postId","comments","setComments","useState","newComment","setNewComment","dataComment","setDataComment","dataUserComment","setDataUserComment","updateCommentBody","setUpdateCommentBody","value","openUptComm","useEffect","fetch","then","response","json","data","map","comment","id","body","userId","createdAt","updatedAt","handleChange","e","prevState","target","openUpdateBlock","updateComment","updateBody","headers","Authorization","localStorage","getItem","slice","patch","addComment","post","document","location","reload","deleteComment","delete","console","log","firstname","lastname"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"../scss/components/postBlock.scss\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Comments = ({ postId }) => {\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [dataComment, setDataComment] = React.useState({});\n  const [dataUserComment, setDataUserComment] = React.useState({});\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false,\n  });\n\n  // const commentRedecer = useSelector(state => state.commentReducer)\n  // const dispatch = useDispatch()\n\n    // let dataAboutUser = JSON.parse(localStorage.user);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${postId}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n\n        data.map((comment) =>\n          setDataComment({\n            id: comment.id,\n            postId: comment.postId,\n            body: comment.body,\n            userId: comment.userId,\n            createdAt: comment.createdAt,\n            updatedAt: comment.updatedAt,\n          })\n        );\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setUpdateCommentBody((prevState) => ({ prevState, value: e.target.value }));\n    setNewComment(e.target.value);\n  };\n\n  const openUpdateBlock = (id) => {\n    setUpdateCommentBody((prevState) => ({\n      prevState,\n      openUptComm: true,\n    }));\n  };\n\n  const updateComment = ({ id }, updateBody) => {\n    const data = {\n      body: updateBody,\n      updatedAt: datetime,\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      data,\n      { headers }\n    );\n\n    setUpdateCommentBody((prevState) => ({\n      prevState,\n      openUptComm: false,\n    }));\n  };\n\n  const addComment = (postId) => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n   \n\n    axios.post(\n      `https://ekreative-json-server.herokuapp.com/664/comments`,\n      data,\n      { headers }\n    );\n      document.location.reload(true)\n  };\n\n  const deleteComment = (id) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      { headers }\n    );\n      console.log(`Bearer` + localStorage.getItem(\"token\"));\n      document.location.reload(true)\n  };\n\n  // console.log('id', commentRedecer);\n  //  React.useEffect(() => {\n  //   fetch(\n  //     `https://ekreative-json-server.herokuapp.com/users/${commentRedecer}`\n  //   )\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setDataUserComment(data);\n  //       console.log(data);\n  //     });\n  // }, []);\n\n\n  return (\n    <div className=\"comments-of-post\">\n      <h3>comments</h3>\n      {localStorage.getItem(\"token\") ? (\n        <div className=\"comment-input-block\">\n          <img\n            src=\"https://static01.nyt.com/images/2020/11/09/arts/06depp-item/06depp-item-mediumSquareAt3X-v2.jpg\"\n            alt=\"\"\n          />\n          <input type=\"text\" value={newComment} onChange={handleChange} />\n         <Link to='#post'><button onClick={() => addComment(postId)}>&#43;</button></Link>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {comments.map((comment) => (\n        <div key={comment.id}>\n          <ul>\n            <div className=\"comment-data\">\n              {updateCommentBody.openUptComm ? (\n                <div className=\"comment-content\">\n                  <input\n                    type=\"text\"\n                    value={comment.body}\n                    onChange={handleChange}\n                  />\n                  <button\n                    onClick={() =>\n                      updateComment(comment, updateCommentBody.value)\n                    }\n                  >\n                    Update\n                  </button>\n                </div>\n              ) : (\n                  <div key={comment.id} className=\"comment-content\">\n                    <p>{dataUserComment.firstname} {dataUserComment.lastname}</p>\n                  <li key={comment.id + 3 + \"li\"} className=\"comment-content\" >\n                      <p>{comment.body}</p>\n                    {/* {localStorage.getItem('token') && dataAboutUser.id === comment.userId ? (\n                      <div key={comment.id + 1}>\n                        <button onClick={() => openUpdateBlock(comment.id)}>\n                          Update\n                        </button>\n                        <button\n                          key={comment.id + 2}\n                          onClick={() => deleteComment(comment.id)}\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    ) : (\n                      \"\"\n                    )} */}\n                  </li>\n                </div>\n              )}\n            </div>\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}