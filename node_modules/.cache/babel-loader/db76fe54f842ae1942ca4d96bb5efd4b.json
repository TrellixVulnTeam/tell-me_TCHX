{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Singup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./../scss/app.scss\";\nimport { Input, Button } from \"../conponents/index\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction Singup() {\n  _s();\n\n  const [user, setUser] = React.useState({\n    formData: {\n      firstname: {\n        type: \"name\",\n        value: \"\",\n        label: \"first name\",\n        errorMessage: \"first name cannot be empty\",\n        touched: false,\n        valid: false,\n        valid: false,\n        validation: {\n          required: true,\n          firsname: true\n        }\n      },\n      lastname: {\n        type: \"name\",\n        value: \"\",\n        label: \"last name\",\n        errorMessage: \"last name cannot be empty\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          lastname: true\n        }\n      },\n      email: {\n        type: \"email\",\n        value: \"\",\n        label: \"email\",\n        errorMessage: \"enter correct email\",\n        valid: false,\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        type: \"password\",\n        value: \"\",\n        label: \"password\",\n        errorMessage: \"password must have least 9 signs\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          minLength: 9\n        }\n      },\n      confirmPassword: {\n        type: \"password\",\n        value: \"\",\n        label: \"confirmation password\",\n        errorMessage: \"enter correct password\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          password: true\n        }\n      },\n      age: {\n        type: \"number\",\n        value: \"\",\n        label: \"age\",\n        errorMessage: \"age cannot be empty\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          age: true\n        }\n      },\n      avatar: {\n        type: \"url\",\n        value: \"\",\n        label: \"avatar\",\n        errorMessage: \"avatar cannot be empty\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          avatar: true\n        }\n      }\n    }\n  });\n\n  const registrHendler = async () => {\n    const authData = {\n      firstname: user.formData.firstname.value,\n      lastname: user.formData.lastname.value,\n      email: user.formData.email.value,\n      password: user.formData.password.value,\n      confirmPassword: user.formData.confirmPassword.value,\n      age: user.formData.age.value,\n      avatar: user.formData.avatar.value,\n      returnSecureToken: true\n    };\n    await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyABuCCU2ip1w5leYsAv2F8YTEt0G8B66Sw', authData).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const validateControl = (value, validation) => {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  };\n\n  const onChangeHandler = (event, dataName) => {\n    const formData = { ...user.formData\n    };\n    const data = { ...formData[dataName]\n    };\n    data.value = event.target.value;\n    data.touched = true;\n    data.valid = validateControl(data.value, data.validation);\n    formData[dataName] = data;\n    let isFormValid = true;\n    Object.keys(formData).forEach(name => {\n      isFormValid = formData[name].valid && isFormValid;\n    });\n    setUser(prevState => ({ ...prevState,\n      formData,\n      isFormValid\n    }));\n  };\n\n  const renderInputs = () => {\n    return Object.keys(user.formData).map((dataName, index) => {\n      const data = user.formData[dataName];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: data.type,\n        value: data.value,\n        valid: data.valid,\n        touched: data.touched,\n        label: data.label,\n        shouldValidate: !!data.validation,\n        errorMessage: data.errorMessage,\n        onChange: event => onChangeHandler(event, dataName)\n      }, dataName + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authorization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sing Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: renderInputs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: registrHendler,\n      children: \"Singup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Singup, \"+y2eP4Bdf1qEx1AA5GD5itmiA1Q=\");\n\n_c = Singup;\nexport default Singup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Singup.jsx"],"names":["React","Input","Button","axios","validateEmail","email","re","test","String","toLowerCase","Singup","user","setUser","useState","formData","firstname","type","value","label","errorMessage","touched","valid","validation","required","firsname","lastname","password","minLength","confirmPassword","age","avatar","registrHendler","authData","returnSecureToken","post","catch","e","console","log","validateControl","isValid","trim","length","onChangeHandler","event","dataName","data","target","isFormValid","Object","keys","forEach","name","prevState","renderInputs","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,EAAE,GACN,uJADF;AAEA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACD;;AAED,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACa,QAAN,CAAe;AACrCC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE,MADG;AAETC,QAAAA,KAAK,EAAE,EAFE;AAGTC,QAAAA,KAAK,EAAE,YAHE;AAITC,QAAAA,YAAY,EAAE,4BAJL;AAKTC,QAAAA,OAAO,EAAE,KALA;AAMTC,QAAAA,KAAK,EAAE,KANE;AAOTA,QAAAA,KAAK,EAAE,KAPE;AAQTC,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,QAAQ,EAAE;AAFA;AARH,OADH;AAcRC,MAAAA,QAAQ,EAAE;AACRT,QAAAA,IAAI,EAAE,MADE;AAERC,QAAAA,KAAK,EAAE,EAFC;AAGRC,QAAAA,KAAK,EAAE,WAHC;AAIRC,QAAAA,YAAY,EAAE,2BAJN;AAKRE,QAAAA,KAAK,EAAE,KALC;AAMRD,QAAAA,OAAO,EAAE,KAND;AAORC,QAAAA,KAAK,EAAE,KAPC;AAQRC,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVE,UAAAA,QAAQ,EAAE;AAFA;AARJ,OAdF;AA2BRpB,MAAAA,KAAK,EAAE;AACLW,QAAAA,IAAI,EAAE,OADD;AAELC,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,KAAK,EAAE,OAHF;AAILC,QAAAA,YAAY,EAAE,qBAJT;AAKLE,QAAAA,KAAK,EAAE,KALF;AAMLA,QAAAA,KAAK,EAAE,KANF;AAOLD,QAAAA,OAAO,EAAE,KAPJ;AAQLE,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVlB,UAAAA,KAAK,EAAE;AAFG;AARP,OA3BC;AAwCRqB,MAAAA,QAAQ,EAAE;AACRV,QAAAA,IAAI,EAAE,UADE;AAERC,QAAAA,KAAK,EAAE,EAFC;AAGRC,QAAAA,KAAK,EAAE,UAHC;AAIRC,QAAAA,YAAY,EAAE,kCAJN;AAKRE,QAAAA,KAAK,EAAE,KALC;AAMRD,QAAAA,OAAO,EAAE,KAND;AAORC,QAAAA,KAAK,EAAE,KAPC;AAQRC,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVI,UAAAA,SAAS,EAAE;AAFD;AARJ,OAxCF;AAqDRC,MAAAA,eAAe,EAAE;AACfZ,QAAAA,IAAI,EAAE,UADS;AAEfC,QAAAA,KAAK,EAAE,EAFQ;AAGfC,QAAAA,KAAK,EAAE,uBAHQ;AAIfC,QAAAA,YAAY,EAAE,wBAJC;AAKfE,QAAAA,KAAK,EAAE,KALQ;AAMfD,QAAAA,OAAO,EAAE,KANM;AAOfC,QAAAA,KAAK,EAAE,KAPQ;AAQfC,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVG,UAAAA,QAAQ,EAAE;AAFA;AARG,OArDT;AAkERG,MAAAA,GAAG,EAAE;AACHb,QAAAA,IAAI,EAAE,QADH;AAEHC,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,KAAK,EAAE,KAHJ;AAIHC,QAAAA,YAAY,EAAE,qBAJX;AAKHE,QAAAA,KAAK,EAAE,KALJ;AAMHD,QAAAA,OAAO,EAAE,KANN;AAOHC,QAAAA,KAAK,EAAE,KAPJ;AAQHC,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVM,UAAAA,GAAG,EAAE;AAFK;AART,OAlEG;AA+ERC,MAAAA,MAAM,EAAE;AACNd,QAAAA,IAAI,EAAE,KADA;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,KAAK,EAAE,QAHD;AAINC,QAAAA,YAAY,EAAE,wBAJR;AAKNE,QAAAA,KAAK,EAAE,KALD;AAMND,QAAAA,OAAO,EAAE,KANH;AAONC,QAAAA,KAAK,EAAE,KAPD;AAQNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVO,UAAAA,MAAM,EAAE;AAFE;AARN;AA/EA;AAD2B,GAAf,CAAxB;;AAgGA,QAAMC,cAAc,GAAG,YAAY;AAEjC,UAAMC,QAAQ,GAAG;AACfjB,MAAAA,SAAS,EAAEJ,IAAI,CAACG,QAAL,CAAcC,SAAd,CAAwBE,KADpB;AAEfQ,MAAAA,QAAQ,EAAEd,IAAI,CAACG,QAAL,CAAcW,QAAd,CAAuBR,KAFlB;AAGfZ,MAAAA,KAAK,EAAEM,IAAI,CAACG,QAAL,CAAcT,KAAd,CAAoBY,KAHZ;AAIfS,MAAAA,QAAQ,EAAEf,IAAI,CAACG,QAAL,CAAcY,QAAd,CAAuBT,KAJlB;AAKfW,MAAAA,eAAe,EAAEjB,IAAI,CAACG,QAAL,CAAcc,eAAd,CAA8BX,KALhC;AAMfY,MAAAA,GAAG,EAAElB,IAAI,CAACG,QAAL,CAAce,GAAd,CAAkBZ,KANR;AAOfa,MAAAA,MAAM,EAAEnB,IAAI,CAACG,QAAL,CAAcgB,MAAd,CAAqBb,KAPd;AAQfgB,MAAAA,iBAAiB,EAAE;AARJ,KAAjB;AAWA,UAAM9B,KAAK,CAAC+B,IAAN,CAAW,uGAAX,EAAoHF,QAApH,EACHG,KADG,CACIC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KAHG,CAAN;AAID,GAjBD;;AAmBA,QAAMG,eAAe,GAAG,CAACtB,KAAD,EAAQK,UAAR,KAAuB;AAC7C,QAAI,CAACA,UAAL,EAAiB;AACf,aAAO,IAAP;AACD;;AACD,QAAIkB,OAAO,GAAG,IAAd;;AAEA,QAAIlB,UAAU,CAACC,QAAf,EAAyB;AACvBiB,MAAAA,OAAO,GAAGvB,KAAK,CAACwB,IAAN,OAAiB,EAAjB,IAAuBD,OAAjC;AACD;;AACD,QAAIlB,UAAU,CAACjB,KAAf,EAAsB;AACpBmC,MAAAA,OAAO,GAAGpC,aAAa,CAACa,KAAD,CAAb,IAAwBuB,OAAlC;AACD;;AACD,QAAIlB,UAAU,CAACK,SAAf,EAA0B;AACxBa,MAAAA,OAAO,GAAGvB,KAAK,CAACyB,MAAN,IAAgBpB,UAAU,CAACK,SAA3B,IAAwCa,OAAlD;AACD;;AACD,WAAOA,OAAP;AACD,GAhBD;;AAmBA,QAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,UAAM/B,QAAQ,GAAG,EAAE,GAAGH,IAAI,CAACG;AAAV,KAAjB;AACA,UAAMgC,IAAI,GAAG,EAAE,GAAGhC,QAAQ,CAAC+B,QAAD;AAAb,KAAb;AAEAC,IAAAA,IAAI,CAAC7B,KAAL,GAAa2B,KAAK,CAACG,MAAN,CAAa9B,KAA1B;AACA6B,IAAAA,IAAI,CAAC1B,OAAL,GAAe,IAAf;AACA0B,IAAAA,IAAI,CAACzB,KAAL,GAAakB,eAAe,CAACO,IAAI,CAAC7B,KAAN,EAAa6B,IAAI,CAACxB,UAAlB,CAA5B;AAEAR,IAAAA,QAAQ,CAAC+B,QAAD,CAAR,GAAqBC,IAArB;AAEA,QAAIE,WAAW,GAAG,IAAlB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYpC,QAAZ,EAAsBqC,OAAtB,CAA+BC,IAAD,IAAU;AACtCJ,MAAAA,WAAW,GAAGlC,QAAQ,CAACsC,IAAD,CAAR,CAAe/B,KAAf,IAAwB2B,WAAtC;AACD,KAFD;AAIApC,IAAAA,OAAO,CAAEyC,SAAD,KAAgB,EACtB,GAAGA,SADmB;AAEtBvC,MAAAA,QAFsB;AAGtBkC,MAAAA;AAHsB,KAAhB,CAAD,CAAP;AAKD,GArBD;;AAuBA,QAAMM,YAAY,GAAG,MAAM;AACzB,WAAOL,MAAM,CAACC,IAAP,CAAYvC,IAAI,CAACG,QAAjB,EAA2ByC,GAA3B,CAA+B,CAACV,QAAD,EAAWW,KAAX,KAAqB;AACzD,YAAMV,IAAI,GAAGnC,IAAI,CAACG,QAAL,CAAc+B,QAAd,CAAb;AACA,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAEC,IAAI,CAAC9B,IAFb;AAGE,QAAA,KAAK,EAAE8B,IAAI,CAAC7B,KAHd;AAIE,QAAA,KAAK,EAAE6B,IAAI,CAACzB,KAJd;AAKE,QAAA,OAAO,EAAEyB,IAAI,CAAC1B,OALhB;AAME,QAAA,KAAK,EAAE0B,IAAI,CAAC5B,KANd;AAOE,QAAA,cAAc,EAAE,CAAC,CAAC4B,IAAI,CAACxB,UAPzB;AAQE,QAAA,YAAY,EAAEwB,IAAI,CAAC3B,YARrB;AASE,QAAA,QAAQ,EAAGyB,KAAD,IAAWD,eAAe,CAACC,KAAD,EAAQC,QAAR;AATtC,SACOA,QAAQ,GAAGW,KADlB;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAfM,CAAP;AAgBD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,kBAAOF,YAAY;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEvB,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1LQrB,M;;KAAAA,M;AA4LT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport \"./../scss/app.scss\";\nimport { Input, Button } from \"../conponents/index\";\nimport axios from \"axios\";\n\nfunction validateEmail(email) {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction Singup() {\n  const [user, setUser] = React.useState({\n    formData: {\n      firstname: {\n        type: \"name\",\n        value: \"\",\n        label: \"first name\",\n        errorMessage: \"first name cannot be empty\",\n        touched: false,\n        valid: false,\n        valid: false,\n        validation: {\n          required: true,\n          firsname: true,\n        },\n      },\n      lastname: {\n        type: \"name\",\n        value: \"\",\n        label: \"last name\",\n        errorMessage: \"last name cannot be empty\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          lastname: true,\n        },\n      },\n      email: {\n        type: \"email\",\n        value: \"\",\n        label: \"email\",\n        errorMessage: \"enter correct email\",\n        valid: false,\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n        },\n      },\n      password: {\n        type: \"password\",\n        value: \"\",\n        label: \"password\",\n        errorMessage: \"password must have least 9 signs\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          minLength: 9,\n        },\n      },\n      confirmPassword: {\n        type: \"password\",\n        value: \"\",\n        label: \"confirmation password\",\n        errorMessage: \"enter correct password\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          password: true,\n        },\n      },\n      age: {\n        type: \"number\",\n        value: \"\",\n        label: \"age\",\n        errorMessage: \"age cannot be empty\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          age: true,\n        },\n      },\n      avatar: {\n        type: \"url\",\n        value: \"\",\n        label: \"avatar\",\n        errorMessage: \"avatar cannot be empty\",\n        valid: false,\n        touched: false,\n        valid: false,\n        validation: {\n          required: true,\n          avatar: true,\n        },\n      },\n    },\n  });\n\n  const registrHendler = async () => {\n\n    const authData = {\n      firstname: user.formData.firstname.value,\n      lastname: user.formData.lastname.value,\n      email: user.formData.email.value,\n      password: user.formData.password.value,\n      confirmPassword: user.formData.confirmPassword.value,\n      age: user.formData.age.value,\n      avatar: user.formData.avatar.value,\n      returnSecureToken: true\n    }\n\n    await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyABuCCU2ip1w5leYsAv2F8YTEt0G8B66Sw', authData)\n      .catch((e) => {\n        console.log(e);\n      })\n  };\n\n  const validateControl = (value, validation) => {\n    if (!validation) {\n      return true;\n    }\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid;\n    }\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n    return isValid;\n  };\n\n\n  const onChangeHandler = (event, dataName) => {\n    const formData = { ...user.formData };\n    const data = { ...formData[dataName] };\n\n    data.value = event.target.value;\n    data.touched = true;\n    data.valid = validateControl(data.value, data.validation);\n\n    formData[dataName] = data;\n\n    let isFormValid = true;\n\n    Object.keys(formData).forEach((name) => {\n      isFormValid = formData[name].valid && isFormValid;\n    });\n\n    setUser((prevState) => ({\n      ...prevState,\n      formData,\n      isFormValid,\n    }));\n  };\n\n  const renderInputs = () => {\n    return Object.keys(user.formData).map((dataName, index) => {\n      const data = user.formData[dataName];\n      return (\n        <Input\n          key={dataName + index}\n          type={data.type}\n          value={data.value}\n          valid={data.valid}\n          touched={data.touched}\n          label={data.label}\n          shouldValidate={!!data.validation}\n          errorMessage={data.errorMessage}\n          onChange={(event) => onChangeHandler(event, dataName)}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"authorization\">\n        <h2>Sing Up</h2>\n      <div className=\"form\">\n        <form>{renderInputs()}</form>\n      </div>\n      <Button type='submit' onClick={registrHendler}>Singup</Button>\n    </div>\n  );\n}\n\nexport default Singup;\n"]},"metadata":{},"sourceType":"module"}