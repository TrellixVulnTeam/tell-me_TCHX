{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/postBlock.scss\";\nimport \"../scss/components/getPosts.scss\"; // import { Route, Link, NavLink } from \"react-router-dom\";\n\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostBlock = ({\n  id,\n  title,\n  body,\n  userId,\n  createdAt\n}) => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComment, setDataComment] = React.useState({});\n  const [dataUserComment, setDataUserComment] = React.useState({});\n  const dispatch = useDispatch(); // console.log('user data', dataUserComment);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n      data.map(comment => setDataComment({\n        id: comment.id,\n        postId: comment.postId,\n        body: comment.body,\n        userId: comment.userId,\n        createdAt: comment.createdAt,\n        updatedAt: comment.updatedAt\n      }));\n    });\n  }, []); // console.log('id', dataComment.userId);\n\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${dataComment.userId}`).then(response => response.json()).then(data => {\n      setDataUserComment(data); // console.log(data);\n    });\n  }, []);\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${id}`);\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n  };\n\n  let data = JSON.parse(localStorage.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [usersData.firstname, \" \", usersData.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), localStorage.getItem(\"token\") && usersData.id === data.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: () => editPost(id, title, body, userId, createdAt),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"button-post\", \"button\"),\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-of-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: dataUserComment.avatar,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [dataUserComment.firstname, \" \", dataUserComment.lastname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment\",\n            children: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostBlock, \"lWsmJ4f867FCmDaxKJitlb8OiTo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostBlock;\nexport default PostBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBlock\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/PostBlock.jsx"],"names":["axios","React","classNames","setAddData","useDispatch","PostBlock","id","title","body","userId","createdAt","usersData","setUsersData","useState","comments","setComments","dataComment","setDataComment","dataUserComment","setDataUserComment","dispatch","useEffect","fetch","then","response","json","data","map","comment","postId","updatedAt","deletePost","delete","editPost","JSON","parse","localStorage","user","firstname","lastname","getItem","avatar"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport \"../scss/components/postBlock.scss\";\nimport \"../scss/components/getPosts.scss\";\n\n// import { Route, Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { setAddData } from \"../redux/action\";\nimport { useDispatch } from \"react-redux\";\n\nconst PostBlock = ({ id, title, body, userId, createdAt }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [dataComment, setDataComment] = React.useState({});\n  const [dataUserComment, setDataUserComment] = React.useState({});\n\n  const dispatch = useDispatch();\n\n  // console.log('user data', dataUserComment);\n  React.useEffect(() => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n        data.map((comment) =>\n          setDataComment({\n            id: comment.id,\n            postId: comment.postId,\n            body: comment.body,\n            userId: comment.userId,\n            createdAt: comment.createdAt,\n            updatedAt: comment.updatedAt,\n          })\n        );\n      });\n  }, []);\n\n  // console.log('id', dataComment.userId);\n\n  React.useEffect(() => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/users/${dataComment.userId}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setDataUserComment(data);\n        // console.log(data);\n      });\n  }, []);\n\n  function deletePost() {\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/post/${id}`);\n  }\n\n  const editPost = (id, title, body, userId, createdAt) => {\n    dispatch(setAddData(id, title, body, userId, createdAt));\n  };\n\n  let data = JSON.parse(localStorage.user);\n\n  return (\n    <div className=\"post-block\">\n      <div className=\"content-post\">\n        <div className=\"content\">\n          <h3>{title}</h3>\n          <p>{body}</p>\n          <p>\n            {usersData.firstname} {usersData.lastname}\n          </p>\n        </div>\n        {localStorage.getItem(\"token\") && usersData.id === data.id ? (\n          <div className=\"content-button\">\n            <button\n              className={classNames(\"button-post\", \"button\")}\n              onClick={() => editPost(id, title, body, userId, createdAt)}\n            >\n              Edit\n            </button>\n            <button\n              className={classNames(\"button-post\", \"button\")}\n              onClick={deletePost}\n            >\n              Delete\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div className=\"comments-of-post\">\n        <h3>comments</h3>\n        {comments.map((comment) => (\n          <div key={comment.id}>\n            <ul>\n              {/* {comment.userId === usersData.id ? ( */}\n              <div>\n                <img src={dataUserComment.avatar} alt=\"\" />\n                <p>\n                  {dataUserComment.firstname} {dataUserComment.lastname}\n                </p>\n              </div>\n              {/* ) : ( */}\n              {/* '',\n                  console.log('user', usersData),\n                  console.log('comment', comment) */}\n              {/* )} */}\n              <li className=\"comment\">{comment.body}</li>\n            </ul>\n          </div>\n        ))}\n        <input\n          type=\"text\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PostBlock;\n"]},"metadata":{},"sourceType":"module"}