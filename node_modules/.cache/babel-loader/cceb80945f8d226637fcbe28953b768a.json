{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Authorization.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Input from \"../conponents/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Authorization() {\n  _s();\n\n  const [state, setState] = React.useState({\n    isFormValid: false,\n    formData: {\n      userName: {\n        value: '',\n        type: 'text',\n        label: 'first and last name',\n        errorMessage: 'fill in the field',\n        valide: false,\n        touched: false\n      },\n      email: {\n        value: '',\n        type: 'email',\n        label: 'email',\n        errorMessage: 'enter correct email',\n        valide: false,\n        touched: false\n      },\n      password: {\n        value: '',\n        type: 'text',\n        label: 'password',\n        errorMessage: 'enter correct password',\n        valide: false,\n        touched: false\n      },\n      confirmationPassword: {\n        value: '',\n        type: 'text',\n        label: 'confirmation password',\n        errorMessage: 'enter correct password',\n        valide: false,\n        touched: false\n      },\n      age: {\n        value: '',\n        type: 'number',\n        label: 'age',\n        errorMessage: 'fill in the field',\n        valide: false,\n        touched: false\n      },\n      avatar: {\n        value: '',\n        type: 'url',\n        label: 'avatar',\n        errorMessage: 'enter correct url',\n        valide: false,\n        touched: false\n      }\n    }\n  });\n\n  const changeInput = (event, controlData) => {\n    const formData = { ...state.formData\n    };\n    const data = { ...formData[controlData]\n    };\n    data.value = event.target.value;\n  };\n\n  const renderInputs = () => {\n    return Object.keys(state.formData).map((controlData, index) => {\n      const data = state.formData[controlData];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        value: data.value,\n        type: data.type,\n        label: data.label,\n        errorMessage: data.errorMessage,\n        valide: data.valide,\n        touched: data.touched,\n        onChange: event => changeInput(event, controlData)\n      }, controlData + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authurization\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"from\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: renderInputs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authorization, \"/1fOBM05Op5rnvJC8O0CWEI33Gc=\");\n\n_c = Authorization;\nexport default Authorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/pages/Authorization.jsx"],"names":["React","Input","Authorization","state","setState","useState","isFormValid","formData","userName","value","type","label","errorMessage","valide","touched","email","password","confirmationPassword","age","avatar","changeInput","event","controlData","data","target","renderInputs","Object","keys","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Input from \"../conponents/Input\";\n\n\nfunction Authorization() {\n\n    const [state, setState] = React.useState({\n    isFormValid: false,\n    formData: {\n        userName: {\n            value: '',\n            type: 'text',\n            label: 'first and last name',\n            errorMessage: 'fill in the field',\n            valide: false,\n            touched: false,\n        },\n        email: {\n            value: '',\n            type: 'email',\n            label: 'email',\n            errorMessage: 'enter correct email',\n            valide: false,\n            touched: false,\n        },\n        password: {\n            value: '',\n            type: 'text',\n            label: 'password',\n            errorMessage: 'enter correct password',\n            valide: false,\n            touched: false,\n        },\n        confirmationPassword: {\n            value: '',\n            type: 'text',\n            label: 'confirmation password',\n            errorMessage: 'enter correct password',\n            valide: false,\n            touched: false,\n        },\n        age: {\n            value: '',\n            type: 'number',\n            label: 'age',\n            errorMessage: 'fill in the field',\n            valide: false,\n            touched: false,\n        },\n        avatar: {\n            value: '',\n            type: 'url',\n            label: 'avatar',\n            errorMessage: 'enter correct url',\n            valide: false,\n            touched: false,\n        }\n    }\n    })\n\n    const changeInput = (event, controlData) => {\n        const formData = { ...state.formData }\n        const data = { ...formData[controlData] }\n        \n        data.value = event.target.value;\n        \n    }\n    \n    const renderInputs = () => {\n    return Object.keys(state.formData).map((controlData, index) => {\n        const data = state.formData[controlData]\n\n        return (\n            <Input\n                key={controlData + index}\n                value={data.value}\n                type={data.type}\n                label={data.label}\n                errorMessage={data.errorMessage}\n                valide={data.valide}\n                touched={data.touched}\n                onChange={event => changeInput(event, controlData)}\n            />\n    )\n    })\n}\n\n  return (\n    <div className='authurization'>\n      <div className=\"from\">\n        <form>\n            {renderInputs()}\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Authorization;\n"]},"metadata":{},"sourceType":"module"}