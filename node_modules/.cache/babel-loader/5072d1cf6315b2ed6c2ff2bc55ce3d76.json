{"ast":null,"code":"import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { initializeApp } from 'firebase/app';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDIXJ5YT7hoNbBFqK3TBcV41-TzIO-7n7w\",\n  authDomain: \"fir-auth-6edd8.firebaseapp.com\",\n  projectId: \"fir-auth-6edd8\",\n  storageBucket: \"fir-auth-6edd8.appspot.com\",\n  messagingSenderId: \"904760319835\",\n  appId: \"1:904760319835:web:44fd0d957f114b4e51447e\",\n  measurementId: \"G-Q4TYKH9GG7\"\n};\nconst auth = getAuth();\nconst app = initializeApp(firebaseConfig);\nconst db = app.firestore(); // const googleProvider = new firebase.auth.GoogleAuthProvider();\n// const signInWithGoogle = async () => {\n//   try {\n//     const res = await auth.signInWithPopup(googleProvider);\n//     const user = res.user;\n//     const query = await db\n//       .collection(\"users\")\n//       .where(\"uid\", \"==\", user.uid)\n//       .get();\n//     if (query.docs.length === 0) {\n//       await db.collection(\"users\").add({\n//         uid: user.uid,\n//         name: user.displayName,\n//         authProvider: \"google\",\n//         email: user.email,\n//       });\n//     }\n//   } catch (err) {\n//     console.error(err);\n//     alert(err.message);\n//   }\n// };\n\nsignInWithEmailAndPassword(auth, email, password).then(userCredential => {\n  const user = userCredential.user;\n}).catch(error => {\n  const errorCode = error.code;\n  const errorMessage = error.message;\n});\ncreateUserWithEmailAndPassword(auth, name, email, password).then(userCredential => {\n  const user = userCredential.user;\n}).catch(error => {\n  const errorCode = error.code;\n  const errorMessage = error.message;\n});\n\nconst sendPasswordResetEmail = async email => {\n  try {\n    await auth.sendPasswordResetEmail(email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  auth.signOut();\n};\n\nexport { auth, db, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, logout };","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/Fire.js"],"names":["getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","app","db","firestore","email","password","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","name","sendPasswordResetEmail","alert","err","console","logout","signOut"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,0BAAlB,EAA8CC,8BAA9C,QAAoF,eAApF;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,gCAFS;AAGrBC,EAAAA,SAAS,EAAE,gBAHU;AAIrBC,EAAAA,aAAa,EAAE,4BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;AASA,MAAMC,IAAI,GAAGZ,OAAO,EAApB;AACA,MAAMa,GAAG,GAAGV,aAAa,CAACC,cAAD,CAAzB;AACA,MAAMU,EAAE,GAAGD,GAAG,CAACE,SAAJ,EAAX,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEEd,0BAA0B,CAACW,IAAD,EAAOI,KAAP,EAAcC,QAAd,CAA1B,CACCC,IADD,CACOC,cAAD,IAAoB;AACxB,QAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;AACD,CAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AAChB,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACD,CAPD;AASAxB,8BAA8B,CAACU,IAAD,EAAOe,IAAP,EAAcX,KAAd,EAAqBC,QAArB,CAA9B,CACCC,IADD,CACOC,cAAD,IAAoB;AACxB,QAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;AACD,CAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AAChB,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACD,CAPD;;AAQF,MAAME,sBAAsB,GAAG,MAAOZ,KAAP,IAAiB;AAC9C,MAAI;AACF,UAAMJ,IAAI,CAACgB,sBAAL,CAA4BZ,KAA5B,CAAN;AACAa,IAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACT,KAAR,CAAcQ,GAAd;AACAD,IAAAA,KAAK,CAACC,GAAG,CAACJ,OAAL,CAAL;AACD;AACF,CARD;;AASA,MAAMM,MAAM,GAAG,MAAM;AACnBpB,EAAAA,IAAI,CAACqB,OAAL;AACD,CAFD;;AAGA,SACErB,IADF,EAEEE,EAFF,EAGEb,0BAHF,EAIEC,8BAJF,EAKE0B,sBALF,EAMEI,MANF","sourcesContent":["import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { initializeApp } from 'firebase/app';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDIXJ5YT7hoNbBFqK3TBcV41-TzIO-7n7w\",\n  authDomain: \"fir-auth-6edd8.firebaseapp.com\",\n  projectId: \"fir-auth-6edd8\",\n  storageBucket: \"fir-auth-6edd8.appspot.com\",\n  messagingSenderId: \"904760319835\",\n  appId: \"1:904760319835:web:44fd0d957f114b4e51447e\",\n  measurementId: \"G-Q4TYKH9GG7\",\n};\nconst auth = getAuth();\nconst app = initializeApp(firebaseConfig);\nconst db = app.firestore();\n// const googleProvider = new firebase.auth.GoogleAuthProvider();\n// const signInWithGoogle = async () => {\n//   try {\n//     const res = await auth.signInWithPopup(googleProvider);\n//     const user = res.user;\n//     const query = await db\n//       .collection(\"users\")\n//       .where(\"uid\", \"==\", user.uid)\n//       .get();\n//     if (query.docs.length === 0) {\n//       await db.collection(\"users\").add({\n//         uid: user.uid,\n//         name: user.displayName,\n//         authProvider: \"google\",\n//         email: user.email,\n//       });\n//     }\n//   } catch (err) {\n//     console.error(err);\n//     alert(err.message);\n//   }\n// };\n\n  signInWithEmailAndPassword(auth, email, password)\n  .then((userCredential) => {\n    const user = userCredential.user;\n  })\n  .catch((error) => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n  });\n\n  createUserWithEmailAndPassword(auth, name,  email, password)\n  .then((userCredential) => {\n    const user = userCredential.user;\n  })\n  .catch((error) => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n  });\nconst sendPasswordResetEmail = async (email) => {\n  try {\n    await auth.sendPasswordResetEmail(email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logout = () => {\n  auth.signOut();\n};\nexport {\n  auth,\n  db,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  logout,\n};"]},"metadata":{},"sourceType":"module"}