{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Comment from \"./Comment\";\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setDataOfPost, setPosts } from \"../redux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Post = () => {\n  _s();\n\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [updPost, setUpdPost] = React.useState({\n    body: \"\",\n    title: \"\",\n    openEdit: false,\n    response: {}\n  });\n  let data = JSON.parse(localStorage.user);\n  const dataPost = useSelector(state => state.dataPostReducer);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    getDataUser();\n  }, []);\n\n  const getDataUser = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  };\n\n  const deletePost = id => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`, {\n      headers\n    });\n  };\n\n  React.useEffect(() => {\n    getDataComment();\n  }, []);\n\n  const getDataComment = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/comments?postId=${dataPost.id}&_sort=createdAt&_order=asc`).then(response => response.json()).then(data => {\n      setComments(data);\n    });\n  };\n\n  const openEditPost = (body, title) => {\n    setUpdPost({\n      body,\n      title,\n      openEdit: true\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdPost(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const updatePost = async (title, body, id) => {\n    const data = {\n      title,\n      body,\n      updateAt: datetime\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    await axios.patch(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`, data, {\n      headers\n    });\n    await axios.get(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`).then(response => dispatch(setDataOfPost(response.data.id, response.data.body, response.data.title, response.data.userId)));\n    setUpdPost(prevState => ({ ...prevState,\n      openEdit: false\n    }));\n    await axios.get('https://ekreative-json-server.herokuapp.com/posts').then(response => dispatch(setPosts(response.data)));\n  };\n\n  const handleChangeUserComment = e => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = postId => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\"\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.post(`https://ekreative-json-server.herokuapp.com/664/comments`, data, headers); // updateDiv(postId)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    id: `post-${dataPost.id}`,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Tell \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), updPost.openEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-title\",\n        value: updPost.title,\n        onChange: handleChange,\n        name: \"title\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-body\",\n        value: updPost.body,\n        onChange: handleChange,\n        name: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames(\"button-post\", \"button\"),\n        onClick: () => updatePost(updPost.title, updPost.body, dataPost.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: dataPost.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-body\",\n            children: dataPost.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-user\",\n            children: [usersData.firstname, \" \", usersData.lastname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), localStorage.getItem(\"token\") && usersData.id === data.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classNames(\"button-post\", \"button\"),\n              onClick: () => openEditPost(dataPost.body, dataPost.title),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              className: classNames(\"button-post\", \"button\"),\n              onClick: () => deletePost(dataPost.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-of-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, { ...comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)), localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: handleChangeUserComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addComment(dataPost.id),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"VOrcRh10LdAl6sL509ItBMNqBP4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/Post.jsx"],"names":["axios","classNames","React","useSelector","Comment","Link","useDispatch","setDataOfPost","setPosts","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Post","usersData","setUsersData","useState","comments","setComments","newComment","setNewComment","updPost","setUpdPost","body","title","openEdit","response","data","JSON","parse","localStorage","user","dataPost","state","dataPostReducer","dispatch","useEffect","getDataUser","fetch","userId","then","json","deletePost","id","headers","Authorization","getItem","slice","delete","getDataComment","openEditPost","handleChange","e","name","value","target","prevState","updatePost","updateAt","patch","get","handleChangeUserComment","preventDefault","addComment","postId","createdAt","updatedAt","post","firstname","lastname","map","comment","avatar"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Comment from \"./Comment\";\nimport \"../scss/components/post.scss\";\nimport \"../scss/components/comments.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setDataOfPost, setPosts } from \"../redux/action\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Post = () => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const [newComment, setNewComment] = React.useState(\"\");\n  const [updPost, setUpdPost] = React.useState({\n    body: \"\",\n    title: \"\",\n    openEdit: false,\n    response: {}\n  });\n\n  let data = JSON.parse(localStorage.user);\n  const dataPost = useSelector((state) => state.dataPostReducer);\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    getDataUser()\n  }, []);\n\n  const getDataUser = () => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/users/${dataPost.userId}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  }\n\n  const deletePost = (id) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/posts/${id}`,\n      { headers }\n    );\n\n  };\n\n  React.useEffect(() => {\n    getDataComment();\n  }, []);\n\n  const getDataComment = () => {\n    fetch(\n      `https://ekreative-json-server.herokuapp.com/comments?postId=${dataPost.id}&_sort=createdAt&_order=asc`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setComments(data);\n      });\n  };\n\n  const openEditPost = (body, title) => {\n    setUpdPost({\n      body,\n      title,\n      openEdit: true,\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUpdPost((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const updatePost = async (title, body, id) => {\n\n    const data = {\n      title,\n      body,\n      updateAt: datetime,\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    await axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/posts/${id}`,\n      data,\n      { headers }\n    )\n\n    await axios.get(`https://ekreative-json-server.herokuapp.com/664/posts/${id}`)\n      .then(response => dispatch(setDataOfPost(response.data.id, response.data.body, response.data.title, response.data.userId)));\n    \n    \n    setUpdPost((prevState) => ({\n      ...prevState,\n      openEdit: false\n    }))\n\n    await axios.get('https://ekreative-json-server.herokuapp.com/posts')\n    .then(response => dispatch(setPosts(response.data)))\n\n  };\n\n  const handleChangeUserComment = (e) => {\n    e.preventDefault();\n    setNewComment(e.target.value);\n  };\n\n  const addComment = (postId) => {\n    const data = {\n      postId,\n      // userId: dataAboutUser.id,\n      body: newComment,\n      createdAt: datetime,\n      updatedAt: \"\",\n    };\n\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n\n    axios.post(\n      `https://ekreative-json-server.herokuapp.com/664/comments`,\n      data,\n      headers\n    );\n\n    \n\n    // updateDiv(postId)\n  };\n\n  return (\n    <div className=\"post\" id={`post-${dataPost.id}`}>\n      <Link to=\"/\" className=\"logo\">\n        <h2 className=\"logo\">\n          Tell <span>me</span>\n        </h2>\n      </Link>\n      {updPost.openEdit ? (\n        <div className=\"content-post-edit\">\n          <input\n            className=\"input-title\"\n            value={updPost.title}\n            onChange={handleChange}\n            name=\"title\"\n            type=\"text\"\n          />\n          <textarea\n            className=\"input-body\"\n            value={updPost.body}\n            onChange={handleChange}\n            name=\"body\"\n          />\n          <button\n            className={classNames(\"button-post\", \"button\")}\n            onClick={() => updatePost(updPost.title, updPost.body, dataPost.id)}\n          >\n            Edit\n          </button>\n        </div>\n      ) : (\n        <div className=\"content-post\">\n          <div className=\"\">\n            <div className=\"content\">\n              <h3>{dataPost.title}</h3>\n              <p className=\"post-body\">{dataPost.body}</p>\n            </div>\n            <div className=\"bottom-content\">\n              <p className=\"post-user\">\n                {usersData.firstname} {usersData.lastname}\n              </p>\n              {localStorage.getItem(\"token\") && usersData.id === data.id ? (\n                <div className=\"content-button\">\n                  <button\n                    className={classNames(\"button-post\", \"button\")}\n                    onClick={() => openEditPost(dataPost.body, dataPost.title)}\n                  >\n                    Edit\n                  </button>\n                    <Link\n                      to={'/'}\n                    className={classNames(\"button-post\", \"button\")}\n                    onClick={() => deletePost(dataPost.id)}\n                  >\n                    Delete\n                  </Link>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div className=\"comments-of-post\">\n            <h3>comments</h3>\n            {comments.map((comment) => (\n              <Comment key={comment.id} {...comment} />\n            ))}\n            {localStorage.getItem(\"token\") ? (\n              <div className=\"comment-input-block\">\n                <img src={data.avatar} alt=\"\" />\n                <input\n                  type=\"text\"\n                  value={newComment}\n                  onChange={handleChangeUserComment}\n                />\n                <button onClick={() => addComment(dataPost.id)}>&#43;</button>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}