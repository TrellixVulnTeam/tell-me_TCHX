{"ast":null,"code":"// import {\n//   getAuth,\n//   signInWithEmailAndPassword,\n//   createUserWithEmailAndPassword,\n// } from \"firebase/auth\";\n// import { initializeApp } from \"firebase/app\";\n// import { getFirestore, collection, getDocs } from \"firebase/firestore/lite\";\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDIXJ5YT7hoNbBFqK3TBcV41-TzIO-7n7w\",\n//   authDomain: \"fir-auth-6edd8.firebaseapp.com\",\n//   projectId: \"fir-auth-6edd8\",\n//   storageBucket: \"fir-auth-6edd8.appspot.com\",\n//   messagingSenderId: \"904760319835\",\n//   appId: \"1:904760319835:web:44fd0d957f114b4e51447e\",\n//   measurementId: \"G-Q4TYKH9GG7\",\n// };\n// const auth = getAuth();\n// const app = initializeApp(firebaseConfig);\n// const db = getFirestore(app);\n// const googleProvider = new firebase.auth.GoogleAuthProvider();\n// const signInWithGoogle = async () => {\n//   try {\n//     const res = await auth.signInWithPopup(googleProvider);\n//     const user = res.user;\n//     const query = await db\n//       .collection(\"users\")\n//       .where(\"uid\", \"==\", user.uid)\n//       .get();\n//     if (query.docs.length === 0) {\n//       await db.collection(\"users\").add({\n//         uid: user.uid,\n//         name: user.displayName,\n//         authProvider: \"google\",\n//         email: user.email,\n//       });\n//     }\n//   } catch (err) {\n//     console.error(err);\n//     alert(err.message);\n//   }\n// };\n// signInWithEmailAndPassword(auth, email, password)\n//   .then((userCredential) => {\n//     const user = userCredential.user;\n//   })\n//   .catch((error) => {\n//     const errorCode = error.code;\n//     const errorMessage = error.message;\n//   });\n// createUserWithEmailAndPassword(auth, email, password)\n//   .then((userCredential) => {\n//     const user = userCredential.user;\n//   })\n//   .catch((error) => {\n//     const errorCode = error.code;\n//     const errorMessage = error.message;\n//   });\n// const sendPasswordResetEmail = async (email) => {\n//   try {\n//     await auth.sendPasswordResetEmail(email);\n//     alert(\"Password reset link sent!\");\n//   } catch (err) {\n//     console.error(err);\n//     alert(err.message);\n//   }\n// };\n// const logout = () => {\n//   auth.signOut();\n// };\n// export {\n//   auth,\n//   db,\n//   signInWithEmailAndPassword,\n//   createUserWithEmailAndPassword,\n//   sendPasswordResetEmail,\n//   logout,\n// };","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/react/tell-me-react/src/conponents/Fire.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import {\n//   getAuth,\n//   signInWithEmailAndPassword,\n//   createUserWithEmailAndPassword,\n// } from \"firebase/auth\";\n// import { initializeApp } from \"firebase/app\";\n// import { getFirestore, collection, getDocs } from \"firebase/firestore/lite\";\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDIXJ5YT7hoNbBFqK3TBcV41-TzIO-7n7w\",\n//   authDomain: \"fir-auth-6edd8.firebaseapp.com\",\n//   projectId: \"fir-auth-6edd8\",\n//   storageBucket: \"fir-auth-6edd8.appspot.com\",\n//   messagingSenderId: \"904760319835\",\n//   appId: \"1:904760319835:web:44fd0d957f114b4e51447e\",\n//   measurementId: \"G-Q4TYKH9GG7\",\n// };\n// const auth = getAuth();\n// const app = initializeApp(firebaseConfig);\n// const db = getFirestore(app);\n\n// const googleProvider = new firebase.auth.GoogleAuthProvider();\n// const signInWithGoogle = async () => {\n//   try {\n//     const res = await auth.signInWithPopup(googleProvider);\n//     const user = res.user;\n//     const query = await db\n//       .collection(\"users\")\n//       .where(\"uid\", \"==\", user.uid)\n//       .get();\n//     if (query.docs.length === 0) {\n//       await db.collection(\"users\").add({\n//         uid: user.uid,\n//         name: user.displayName,\n//         authProvider: \"google\",\n//         email: user.email,\n//       });\n//     }\n//   } catch (err) {\n//     console.error(err);\n//     alert(err.message);\n//   }\n// };\n\n// signInWithEmailAndPassword(auth, email, password)\n//   .then((userCredential) => {\n//     const user = userCredential.user;\n//   })\n//   .catch((error) => {\n//     const errorCode = error.code;\n//     const errorMessage = error.message;\n//   });\n\n// createUserWithEmailAndPassword(auth, email, password)\n//   .then((userCredential) => {\n//     const user = userCredential.user;\n//   })\n//   .catch((error) => {\n//     const errorCode = error.code;\n//     const errorMessage = error.message;\n//   });\n\n// const sendPasswordResetEmail = async (email) => {\n//   try {\n//     await auth.sendPasswordResetEmail(email);\n//     alert(\"Password reset link sent!\");\n//   } catch (err) {\n//     console.error(err);\n//     alert(err.message);\n//   }\n// };\n// const logout = () => {\n//   auth.signOut();\n// };\n// export {\n//   auth,\n//   db,\n//   signInWithEmailAndPassword,\n//   createUserWithEmailAndPassword,\n//   sendPasswordResetEmail,\n//   logout,\n// };\n"]},"metadata":{},"sourceType":"module"}