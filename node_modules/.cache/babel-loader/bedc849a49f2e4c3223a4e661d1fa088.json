{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/mystudy/tell-me-react/src/components/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\"; // import { useSelector, useDispatch } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n\nimport \"../scss/components/comments.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentdate = new Date();\nvar datetime = currentdate.getFullYear() + \"-\" + currentdate.getMonth() + \"-\" + currentdate.getDay() + \"T\" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nconst Comment = _ref => {\n  _s();\n\n  let {\n    id,\n    body,\n    userId\n  } = _ref;\n  const [usersData, setUsersData] = React.useState([]);\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false,\n    id: \"\"\n  });\n  let dataAboutUser = JSON.parse(localStorage.user);\n  React.useEffect(() => {\n    getDataUser();\n  }, []);\n\n  const getDataUser = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`).then(response => response.json()).then(data => {\n      setUsersData(data);\n    });\n  };\n\n  const handleChange = e => {\n    setUpdateCommentBody(prevState => ({ ...prevState,\n      value: e.target.value\n    }));\n  };\n\n  const openUpdateBlock = (id, body) => {\n    setUpdateCommentBody(prevState => ({ ...prevState,\n      value: body,\n      openUptComm: true,\n      id\n    }));\n  };\n\n  const updateComment = (_ref2, updateBody) => {\n    let {\n      id\n    } = _ref2;\n    const data = {\n      body: updateBody,\n      updatedAt: datetime\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.patch(`https://ekreative-json-server.herokuapp.com/664/comments/${id}`, data, headers);\n    setUpdateCommentBody(prevState => ({ ...prevState,\n      openUptComm: false\n    }));\n  };\n\n  const deleteComment = (id, postId) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`\n    };\n    axios.delete(`https://ekreative-json-server.herokuapp.com/664/comments/${id}`, {\n      headers\n    });\n    console.log(`Bearer` + localStorage.getItem(\"token\"));\n    document.location.reload(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-data\",\n    children: updateCommentBody.openUptComm && id === updateCommentBody.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content-for-update\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updateCommentBody.value,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateComment(id, updateCommentBody.value),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"user-avatar\",\n        src: usersData.avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), localStorage.getItem(\"token\") && dataAboutUser.id === userId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openUpdateBlock(id, body),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteComment(id),\n          children: \"Delete\"\n        }, id + 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, id + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this) : \"\"]\n    }, id + 3 + \"li\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"Ph4uCp/dNqGHLv6TEH+k/EnEgTU=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/admin/Documents/mystudy/tell-me-react/src/components/Comment.jsx"],"names":["axios","React","currentdate","Date","datetime","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","Comment","id","body","userId","usersData","setUsersData","useState","updateCommentBody","setUpdateCommentBody","value","openUptComm","dataAboutUser","JSON","parse","localStorage","user","useEffect","getDataUser","fetch","then","response","json","data","handleChange","e","prevState","target","openUpdateBlock","updateComment","updateBody","updatedAt","headers","Authorization","getItem","slice","patch","deleteComment","postId","delete","console","log","document","location","reload","avatar"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\nimport \"../scss/components/comments.scss\";\n\nvar currentdate = new Date();\nvar datetime =\n  currentdate.getFullYear() +\n  \"-\" +\n  currentdate.getMonth() +\n  \"-\" +\n  currentdate.getDay() +\n  \"T\" +\n  currentdate.getHours() +\n  \":\" +\n  currentdate.getMinutes() +\n  \":\" +\n  currentdate.getSeconds();\n\nconst Comment = ({ id, body, userId }) => {\n  const [usersData, setUsersData] = React.useState([]);\n  const [updateCommentBody, setUpdateCommentBody] = React.useState({\n    value: \"\",\n    openUptComm: false,\n    id: \"\",\n  });\n\n  let dataAboutUser = JSON.parse(localStorage.user);\n\n  React.useEffect(() => {\n    getDataUser();\n  }, []);\n\n  const getDataUser = () => {\n    fetch(`https://ekreative-json-server.herokuapp.com/users/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsersData(data);\n      });\n  };\n\n  const handleChange = (e) => {\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      value: e.target.value,\n    }));\n  };\n\n  const openUpdateBlock = (id, body) => {\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      value: body,\n      openUptComm: true,\n      id,\n    }));\n  };\n\n  const updateComment = ({ id }, updateBody) => {\n    const data = {\n      body: updateBody,\n      updatedAt: datetime,\n    };\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.patch(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      data,\n      headers\n    );\n\n    setUpdateCommentBody((prevState) => ({\n      ...prevState,\n      openUptComm: false,\n    }));\n  };\n\n  const deleteComment = (id, postId) => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"token\").slice(1, -1)}`,\n    };\n    axios.delete(\n      `https://ekreative-json-server.herokuapp.com/664/comments/${id}`,\n      { headers }\n    );\n    console.log(`Bearer` + localStorage.getItem(\"token\"));\n    document.location.reload(true);\n  };\n\n  return (\n    <div key={id} className=\"comment-data\">\n      {updateCommentBody.openUptComm && id === updateCommentBody.id ? (\n        <div className=\"comment-content-for-update\">\n          <input\n            type=\"text\"\n            value={updateCommentBody.value}\n            onChange={handleChange}\n          />\n          <button onClick={() => updateComment(id, updateCommentBody.value)}>\n            Update\n          </button>\n        </div>\n      ) : (\n            <div key={id + 3 + \"li\"} className=\"comment-content\">\n              <img className=\"user-avatar\" src={usersData.avatar} alt=\"\" />\n            <p>{body}</p>\n            {localStorage.getItem(\"token\") && dataAboutUser.id === userId ? (\n              <div key={id + 1} className=\"button-block\">\n                <button onClick={() => openUpdateBlock(id, body)}>\n                  Update\n                </button>\n                <button key={id + 2} onClick={() => deleteComment(id)}>\n                  Delete\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}